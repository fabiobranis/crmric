#INCLUDE "MATA030.CH" 
#INCLUDE "PROTHEUS.CH" 
#INCLUDE "FWEVENTVIEWCONSTS.CH"                            
#INCLUDE "FWADAPTEREAI.CH"
#INCLUDE "FWMVCDEF.CH"     
#INCLUDE "XMLXFUN.CH"
#INCLUDE "TBICONN.CH"            
                           
#DEFINE SIGACRD 1
#DEFINE YMF     2                          
                       
Static lIntegra 	:= SuperGetMv("MV_LJGRINT", .F., .F.)   	//Verifica se a integracao esta habilitada
Static oIntegra 	:= Nil 								//Objeto do tipo LJCADAPXMLENVSA1

STATIC lAmbOffLn  := SuperGetMv("MV_LJOFFLN", Nil, .F.)	.AND. !(FindFunction("STFIsPOS") .AND. STFIsPOS() )  //Identifica se o ambiente esta operando em offline
STATIC lHistFiscal := IIf(FindFunction("HistFiscal"),HistFiscal(), .F.)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MATA030  ³ Autor ³ Jorge Queiroz         ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de atualizacao de Clientes                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±            
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Michel M.   ³05/03/07³118893³Correcao para permitir que sejam selecio- ³±±
±±³            ³        ³      ³-nados apenas bancos que nao estejam blo- ³±±
±±³            ³        ³      ³-queados por A6_MSBLQL.                   ³±±
±±³            ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MATA030(xRotAuto,nOpcAuto)

Local aRotAdic	 := {}
Local aIndexSA1	 := {}
Local cFiltraSA1 := ""
Local aCores	 := {}
Local lMA030COR  := ExistBlock("MA030COR")
Local lMA030BRW	 := ExistBlock("MA030BRW")
Local lMvLjIntFS := GetRpoRelease ("R5") .AND. SuperGetMV("MV_LJINTFS",,.F.) .AND. IIf(FindFunction("LjUpd90Ok"),LjUpd90Ok(),.F.) //Verifica parâmetro que verifica se o modulo sigaloja esta integrado com o Financial Services

Private cCadastro  := STR0006  //"Clientes" 
Private aMemos     := {{"A1_CODMARC","A1_VM_MARC"},{"A1_OBS","A1_VM_OBS"}}
Private bFiltraBrw := {|| Nil}
Private aRotina
Private aRotAuto   := Nil
Private aCpoAltSA1 := {} // Vetor usado na gravacao do historico de alteracoes
Private aCpoSA1    := {} // Vetor usado na gravacao do historico de alteracoes
Private lCGCValido := .F. // Variavel usada na validacao do CNPJ/CPF (utilizando o Mashup) 
Private l030Auto   := .F. // Variavel usada para saber se é rotina automática
Private cFilAux	   := cFilAnt // Variavel utilizada no FINC010	
//If xRotAuto <> Nil
//	l030Auto := .T.
//Endif
//-- Variavel usada para verificar se o disparo da funcao IntegDef() pode ser feita manualmente

Static lIntegDef  :=  FindFunction("GETROTINTEG") .And. FindFunction("FWHASEAI") .And. FWHasEAI("MATA030",.T.,,.T.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Array contendo as Rotinas a executar do programa      ³
//³ ----------- Elementos contidos por dimensao ------------     ³
//³ 1. Nome a aparecer no cabecalho                              ³
//³ 2. Nome da Rotina associada                                  ³
//³ 3. Usado pela rotina                                         ³
//³ 4. Tipo de Transa‡„o a ser efetuada                          ³
//³    1 - Pesquisa e Posiciona em um Banco de Dados             ³
//³    2 - Simplesmente Mostra os Campos                         ³
//³    3 - Inclui registros no Bancos de Dados                   ³
//³    4 - Altera o registro corrente                            ³
//³    5 - Remove o registro corrente do Banco de Dados          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

aRotina := MenuDef()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para adicao de campos memo do usuario       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nModulo == 72
	aMemUser := KEXF820()        
	If ValType( aMemUser ) == "A"
		AEval( aMemUser, { |x| AAdd( aMemos, x ) } ) 	
	EndIf 	
EndIf

If ExistBlock( "MA030MEM" ) 
	aMemUser := ExecBlock( "MA030MEM", .F., .F. ) 
	If ValType( aMemUser ) == "A"
		AEval( aMemUser, { |x| AAdd( aMemos, x ) } ) 	
	EndIf 	
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ponto de entrada para adicionar cores de legenda para os³
//³clientes.                                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lMA030COR
	aCores := ExecBlock( "MA030COR", .F., .F. )
	If ValType( aCores ) <> "A"
		aCores := {}
	EndIf
EndIf

//-- Ajusta SX3
AjustaSX3()
//-- Ajusta Help
AjustaHelp()
//Ajusta SCF 
AjustaSCF()
// Ajusta SX7
AjustaSX7()
                        
DbSelectArea("SA1")      

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Inclui tratamento para campos memo do Perfil de Cliente.³
//³Utilizado na rotina de ServiceDesk do SIGATMK.          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SA1->(FieldPos("A1_PRF_COD")) > 0	
	//aAdd(aMemos, {"A1_PRF_COD","A1_PRF_OBS"})
EndIf

If xRotAuto <> Nil
	DEFAULT nOpcAuto := 3
	aRotAuto := xRotAuto 
	l030Auto := .T.
	MBrowseAuto(nOpcAuto,aRotAuto,"SA1")
Else
	/*BEGINDOC
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ/mm˜¿
	//³MAN0000604-01 - Integração Protheus x Financial Service	 ³
	//³	Caso a rotina seja executada no módulo controle de lojas ³
	//³e esteja habilitada a integração com o Financial Services,³
	//³exibe a mensagem de que a rotina a ser executada é a      ³
	//³CRDA010                                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ/mm˜Ù
	ENDDOC*/
	If lMvLjIntFS .AND. nModulo == 12  
		MsgAlert( STR0067 + CRLF +; //"O módulo controle de lojas está integrado com o  Services. " 
		          STR0068 + CRLF +; //"Por esta razão o cadastro de clientes, deverá ser através da rotina CRDA010"
		          STR0069)///"Caminho: Atualizações ->Integrações Financial Services -> Cadastro -> Clientes."
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica a existencia de Filtros na mBrowse                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ		
		If lMa030Brw
			cFiltraSA1 := ExecBlock("MA030BRW",.F.,.F.)
			bFiltraBrw := {|| FilBrowse("SA1",@aIndexSA1,@cFiltraSA1)}
			Eval(bFiltraBrw)
		EndIf	
		mBrowse( 6, 1,22,75,"SA1",,,,,,aCores)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Finaliza o uso da funcao FilBrowse e retorna os indices padroes.       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lMa030Brw
			EndFilBrw("SA1",aIndexSA1)
		EndIf
	EndIf
EndIf

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A030Deleta³ Autor ³ Jorge Queiroz         ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de atualizacao de Clientes                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ A030Deleta(ExpC1,ExpN1,ExpN2)                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³          ³ ExpN1 = Numero do registro                                 ³±±
±±³          ³ ExpN2 = Opcao selecionada                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA030                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Conrado Q.  ³16/10/06³110135³ Nao permite a exclusao do cliente caso   ³±±
±±³            ³        ³      ³ tenha um chamado tecnico ou uma ordem de ³±±
±±³            ³        ³      ³ servico.                                 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
FUNCTION A030Deleta(cAlias,nReg,nOpc)
Local lFWCodFil 	:= FindFunction("FWCodFil")
Local cFilAtu		:= IIf( lFWCodFil, FWCodFil(), SM0->M0_CODFIL )

Local aUsrBut     := {}
Local aButtons    := {{"POSCLI",{|| a450F4Con()},OemtoAnsi(STR0017),OemtoAnsi(STR0018)}}
Local aSM0CodFil  := {}
Local aFiliais    := {}
Local aObjects    := {}
Local aSize       := {} 
Local aInfo       := {}
Local aPosObj     := {}  

Local cCodCli     := ""
Local cQuery      := ""
Local cQueryAD5   := ""
Local cQuerySL1   := ""
Local cQuerySFM	  := ""
Local cInd        := ""
Local cCondicao   := ""      
Local cKey        := ""
Local cCod        := ""

Local oDlg
Local lExitSC5
Local lExecuta    := .T.                 
Local l030DelT    := (ExistTemplate("M030DEL"))
Local l030Del     := (ExistBlock("M030DEL"))
Local lPodeApagar := .T.
Local lAtuADL 	  := SX2->(DbSeek("ADL"))
Local lNewWArea	  := .F.   
//-- Variavel usada para verificar se o disparo da funcao IntegDef() pode ser feita manualmente
Local lIntegDef  :=  FindFunction("GETROTINTEG") .And. FindFunction("FWHASEAI") .And. FWHasEAI("MATA030",.T.,,.T.)

Local nRecnoSM0   := SM0->(RecNo())
Local nLoop       := 0 
Local nPosMemo    := 0 
Local nOpcA       := 0
Local nInd        := 0
Local nBusca      := 0 
Local nDel        := 0
Local nPos        := 0
Local bCampoSA1   := { |x| SA1->(Field(x)) }
Local aCmps       := {}
Local lDelJUR     := .F.
Local lDelJURErr  := .F.
Local aErrorJUR   := {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta a entrada de dados do arquivo                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aTELA[0][0],aGETS[0]

if lAtuADL
	lNewWArea := ADL->(FieldPos("ADL_CGC")) > 0	// Indica se utiliza a nova workarea
endif

//MV_RMCLASS: Parametro de ativacao da integracao do Protheus x RM Classis Net (RM Sistemas)
If GetNewPar("MV_RMCLASS", .F.) .and. SA1->( FieldPos("A1_ORIGEM") ) > 0
	//Nao permite a exclusao do cliente caso este cliente foi incluido a partir do sistema RM Classis Net (RM Sistemas)
	if alltrim(SA1->A1_ORIGEM) == "S"
		Aviso(STR0023, STR0050, {STR0024}) //"Atenção!"###"Somente é permitido excluir este cliente a partir do sistema RM Classis Net."###"Ok"
		Return .t.
	endif
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Caso exista o execblock , executa ,se voltar³
//³.F. abandona o programa                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If l030DelT
	lExecuta := ExecTemplate("M030DEL",.f.,.f.)
	If !lExecuta
		Return .T.
	Endif
Endif 

If nModulo == 72
	lExecuta := KEXF700()
	If !lExecuta
		Return .T.
	Endif
Endif

If l030Del
	lExecuta := ExecBlock("M030DEL",.f.,.f.)
	If !lExecuta
		Return .T.
	Endif
Endif

If ! Select("JA2") == 0 .AND. ! SA1->(FieldPos("A1_NUMRA")) == 0 .AND. ! Empty(SA1->A1_NUMRA)
	JA2->(dbSetOrder(1))
 	If JA2->(dbSeek(xfilial("JA2")+SA1->A1_NUMRA))
		Return .F.
	EndIF
EndIf         

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para criacao de botoes do usuario  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock( "MA030BUT" ) 
	If Valtype( aUsrBut := Execblock( "MA030BUT", .F., .F., { 5 } ) ) == "A"
		AEval( aUsrBut, { |x| AAdd( aButtons, x ) } ) 
	EndIF 
EndIf 		
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para EXCLUSAO de botoes            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock( "MA030DBT" ) 
	If Valtype( aUsrBut := Execblock( "MA030DBT", .f., .f., { 5 } ) ) == "A"
		For nDel:=1 to Len(aUsrBut)
			nPos := Ascan(aButtons,{ |x| x[1] == AllTrim(aUsrBut[nDel]) })		
			If nPos > 0
				ADel(aButtons,nPos)
				ASize(aButtons,Len(aButtons)-1)
			EndIf
		Next nDel
	EndIF 
EndIf 		
While .T.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Envia para processamento dos Gets          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nOpcA:=0
	SoftLock(cAlias)
	
	If ( Type("l030Auto") == "U" .OR. !l030Auto )
	
		aSize := MsAdvSize()       

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ajusta a largura para o tamanho padrao Protheus ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		
		aObjects := {}
		AAdd( aObjects, { 100, 100, .T., .T. } )
		aInfo    := { aSize[1], aSize[2], aSize[3], aSize[4], 2, 2 } 
		
		aPosObj := MsObjSize( aInfo, aObjects ) 
			
		DEFINE MSDIALOG oDlg TITLE cCadastro FROM aSize[7],0 TO aSize[6],aSize[5] OF oMainWnd PIXEL
		nOpcA := EnChoice( cAlias, nReg, nOpc,,"AC",STR0009,, aPosObj[1] )  //"Quanto … exclus„o?"
		nOpca := 1
		ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| IIf(ValBTOk(nOpc),(nOpca := 2,oDlg:End()),nil) },{|| nOpca := 1,oDlg:End()},,aButtons)
	Else
		nOpcA := 2
	EndIf
	DbSelectArea(cAlias)
	
	If nOpcA == 2
		
		// Preenche um array com as filiais
		
		DbSelectArea("SM0")
		DbGoTop()
		Do While ! Eof()
			If SM0->M0_CODIGO == cEmpAnt
				Aadd(aSM0CodFil, FWGETCODFILIAL)
			Endif
			dbSkip()
		End	
		DbGoto(nRecnoSM0)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Antes de deletar eu vou verificar se existe movimentacao     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cCod := SA1->A1_COD+SA1->A1_LOJA

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se existe Orcamento no Televendas SUA               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea("SUA")
		DbSetOrder(6)
		
		aFiliais := If(FWModeAccess("SUA",3)=="E" .AND. FWModeAccess("SA1",3)=="C", aClone(aSM0CodFil), {xFilial()})
		For nBusca := 1 To Len(aFiliais)
        	If DbSeek(aFiliais[nBusca]+cCod)
        		Help(" ",1,"TMKNDELREL")
				lPodeApagar := .F.
				DbSelectArea("SA1")
				DbSetOrder(1)
				MsUnLock()
				Exit
			EndIf
		Next			
        
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifico se o cliente esta esta associado a alguma estrutura de clientes³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	 	If lPodeApagar 
	        ACY->(dbSetOrder(1))				//ACY_FILIAL+ACY_GRPVEN  
	       	If(ACY->(dbSeek(xFilial("ACY")+SA1->A1_GRPVEN))) 
	       		Aviso( STR0023, STR0062,; 		//Atenção  / Este cliente esta associado a uma estrutura de clientes e não poderá ser excluído.
					{STR0024 }, 2 ) 			//Ok 
				lPodeApagar := .F.
				Exit	
			EndIf	
    	EndIf
        
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifico se o cliente esta esta associado ao Grupo Societário ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lPodeApagar .And. AliasInDic("AGU")
			DbSelectArea("AGU")  
			DbSetOrder(2)
			If AGU->(DbSeek(xFilial("AGU")+SA1->A1_COD+SA1->A1_LOJA))
				Help(" ",1,"NODELETA",,STR0076,2,0)	//"Este cliente esta sendo utilizado pela rotina de Grupos Societários."
				lPodeApagar := .F.				
				Exit
			EndIf
		EndIf
				    
	    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifico se o cliente esta associado a algum apontamento CRM - ADM VENDAS	³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lPodeApagar 
			#IFDEF TOP
				cQueryAD5 := "SELECT AD5_CODCLI, AD5_LOJA "
				cQueryAD5 += " FROM " + RetSqlName("AD5")+ " AD5 "
				cQueryAD5 += " WHERE "
				cQueryAD5 += " AD5_FILIAL = '"+xFilial("AD5")+"' AND "
				cQueryAD5 += " AD5_CODCLI = '"+SA1->A1_COD+"' AND "
				cQueryAD5 += " AD5_LOJA   = '"+SA1->A1_LOJA+"' AND "
				cQueryAD5 += " AD5.D_E_L_E_T_ = ' ' "
						
				cQueryAD5 := ChangeQuery(cQueryAD5)
				dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQueryAD5),"TRB",.F.,.T.)
			   
			   	If !TRB->(EOF())
			   		Aviso( STR0023, STR0063,; 		// "Este cliente possui apontamento(s) associado(s) na rotina CRM - Adm Vendas e não poderá ser excluído. "
						{STR0024 }, 2 ) 			// Ok 
					lPodeApagar := .F.				
				Endif	    
			 	TRB->(dbCloseArea())
		  	#ENDIF
		  EndIf
		  
		//Verifica se o cliente está associado a alguma tes inteligente.
		If lPodeApagar .AND. AliasInDic("SFM")
		    
			cQuerySFM := "SELECT FM_CLIENTE, COUNT(FM_CLIENTE) TOTSFM "
			cQuerySFM += " FROM "+RetSqlName("SFM")+" SFM "
			cQuerySFM += " WHERE "
			cQuerySFM += " FM_FILIAL = '"+xFilial("SFM")+"' AND "
			cQuerySFM += " FM_CLIENTE = '"+SA1->A1_COD+"' AND "
			cQuerySFM += " FM_LOJACLI = '"+SA1->A1_LOJA+"' AND "
			cQuerySFM += " SFM.D_E_L_E_T_ = ' ' "
			cQuerySFM += " GROUP BY FM_CLIENTE "
					
			cQuerySFM := ChangeQuery(cQuerySFM)
			dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuerySFM),"SFMT",.F.,.T.)
		    
		    If SFMT->TOTSFM > 0		    	
		    	Aviso( STR0023, STR0110,;	//"Este cliente está associado com alguma TES inteligente."
		    		{STR0024 }, 2 ) 			// Ok 
		    	lPodeApagar := .F.	
		    EndIf
			
			SFMT->(DbCloseArea())
			
	    EndIf	

		  	

	 	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifico se o cliente esta associado a algum orçamento Venda Direta			³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lPodeApagar .And. AliasInDic("SL1") 
			#IFDEF TOP
				cQuerySL1 := "SELECT L1_CLIENTE, L1_LOJA "
				cQuerySL1 += " FROM " + RetSqlName("SL1")+ " SL1 "
				cQuerySL1 += " WHERE "
				cQuerySL1 += " L1_FILIAL = '"+xFilial("SL1")+"' AND "
				cQuerySL1 += " L1_CLIENTE = '"+SA1->A1_COD+"' AND "
				cQuerySL1 += " L1_LOJA   = '"+SA1->A1_LOJA+"' AND "
				cQuerySL1 += " SL1.D_E_L_E_T_ = ' ' "
						
				cQuerySL1 := ChangeQuery(cQuerySL1)
				dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuerySL1),"TRBSL1",.F.,.T.)
			   
			   	If !TRBSL1->(EOF())
			   		Aviso( STR0023,STR0098,; 		// "Este cliente possui orçamento(s) na rotina Venda Direta, e não poderá ser excluído."
						{STR0024 }, 2 ) 			// Ok 
					lPodeApagar := .F.				
				Endif	    
			 	TRBSL1->(dbCloseArea())
		  	#ENDIF
		  EndIf
		  
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se existe o Cliente vinculado a um LayOut no Edi    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lPodeApagar 
			DbSelectArea("DEC") 
			DbSetOrder(1)
			If DEC->(DbSeek(xFilial("DEC")+cCod))
				Help(" ",1,"TMSCLIEDI")
				lPodeApagar := .F.				
				Exit
			EndIf
			
			If ! lPodeApagar
				Exit
			EndIf
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se existe Atendimento no Telemarketing SUC          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lPodeApagar
			DbSelectArea("SUC")
			DbSetOrder(2)
	
			aFiliais := If(FWModeAccess("SUC",3)=="E" .AND. FWModeAccess("SA1",3)=="C", aClone(aSM0CodFil), {xFilial()})
			For nBusca := 1 To Len(aFiliais)		
	        	If DbSeek(aFiliais[nBusca]+'SA1'+cCod)
	        		Help(" ",1,"TMKNDELREL")
					lPodeApagar := .F.
					DbSelectArea("SA1")
					DbSetOrder(1)
					MsUnLock()
					Exit
				EndIf
			Next			
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se existe na rotina de Localização Física (SIGATEC)	 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lPodeApagar .And. AliasInDic("AGW")
			dbSelectArea("AGW")  
			dbSetOrder(3)	//AGW_FILIAL+AGW_CLIENT+AGW_LOJA+AGW_PRODUT+AGW_NUMSER
			If AGW->(dbSeek(xFilial("AGW")+SA1->A1_COD+SA1->A1_LOJA))
				Help(" ",1,"NODELETA",,STR0106,2,0)	//"Este cliente esta sendo utilizado pela rotina de Localização Física do módulo Gestão de Serviços."
				lPodeApagar := .F.				
				Exit
			Else
				dbSelectArea("AGW")  
				dbSetOrder(4)	//AGW_FILIAL+AGW_CODFAB+AGW_LOJAFA+AGW_PRODUT+AGW_NUMSER
				If AGW->(dbSeek(xFilial("AGW")+SA1->A1_COD+SA1->A1_LOJA))
					Help(" ",1,"NODELETA",,STR0106,2,0)	//"Este cliente esta sendo utilizado pela rotina de Localização Física do módulo Gestão de Serviços."
					lPodeApagar := .F.				
					Exit
				EndIf
			EndIf
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se existe Pedido de Venda                           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea("SC5")
		DbSetOrder(3)


    	aFiliais := If(FWModeAccess("SC5",3)=="E" .AND. FWModeAccess("SA1",3)=="C", aClone(aSM0CodFil), {xFilial()})
  		For nBusca := 1 To Len(aFiliais)		
		    DbSeek(aFiliais[nBusca]+SA1->A1_COD)
				While !Eof() .AND. aFiliais[nBusca]+SA1->A1_COD == SC5->C5_FILIAL+;
	                               SC5->C5_CLIENTE .AND. lPodeApagar
					If ((SA1->A1_LOJA == SC5->C5_LOJACLI) .AND.;
	   	                         ! (SC5->C5_TIPO $ "BD"))
						Help(" ",1,"MA030TEMPV",, "Filial " + aFiliais[nBusca], 3, 0)
						lPodeApagar := .F.
						Exit
					EndIf
	
					If (SA1->A1_LOJA == SC5->C5_LOJAENT) .AND. !SC5->C5_TIPO$"DB"
						lPodeApagar := .F.
						Help(" ",1,"MA030LOJEN",, "Filial " + aFiliais[nBusca], 3, 0)
						Exit
					EndIf
					
					DbSkip()
				End  
			If !lPodeApagar
				Exit
			EndIf
		Next			
		
		DbSetOrder(1)

		If ! lPodeApagar
			DbSelectArea("SA1")
			MsUnLock()
			Exit
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se existe Contas a Receber deste cliente       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		
		DbSelectArea("SE1")      // Contas a receber
		DbSetOrder(2)

		aFiliais := If(FWModeAccess("SE1",3)=="E" .AND. FWModeAccess("SA1",3)=="C", aClone(aSM0CodFil), {xFilial()})
		For nBusca := 1 To Len(aFiliais)		
			If DbSeek(aFiliais[nBusca]+cCod)
				Help(" ",1,"MA030TEMCR",, "Filial " + aFiliais[nBusca], 3, 0)
				DbSelectArea(cAlias)
				MsUnLock()
				lPodeApagar := .F.
				Exit
			EndIf
		Next

		DbSetOrder(1)

		If ! lPodeApagar
			Exit
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se existe Nota Fiscal de saida para este cliente ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea("SF2")
		DbSetOrder(2)

		aFiliais := If(FWModeAccess("SF2",3)=="E" .AND. FWModeAccess("SA1",3)=="C", aClone(aSM0CodFil), {xFilial()})
  		For nBusca := 1 To Len(aFiliais)		
			DbSeek(aFiliais[nBusca]+cCod)
	
			While !Eof() .AND. aFiliais[nBusca]+cCod == SF2->F2_FILIAL+SF2->F2_CLIENTE+SF2->F2_LOJA
				If ! (SF2->F2_TIPO $ "BD")
					Help(" ",1,"MA030TEMNF",, "Filial " + aFiliais[nBusca], 3, 0)
					DbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
				DbSkip()    
			End
		Next
		
		DbSetOrder(1)                                                                      
		
		If lPodeApagar 
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se existe Base Instalada deste cliente       ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			AA3->( dbSetOrder( 1 ) ) 
			If AA3->( dbSeek( xFilial( "AA3" ) + cCod ) )
				Help( " ", 1, "MA030TEMBA" ) // "O cliente nao pode ser excluido pois existe base instalada para o mesmo !"
				lPodeApagar := .F. 
			EndIf 		
		EndIf 

		If ! lPodeApagar
			Exit
		Endif

         //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	  	   //³ Verifica se existe referencias cadastradas deste cliente  ³
	  	   //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			DbSelectArea("SAO")      // Contas a receber
			DbSetOrder(1)

			aFiliais := If(FWModeAccess("SAO",3)=="E" .AND. FWModeAccess("SA1",3)=="C", aClone(aSM0CodFil), {xFilial()})
			For nBusca := 1 To Len(aFiliais)		
				If dbSeek(aFiliais[nBusca]+cCod)
					Help(" ",1,"MATA030REF",, "Filial " + aFiliais[nBusca], 3, 0)
					DbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
			Next          
			
		If lPodeApagar 
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se existe Orcamento para este cliente        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			SCJ->(DbSetOrder(3)) 
			If SCJ->(DbSeek(xFilial("SCJ") + cCod ))
				Help(" ", 1,"MATA030ORC") // "Este cliente não poderá ser excluído pois há orçamento cadastrado !"
				lPodeApagar := .F. 
			EndIf 		
		EndIf 	
							
			If ! lPodeApagar
				Exit
			Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se existe Pontos por setor                       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lPodeApagar
			DA7->(DbSetOrder(2))
			If DA7->(DbSeek(xFilial("DA7")+cCod))
				Help(" ",1,"NODELETA")
				lPodeApagar := .F.				
				Exit
			EndIf
		EndIf  
		
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se existe Verba de Vendas  para este Cliente     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lPodeApagar 
			dbSelectArea("ACK")
			dbSetOrder(5)
			
			aFiliais := If(! Empty(xFilial("ACK")) .and. Empty(xFilial("SA1")), aClone(aSM0CodFil), {xFilial("ACK")})
			For nBusca := 1 to Len(aFiliais)
				If dbSeek(aFiliais[nBusca]+cCod)
					Aviso(STR0023,STR0071,{STR0024},2) //"Atencao!"###"Este cliente não poderá ser excluído pois há Verba de Vendas relacionado."###"Ok"
					MsUnLock()
					lPodeApagar := .F.
				EndIf
			Next 
		EndIf
		If lPodeApagar .And. AliasInDic("AGC")
			dbSelectArea("AGC")
			AGC->(dbSetOrder(2))
			If dbSeek(xFilial("AGC")+SA1->A1_COD+SA1->A1_LOJA)
				Aviso(STR0023,STR0086,{STR0024},2)  //"Este cliente não poderá ser excluído, pois esta associado a Regras de Monitoração."
				lPodePagar := .F.
				Exit			   
			EndIf	
		EndIf			
        
      	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Integracao com modulo TMS   					        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If IntTms()
			If lPodeApagar  
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se existe Contrato de Cliente                  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				AAM->( dbSetOrder( 2 ) ) 
				If AAM->(DbSeek(xFilial("AAM") + cCod))
					Help(" ",1,"MATA030DV8") //Nao e possivel excluir o cliente.  Verifique os Doc e Regras existentes para este cliente.
					lPodeApagar := .F.
					Exit
				EndIf		
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se existe Perfil de Cliente                    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				DUO->( dbSetOrder( 1 ) ) 
				If DUO->(DbSeek(xFilial("DUO") + cCod))
					Help(" ",1,"MATA030DV7") //Nao e possivel excluir o cliente.  Verifique os Doc e Regras existentes para este cliente.
					lPodeApagar := .F.
					Exit
				EndIf			
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se existe Doc e Regras deste cliente           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				DV1->( dbSetOrder( 1 ) ) 
				If DV1->(DbSeek(xFilial("DV1") + cCod))
					Help(" ",1,"MATA030DV1") //Nao e possivel excluir o cliente.  Verifique os Doc e Regras existentes para este cliente.
					lPodeApagar := .F.
					Exit
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se existe Observações de Clientes (TMSA610)    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				DV2->( dbSetOrder( 1 ) ) 
				If DV2->(DbSeek(xFilial("DV2") + cCod))
					Help(" ",1,"MATA030DV2") //Nao e possivel excluir o cliente.  Verifique a rotina observações de clientes (TMSA610) para este cliente.
					lPodeApagar := .F.
					Exit
				EndIf 
 				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se existe Inscricoes Cliente      (TMSA620)    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				DV3->( dbSetOrder( 1 ) ) 
				If DV3->(DbSeek(xFilial("DV3") + cCod))
					Help(" ",1,"MATA030DV3") //Nao e possivel excluir o cliente.  Verifique a rotina Inscricoes Cliente (TMSA620) para este cliente.
					lPodeApagar := .F.
					Exit
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se existe Bloqueio Cliente        (TMSA630)    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				DV5->( dbSetOrder( 1 ) ) 
				If DV5->(DbSeek(xFilial("DV5") + cCod))
					Help(" ",1,"MATA030DV5") //Nao e possivel excluir o cliente.  Verifique a rotina Bloqueio de cliente (TMSA630) para este cliente.
					lPodeApagar := .F.
					Exit
				EndIf 				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se existe Averbação cliente       (TMSA650)    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				DV6->( dbSetOrder( 2 ) ) 
				If DV6->(DbSeek(xFilial("DV6") + cCod))
					Help(" ",1,"MATA030DV6") //Nao e possivel excluir o cliente.  Verifique a rotina Averbação Cliente (TMSA650) para este cliente.
					lPodeApagar := .F.
					Exit
				EndIf 				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se existe Prazos de Regioes por cliente  (TMSA395)³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				DVN->( dbSetOrder( 1 ) ) 
				If DVN->(DbSeek(xFilial("DVN") + cCod))
					Help(" ",1,"MATA030DVN") //Nao e possivel excluir o cliente.  Verifique a rotina Prazos de Regioes por cliente (TMSA395) para este cliente.
					lPodeApagar := .F.
					Exit
				EndIf 
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se existe Consignatario    (TMSA100)³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				DTI->( dbSetOrder( 1 ) ) 
				If DTI->(DbSeek(xFilial("DVN") + cCod))
					Help(" ",1,"MATA030DTI") //Nao e possivel excluir o cliente.  Verifique a rotina Consignatarios (TMSA100) para este cliente.
					lPodeApagar := .F.
					Exit
				EndIf  
			EndIf
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se existe Time Service                           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		#IFDEF TOP
			If TcSrvType() <> "AS/400"     
			
				DAF->( DbSetOrder( 1 ) ) 
			
				cQuery := "SELECT COUNT(*) QTDTIME "
				cQuery += " FROM " + RetSqlName("DAF")+ " DAF "
				cQuery += " WHERE "
				cQuery += " DAF_FILIAL = '"+xFilial("DAF")+"' AND "
				cQuery += " DAF_CODCLI = '"+SA1->A1_COD+"' AND "
				cQuery += " DAF_LOJA   = '"+SA1->A1_LOJA+"' AND "
				cQuery += " DAF.D_E_L_E_T_ = ' ' "
				
				cQuery := ChangeQuery(cQuery)
				dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),"QRYVAL",.F.,.T.)
				lQuery := .T.
				
		        If QRYVAL->QTDTIME > 0
		        	Help(" ",1,"NODELETA") //Nao e possivel excluir o ajudante pois o mesmo encontras-se relacionado a outros cadastro ### INCLUIR ATUSX
					lPodeApagar := .F.				
				Endif	        	
		
				DbSelectArea("QRYVAL")
				dbCloseArea()
				DbSelectArea("DAF")
				
			Else
		#ENDIF
		
				DbSelectArea("DAF")
				DbSetOrder(1)
				cInd := CriaTrab(NIL,.F.)
		
				cKey := IndexKey()
				cCondicao := 'DAF_FILIAL == "'+xFilial("DAF")+'" .AND.'
				cCondicao += 'DAF_CODCLI == "'+SA1->A1_COD+'" .AND.'		
				cCondicao += 'DAF_LOJA   == "'+SA1->A1_LOJA+'" '		
		
				IndRegua("DAF",cInd,cKey,,cCondicao) //"Selecionando Registros ..."
				nInd := RetIndex("DAF")
		
				#IFNDEF TOP
					DbSetIndex(cInd+OrdBagExT())
				#ENDIF   	
				DbSetOrder(nInd+1)
				DbGotop()
		
				If DAF->(!Eof())
		        	Help(" ",1,"NODELETA") //Nao e possivel excluir o ajudante pois o mesmo encontras-se relacionado a outros cadastro ### INCLUIR ATUSX
					lPodeApagar := .F.				
				Endif
		
				DbSelectArea("DAF")
				dbClearFilter()
				RetIndex("DAF")
				Ferase(cInd+OrdBagExt())
				
		#IFDEF TOP
			Endif
		#ENDIF		
		
		If ! lPodeApagar
			Exit
		Endif


		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se existe Regras de Entrega                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		#IFDEF TOP
			If TcSrvType() <> "AS/400"
			
				DAD->( DbSetOrder( 1 ) )
			
				cQuery := "SELECT COUNT(*) QTDREGRA "
				cQuery += " FROM " + RetSqlName("DAD")+ " DAD "
				cQuery += " WHERE "
				cQuery += " DAD_FILIAL = '"+xFilial("DAD")+"' AND "
				cQuery += " DAD_CODCLI = '"+SA1->A1_COD+"' AND "
				cQuery += " DAD_LOJA   = '"+SA1->A1_LOJA+"' AND "
				cQuery += " DAD.D_E_L_E_T_ = ' ' "
				
				cQuery := ChangeQuery(cQuery)
				dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),"QRYVAL",.F.,.T.)
				lQuery := .T.
				
		        If QRYVAL->QTDREGRA > 0
		        	Help(" ",1,"NODELETA") //Nao e possivel excluir o ajudante pois o mesmo encontras-se relacionado a outros cadastro ### INCLUIR ATUSX
					lPodeApagar := .F.				
				Endif	        	
		
				DbSelectArea("QRYVAL")
				dbCloseArea()
				DbSelectArea("DAD")
		
			Else
		#ENDIF
		
				DbSelectArea("DAD")
				DbSetOrder(1)
				cInd := CriaTrab(NIL,.F.)
		
				cKey := IndexKey()
				cCondicao := 'DAD_FILIAL == "'+xFilial("DAD")+'" .AND.'
				cCondicao += 'DAD_CODCLI == "'+SA1->A1_COD+'" .AND.'		
				cCondicao += 'DAD_LOJA   == "'+SA1->A1_LOJA+'" '		
		
				IndRegua("DAD",cInd,cKey,,cCondicao) //"Selecionando Registros ..."
				nInd := RetIndex("DAD")
		
				#IFNDEF TOP
					DbSetIndex(cInd+OrdBagExT())
				#ENDIF   	
				DbSetOrder(nInd+1)
				DbGotop()
		
				If DAD->(!Eof())
		        	Help(" ",1,"NODELETA") //Nao e possivel excluir o ajudante pois o mesmo encontras-se relacionado a outros cadastro ### INCLUIR ATUSX
					lPodeApagar := .F.				
				Endif
		
				DbSelectArea("DAD")
				dbClearFilter()
				RetIndex("DAD")
				Ferase(cInd+OrdBagExt())
				
		#IFDEF TOP
			EndIf
		#ENDIF		

		If ! lPodeApagar
			Exit
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se existem Regras de bonificacao financeira      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		#IFDEF TOP
			If TcSrvType() <> "AS/400"
			
				AI1->( DbSetOrder( 1 ) )
			
				cQuery := "SELECT COUNT(*) QTDREGRA "
				cQuery += "FROM " + RetSqlName("AI1")+ " AI1 "
				cQuery += "WHERE "
				cQuery += "AI1_FILIAL='"+xFilial("AI1")+"' AND "
				cQuery += "AI1_CODCLI='"+SA1->A1_COD   +"' AND "
				cQuery += "AI1_LOJA='"  +SA1->A1_LOJA  +"' AND "
				cQuery += "AI1.D_E_L_E_T_=' '"
				
				cQuery := ChangeQuery(cQuery)
				dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),"QRYVAL",.F.,.T.)
				lQuery := .T.
				
				If QRYVAL->QTDREGRA > 0
					Help(" ",1,"NODELETA") //Nao e possivel excluir o cliente pois o mesmo encontras-se relacionado a outros cadastro ### INCLUIR ATUSX
					lPodeApagar := .F.				
				EndIf	        	
		
				QRYVAL->( dbCloseArea() )   
				DbSelectArea( "SA1" )
		
			Else
		#ENDIF
		
				AI1->( DbSetOrder( 2 ) ) 
				If AI1->( DbSeek( xFilial( "AI1" ) + SA1->A1_COD + SA1->A1_LOJA ) )
		        	Help(" ",1,"NODELETA") //Nao e possivel excluir o ajudante pois o mesmo encontras-se relacionado a outros cadastro ### INCLUIR ATUSX
					lPodeApagar := .F.				
				Endif
		
		#IFDEF TOP
			Endif
		#ENDIF		
		
		If ! lPodeApagar
			Exit
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se existem Ordens de servicos                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		#IFDEF TOP
			If TcSrvType() <> "AS/400"
			
				AB6->( DbSetOrder( 1 ) )
			
				cQuery := "SELECT COUNT(*) QTDORDENS "
				cQuery += "FROM " + RetSqlName("AB6")+ " AB6 "
				cQuery += "WHERE "
				cQuery += "AB6_FILIAL='"+xFilial("AB6")+"' AND "
				cQuery += "AB6_CODCLI='"+SA1->A1_COD   +"' AND "
				cQuery += "AB6_LOJA='"  +SA1->A1_LOJA  +"' AND "
				cQuery += "AB6.D_E_L_E_T_=' '"
				
				cQuery := ChangeQuery(cQuery)
				dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),"QRYVAL",.F.,.T.)
				lQuery := .T.
				
				If QRYVAL->QTDORDENS > 0
					MsgStop(STR0034, STR0023) // "Este cliente possui uma ordem de servico e nao podera ser excluido." // "Atencao!"
					lPodeApagar := .F.				
				Endif	        	
		
				QRYVAL->( dbCloseArea() )   
				DbSelectArea( "SA1" )
		
			Else
		#ENDIF
		
				AB6->( DbSetOrder( 2 ) ) 
				If AB6->( DbSeek( xFilial( "AB6" ) + SA1->A1_COD + SA1->A1_LOJA ) )
					MsgStop(STR0034, STR0023) // "Este cliente possui uma ordem de servico e nao podera ser excluido." // "Atencao!"
					lPodeApagar := .F.				
				EndIf
		
		#IFDEF TOP
			EndIf
		#ENDIF		
		
		If ! lPodeApagar
			Exit
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se existem Chamados tecnicos                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		#IFDEF TOP
			If TcSrvType() <> "AS/400"
			
				AB1->( DbSetOrder( 1 ) )
			
				cQuery := "SELECT COUNT(*) QTDCHAMADOS "
				cQuery += "FROM " + RetSqlName("AB1")+ " AB1 "
				cQuery += "WHERE "
				cQuery += "AB1_FILIAL='"+xFilial("AB1")+"' AND "
				cQuery += "AB1_CODCLI='"+SA1->A1_COD   +"' AND "
				cQuery += "AB1_LOJA='"  +SA1->A1_LOJA  +"' AND "
				cQuery += "AB1.D_E_L_E_T_=' '"
				
				cQuery := ChangeQuery(cQuery)
				dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),"QRYVAL",.F.,.T.)
				lQuery := .T.
				
				If QRYVAL->QTDCHAMADOS > 0
					MsgStop(STR0033, STR0023) // "Este cliente possui um chamado tecnico e nao podera ser excluido." // "Atencao!"
					lPodeApagar := .F.				
				Endif	        	
		
				QRYVAL->( dbCloseArea() )   
				DbSelectArea( "SA1" )
		
			Else
		#ENDIF
		
				AB1->( DbSetOrder( 2 ) ) 
				If AB1->( DbSeek( xFilial( "AB1" ) + SA1->A1_COD + SA1->A1_LOJA ) )
				   MsgStop(STR0033, STR0023) // "Este cliente possui um chamado tecnico e nao podera ser excluido." // "Atencao!"
					lPodeApagar := .F.				
				EndIf
		
		#IFDEF TOP
			EndIf
		#ENDIF		
		
		If ! lPodeApagar
			Exit
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se existe Nota de Entrada                        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		#IFDEF TOP
			If TcSrvType() <> "AS/400"
			
				SF1->( DbSetOrder( 1 ) )
			
				cQuery := "SELECT COUNT(*) QTDNFENT "
				cQuery += " FROM " + RetSqlName("SF1")+ " SF1 "
				cQuery += " WHERE "
				cQuery += " F1_FILIAL = '"+xFilial("SF1")+"' AND "
				cQuery += " F1_FORNECE = '"+SA1->A1_COD+"' AND "
				cQuery += " F1_LOJA   = '"+SA1->A1_LOJA+"' AND "
				cQuery += " (F1_TIPO   = 'B' OR "				
				cQuery += " F1_TIPO   = 'D') AND "								
				cQuery += " SF1.D_E_L_E_T_ = ' ' "
				
				cQuery := ChangeQuery(cQuery)
				dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),"QRYVAL",.F.,.T.)
				lQuery := .T.
				
		        If QRYVAL->QTDNFENT > 0
		        	Help(" ",1,"NODELETA") //Nao e possivel excluir o ajudante pois o mesmo encontras-se relacionado a outros cadastro ### INCLUIR ATUSX
					lPodeApagar := .F.				
				EndIf	        	
		
				DbSelectArea("QRYVAL")
				dbCloseArea()
				DbSelectArea("SF1")
		
			Else
		#ENDIF
		
				DbSelectArea("SF1")
				DbSetOrder(1)
				cInd := CriaTrab(NIL,.F.)
		
				cKey := IndexKey()
				cCondicao := 'F1_FILIAL == "'+xFilial("SF1")+'" .AND.'
				cCondicao += 'F1_FORNECE == "'+SA1->A1_COD+'" .AND.'		
				cCondicao += 'F1_LOJA   == "'+SA1->A1_LOJA+'" .AND.'		
				cCondicao += 'F1_TIPO   $ "DB" '		
		
				IndRegua("SF1",cInd,cKey,,cCondicao) //"Selecionando Registros ..."
				nInd := RetIndex("SF1")
		
				#IFNDEF TOP
					DbSetIndex(cInd+OrdBagExT())
				#ENDIF   	
				DbSetOrder(nInd+1)
				DbGotop()
		
				If SF1->(!Eof())
		        	Help(" ",1,"NODELETA") //Nao e possivel excluir o ajudante pois o mesmo encontras-se relacionado a outros cadastro ### INCLUIR ATUSX
					lPodeApagar := .F.				
				Endif
		
				DbSelectArea("SF1")
				dbClearFilter()
				RetIndex("SF1")
				Ferase(cInd+OrdBagExt())
				
		#IFDEF TOP
			EndIf
		#ENDIF		
		
		//-- Executa validacoes do modulo SIGATMS
		If lPodeApagar .AND. IntTms()
			lPodeApagar := MTA030TMS()
		EndIf

		If ! lPodeApagar
			Exit
		EndIf

    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se o Cliente esta ligado a uma familia, operadora,             ³
	//³grupo empresa, contrato ou sub-contrato do SIGAPLS-Modulo Plano de Saude.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	If lPodeApagar
		DbSelectArea("BA3")
		DbSetOrder(3)
		aFiliais := If(FWModeAccess("BA3",3)=="E" .And. FWModeAccess("SA1",3)=="C", aClone(aSM0CodFil), {xFilial()})
		For nBusca := 1 To Len(aFiliais)
			If DbSeek( aFiliais[nBusca] + SA1->A1_COD)
				Help(" ",1,"BA3DELCLI",, "Filial " + aFiliais[nBusca], 3, 0)
				lPodeApagar := .F.
				Exit
			EndIf
		Next
	EndIf

	If lPodeApagar
		DbSelectArea("BA0")
		DbSetOrder(3)
		aFiliais := If(FWModeAccess("BA0",3)=="E" .And. FWModeAccess("SA1",3)=="C", aClone(aSM0CodFil), {xFilial()})
		For nBusca := 1 To Len(aFiliais)
			If dbSeek( aFiliais[nBusca] + SA1->A1_COD)
 				Help(" ",1,"BA0DELCLI",, "Filial " + aFiliais[nBusca], 3, 0)
 				lPodeApagar := .F.
 				Exit
 			EndIf
		Next
	EndIf
    
	If lPodeApagar
 		DbSelectArea("BG9")
 		DbSetOrder(4)
 		aFiliais := If(FWModeAccess("BG9",3)=="E" .And. FWModeAccess("SA1",3)=="C", aClone(aSM0CodFil), {xFilial()})
 		For nBusca := 1 To Len(aFiliais)
 			If DbSeek( aFiliais[nBusca] + SA1->A1_COD)
 				Help(" ",1,"BG9DELCLI",, "Filial " + aFiliais[nBusca], 3, 0)
				lPodeApagar := .F.
				Exit
			EndIf
		Next
	EndIf
        
	If lPodeApagar
		DbSelectArea("BT5")
		DbSetOrder(5)
		aFiliais := If(FWModeAccess("BT5",3)=="E" .And. FWModeAccess("SA1",3)=="C", aClone(aSM0CodFil), {xFilial()})
 		For nBusca := 1 To Len(aFiliais)
 			If DbSeek( aFiliais[nBusca] + SA1->A1_COD)
 				Help(" ",1,"BT5DELCLI",, "Filial " + aFiliais[nBusca], 3, 0)
 				lPodeApagar := .F.
 				Exit
 			EndIf
 		Next
	EndIf
         
	If lPodeApagar
 		DbSelectArea("BQC")
 		DbSetOrder(4)
 		aFiliais := If(FWModeAccess("BQC",3)=="E" .And. FWModeAccess("SA1",3)=="C", aClone(aSM0CodFil), {xFilial()})
 		For nBusca := 1 To Len(aFiliais)
 			If DbSeek( aFiliais[nBusca] + SA1->A1_COD)
 				Help(" ",1,"BQCDELCLI",, "Filial " + aFiliais[nBusca], 3, 0)
 				lPodeApagar := .F.
 				Exit
 			EndIf
		Next
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se existe contrato - Gestao de Contratos         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	#IFDEF TOP
	If lPodeApagar
	    DbSelectArea("CN9")
		
		cQuery := "SELECT COUNT(*) QTDCNT "
		cQuery += " FROM " + RetSqlName("CN9")+ " CN9 "
		cQuery += " WHERE "
		cQuery += " CN9_FILIAL = '"+xFilial("CN9")+"' AND "
		cQuery += " CN9_CLIENT = '"+SA1->A1_COD+"' AND "
		cQuery += " CN9_LOJACL = '"+SA1->A1_LOJA+"' AND "
		cQuery += " CN9.D_E_L_E_T_ = ' ' "

		cQuery := ChangeQuery(cQuery)
		dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),"QRYCN9",.F.,.T.)
		lQuery := .T.
			
        If QRYCN9->QTDCNT > 0
        	Help(" ",1,"MATA030CNT") //"Cliente relacionado a um ou mais contratos do modulo Gestao de Contratos"
			lPodeApagar := .F.				
		Endif	        	
	
		DbSelectArea("QRYCN9")
		dbCloseArea()

		DbSelectArea("CN9")		
		If ! lPodeApagar
			Exit
		EndIf		

	EndIf		
	#ENDIF



	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se existe Regra de Desconto   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	#IFDEF TOP
	If lPodeApagar
	    DbSelectArea("ACO")
		
		cQuery := "SELECT COUNT(*) QTDRDSC "
		cQuery += " FROM " + RetSqlName("ACO")+ " ACO "
		cQuery += " WHERE "
		cQuery += " ACO_FILIAL = '"+xFilial("ACO")+"' AND "
		cQuery += " ACO_CODCLI = '"+SA1->A1_COD+"' AND "
		cQuery += " ACO_LOJA = '"+SA1->A1_LOJA+"' AND "
		cQuery += " ACO.D_E_L_E_T_ = ' ' "

		cQuery := ChangeQuery(cQuery)
		dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),"QRYACO",.F.,.T.)
		lQuery := .T.
			
        If QRYACO->QTDRDSC > 0
			MsgStop(STR0072, STR0023) // "Este cliente possui uma Regra de Desconto e nao podera ser excluido." // "Atencao!"
			lPodeApagar := .F.				
		Endif	        	
	
		DbSelectArea("QRYACO")
		dbCloseArea()

		DbSelectArea("ACO")		
		If ! lPodeApagar
			Exit
		EndIf		

	EndIf		
	#ENDIF


	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se existe Regra de Bonificacao³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	#IFDEF TOP
	If lPodeApagar
	    DbSelectArea("ACQ")
		
		cQuery := "SELECT COUNT(*) QTDRBON "
		cQuery += " FROM " + RetSqlName("ACQ")+ " ACQ "
		cQuery += " WHERE "
		cQuery += " ACQ_FILIAL = '"+xFilial("ACQ")+"' AND "
		cQuery += " ACQ_CODCLI = '"+SA1->A1_COD+"' AND "
		cQuery += " ACQ_LOJA = '"+SA1->A1_LOJA+"' AND "
		cQuery += " ACQ.D_E_L_E_T_ = ' ' "

		cQuery := ChangeQuery(cQuery)
		dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),"QRYACQ",.F.,.T.)
		lQuery := .T.
			
        If QRYACQ->QTDRBON > 0
			MsgStop(STR0073, STR0023) // "Este cliente possui uma Regra de Bonificacao e nao podera ser excluido." // "Atencao!"
			lPodeApagar := .F.				
		Endif	        	
	
		DbSelectArea("QRYACQ")
		dbCloseArea()

		DbSelectArea("ACQ")		
		If ! lPodeApagar
			Exit
		EndIf		

	EndIf		
	#ENDIF


	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se existe Regra de Negocio  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	#IFDEF TOP
	If lPodeApagar
	    DbSelectArea("ACS")
		
		cQuery := "SELECT COUNT(*) QTDRNEG "
		cQuery += " FROM " + RetSqlName("ACS")+ " ACS "
		cQuery += " WHERE "
		cQuery += " ACS_FILIAL = '"+xFilial("ACS")+"' AND "
		cQuery += " ACS_CODCLI = '"+SA1->A1_COD+"' AND "
		cQuery += " ACS_LOJA = '"+SA1->A1_LOJA+"' AND "
		cQuery += " ACS.D_E_L_E_T_ = ' ' "

		cQuery := ChangeQuery(cQuery)
		dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),"QRYACS",.F.,.T.)
		lQuery := .T.
			
        If QRYACS->QTDRNEG > 0
			MsgStop(STR0074, STR0023) // "Este cliente possui uma Regra de Negocio e nao podera ser excluido." // "Atencao!"
			lPodeApagar := .F.				
		Endif	        	
	
		DbSelectArea("QRYACS")
		dbCloseArea()

		DbSelectArea("ACS")		
		If ! lPodeApagar
			Exit
		EndIf		

	EndIf		
	#ENDIF	
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se existe contrato/serviços ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	#IFDEF TOP
	If lPodeApagar .And. AliasIndic('AAM')
	    		
		cQuery := "SELECT COUNT(*) QTDRNEG "
		cQuery += " FROM " + RetSqlName("AAM")+ " AAM "
		cQuery += " WHERE "
		cQuery += " AAM_FILIAL = '"+xFilial("AAM")+"' AND "
		cQuery += " AAM_CLIENT = '"+SA1->A1_COD+"' AND "
		cQuery += " AAM_LOJENT = '"+SA1->A1_LOJA+"' AND "
		cQuery += " AAM.D_E_L_E_T_ = ' ' "

		cQuery := ChangeQuery(cQuery)
		dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),"QRYAAM",.F.,.T.)
					
        If QRYAAM->QTDRNEG > 0
			MsgStop( STR0087, STR0023 ) // "Este cliente possui um Contrato de pestação de serviço e nao podera ser excluido." // "Atencao!"
			lPodeApagar := .F.				
		Endif	        	
	
		DbSelectArea("QRYAAM")
		dbCloseArea()
				
		If ! lPodeApagar
			Exit
		EndIf		

	EndIf		
	#ENDIF	
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se existe contrato/Manutencao ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	#IFDEF TOP
	If lPodeApagar .And. AliasIndic('AAH')
	    		
		cQuery := "SELECT COUNT(*) QTDRNEG "
		cQuery += " FROM " + RetSqlName("AAH")+ " AAH "
		cQuery += " WHERE "
		cQuery += " AAH_FILIAL = '"+xFilial("AAH")+"' AND "
		cQuery += " AAH_CLIENT = '"+SA1->A1_COD+"' AND "
		cQuery += " AAH_LOJENT = '"+SA1->A1_LOJA+"' AND "
		cQuery += " AAH.D_E_L_E_T_ = ' ' "

		cQuery := ChangeQuery(cQuery)
		dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),"QRYAAH",.F.,.T.)
					
        If QRYAAH->QTDRNEG > 0
			MsgStop( STR0088, STR0023 ) // "Este cliente possui um Contrato de manutenção e nao podera ser excluido." // "Atencao!"
			lPodeApagar := .F.				
		Endif	        	
	
		DbSelectArea("QRYAAH")
		dbCloseArea()
				
		If ! lPodeApagar
			Exit
		EndIf		

	EndIf		
	#ENDIF	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se existe Programação de Entrega³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	#IFDEF TOP
	If lPodeApagar .And. AliasIndic('SD0')
	    		
		cQuery := "SELECT COUNT(*) QTDRNEG "
		cQuery += " FROM " + RetSqlName("SD0")+ " SD0 "
		cQuery += " WHERE "
		cQuery += " D0_FILIAL = '"+xFilial("SD0")+"' AND "
		cQuery += " D0_CLIENTE = '"+SA1->A1_COD+"' AND "
		cQuery += " D0_LOJA = '"+SA1->A1_LOJA+"' AND "
		cQuery += " SD0.D_E_L_E_T_ = ' ' "

		cQuery := ChangeQuery(cQuery)
		dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),"QRYSD0",.F.,.T.)
					
        If QRYSD0->QTDRNEG > 0
			MsgStop( STR0094, STR0023 ) // "Este cliente possui um Programação de Entrega e nao podera ser excluido." // "Atencao!"
			lPodeApagar := .F.				
		Endif	        	
	
		DbSelectArea("QRYSD0")
		dbCloseArea()
				
		If ! lPodeApagar
			Exit
		EndIf		

	EndIf		
	#ENDIF	
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se existe Comissão³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	#IFDEF TOP
	If lPodeApagar .And. AliasIndic('SE3')
	    		
		cQuery := "SELECT COUNT(*) QTDRNEG "
		cQuery += " FROM " + RetSqlName("SE3")+ " SE3 "
		cQuery += " WHERE "
		cQuery += " E3_FILIAL = '"+xFilial("SE3")+"' AND "
		cQuery += " E3_CODCLI = '"+SA1->A1_COD+"' AND "
		cQuery += " E3_LOJA = '"+SA1->A1_LOJA+"' AND "
		cQuery += " SE3.D_E_L_E_T_ = ' ' "

		cQuery := ChangeQuery(cQuery)
		dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),"QRYSE3",.F.,.T.)
					
        If QRYSE3->QTDRNEG > 0
			MsgStop( STR0096, STR0023 ) // "Este cliente possui uma comissão e nao podera ser excluido." // "Atencao!"
			lPodeApagar := .F.				
		Endif	        	
	
		DbSelectArea("QRYSE3")
		dbCloseArea()
				
		If ! lPodeApagar
			Exit
		EndIf		

	EndIf		
	#ENDIF	
	//osma
	#IFDEF TOP
	If lPodeApagar .And. AliasIndic('AAM')
	    		
		cQuery := "SELECT COUNT(*) QTDRNEG "
		cQuery += " FROM " + RetSqlName("AAM")+ " AAM "
		cQuery += " WHERE "
		cQuery += " AAM_FILIAL = '"+xFilial("AAM")+"' AND "
		cQuery += " AAM_CODCLI = '"+SA1->A1_COD+"' AND "
		cQuery += " AAM_LOJA = '"+SA1->A1_LOJA+"' AND "
		cQuery += " AAM.D_E_L_E_T_ = ' ' "

		cQuery := ChangeQuery(cQuery)
		dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),"QRYAAM",.F.,.T.)
					
        If QRYAAM->QTDRNEG > 0
			MsgStop( STR0087, STR0023 ) // "Este cliente possui uma comissão e nao podera ser excluido." // "Atencao!"
			lPodeApagar := .F.				
		Endif	        	
	
		DbSelectArea("QRYAAM")
		dbCloseArea()
				
		If ! lPodeApagar
			Exit
		EndIf		

	EndIf		
	#ENDIF
	
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se existem movimentacoes no modulo Gestao Agricola		   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lPodeApagar .And. FindFunction("ALIASINDIC") .And. AliasIndic('NPL')
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se existem Saldos do cliente - Gestao Agricola  		   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea("NPL")
		DbSetOrder(1)
		aFiliais := If(FWModeAccess("NPL",3)=="E" .and. FWModeAccess("SA1",3)=="C", aClone(aSM0CodFil), {xFilial()})
		For nBusca := 1 To Len(aFiliais)
			If dbSeek( aFiliais[nBusca] + SA1->A1_COD)
				Help(" ",1,"MATA030AGR",, "Filial " + aFiliais[nBusca], 3, 0)
				lPodeApagar := .F.
				Exit
			EndIf
		Next
	EndIf
	If lPodeApagar .And. FindFunction("ALIASINDIC") .And. AliasIndic('NPK')
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se existem Saldos Iniciais do cliente - Gestao Agricola   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea("NPK")
		DbSetOrder(1)
		aFiliais := If(FWModeAccess("NPK",3)=="E" .and. FWModeAccess("SA1",3)=="C", aClone(aSM0CodFil), {xFilial()})
		For nBusca := 1 To Len(aFiliais)
			If DbSeek( aFiliais[nBusca] + SA1->A1_COD)
				Help(" ",1,"MATA030AGR",, "Filial " + aFiliais[nBusca], 3, 0)
				lPodeApagar := .F.
				Exit
			EndIf
		Next
	EndIf
	
	If ! lPodeApagar
		DbSelectArea("SA1")
		MsUnLock()
		Exit
	Endif  

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se existe Contrato de Parceria                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    If lPodeApagar
		DbSelectArea("ADA")
		DbSetOrder(2)
		
		aFiliais := If(FWModeAccess("ADA",3)=="E" .AND. FWModeAccess("SA1",3)=="C", aClone(aSM0CodFil), {xFilial()})
		For nBusca := 1 To Len(aFiliais)
			If DbSeek(aFiliais[nBusca]+cCod)
				Help(" ",1,"MA030TEMCP",, "Filial " + aFiliais[nBusca], 3, 0) //Verificar Contrato de Parceria existente para este cliente.
				lPodeApagar := .F.
				DbSelectArea(cAlias)
				MsUnLock()
				Exit
			EndIf
		Next
    EndIf

    If ! lPodeApagar
	   Exit
	Endif    
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se existe Restrições-Visitas                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    If lPodeApagar
		DbSelectArea("ACW")
		DbSetOrder(3)
		
		aFiliais := If(FWModeAccess("ACW",3)=="E" .AND. FWModeAccess("SA1",3)=="C", aClone(aSM0CodFil), {xFilial()})
		For nBusca := 1 To Len(aFiliais)
			If DbSeek(aFiliais[nBusca]+cCod)
			   //	Help(" ",1,"MATA030ACW")//Verificar Restrições-Visitas existente para este cliente.
			   	Help(" ",1,"NODELETA",,STR0077,2,0)	//"Este cliente esta sendo utilizado pela rotina de Restrições-Visitas."   
				lPodeApagar := .F.
				DbSelectArea(cAlias)
				MsUnLock()
				Exit
			EndIf
		Next
    EndIf

    If ! lPodeApagar
	   Exit
	Endif  
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se cliente possui amarração a um produto         ³
    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lPodeApagar
		DbSelectArea("SA7")      // Amarração Produto X Cliente
		DbSetOrder(1)
	
		aFiliais := If(FWModeAccess("SA7",3)=="E" .AND. FWModeAccess("SA1",3)=="C", aClone(aSM0CodFil), {xFilial()})
		For nBusca := 1 To Len(aFiliais)
			If dbSeek(aFiliais[nBusca]+cCod)
				Help(" ",1,"NODELETA")//Nao e possivel excluir o cliente pois o mesmo encontras-se relacionado a outro cadastro (Produto X Cliente)
				DbSelectArea(cAlias)
				MsUnLock()
				lPodeApagar := .F.
				Exit
			EndIf
		Next
		If ! lPodeApagar
			exit
		Endif
	 EndIf 
	#IFDEF TOP	
		If lPodeApagar 
	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se existe vinculo do cliente com o cadastro de oportunidades ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If MA30VerOp()
				Exit
			EndIf
	
		EndIf
	#ENDIF 
	  //****************************************************************************
      //Fim da verificacao do cliente Modulo PLS
      //****************************************************************************
		Ma030Int(.F., 5)       


		//
		// Verificacao do cliente nos modulos Juridicos. So rodamos em TOP
		// Valida se pode apagar e apaga as tabelas dos modulos Juridicos
		//		
		#IFDEF TOP
			If lPodeApagar .AND. MSFile( RetSqlName( 'NUH' ) )  // Se tem NUH tem SIGAJURI ou SIGAPFS
				If  A30ValJUR()
					lDelJUR := .T.
				Else
					lPodeApagar := .F.
					Exit
				Endif
			EndIf
		#ENDIF
				



		Begin Transaction
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ PONTO DE ENTRADA M030EXC                                      ³
		//³ Ponto de entrada para manuten‡oes antes de excluir-se os dados³
		//³ do cliente e logo apos confirma‡ao                            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF ExistBlock("M030EXC")
			ExecBlock("M030EXC",.F.,.F.)
		Endif
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Apos passar por todas as verificacoes , deleta o registro    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea(cAlias)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Exclui a amarracao com os contatos                           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		FtContato( Alias(), Recno(), 2, , 3 ) 
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Exclui a amarracao com os conhecimentos                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		MsDocument( Alias(), RecNo(), 2, , 3 ) 
	    
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Exclui as referencias dos memos                              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For nLoop := 1 To Len( aMemos )
			If !Empty( nPosMemo := SA1->( FieldPos( aMemos[ nLoop, 1 ] ) ) )  
				MSMM( SA1->( FieldGet( nPosMemo ) ),,,,2)
			EndIf 	
	    Next nLoop 

        //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tratamento para a chamada de função IntegDef() ³
		//Se a funcao  GETROTINTEG() existir no RPO, significa que a EnchoiceBar³
		//nao chama a IntegDef, logo deve ser chamada manualmente             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ				
		If lPodeApagar .And. lIntegDef
			DbSelectArea("SA1")      // Amarração Produto X Cliente
			SA1->(DbSetOrder(1))
			If ( SA1->( dbSeek( xFilial("SA1") + cCod ) ) )
	  	  		FwIntegDef("MATA030")
	  		Endif
		EndIf
		
		
		
		//
		// Delecao das tabelas de cliente nos modulos Juridicos. So rodamos em TOP
		//		
		#IFDEF TOP
			If lDelJUR  // Se tem NUH tem SIGAJURI ou SIGAPFS
				If !A30DelJUR(@aErrorJUR)
				    lDelJURErr := .T.
					Disarmtranction()
					Break
				EndIf
			EndIf
		#ENDIF
						
		cCodCli := SA1->A1_COD
		RecLock(cAlias,.F.,.t.)
		dbDelete()
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Gravacao no Log de Alteracoes do Front Loja. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If FindFunction("FRTGeraSLH")
			FRTGeraSLH("SA1", "D")
		EndIf
		
		
		If lHistFiscal .And. nOpcA == 2 
			aCmps :=  RetCmps("SA1",bCampoSA1)	
			GrvHistFis("SA1", "SS2", aCmps) 
		EndIf	

		If nModulo == 12 .OR. nModulo == 72 // SIGALOJA //SIGAPHOTO
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Se for SigaLoja e for um registro criado automaticamente a partir³
			//³ do cadastro de Adm.Cartäes, deve ser deletado do SAE.            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			DbSelectArea("SAE")
			DbSetOrder(2)
			If DbSeek( xFilial("SAE") + cCodCli )	
				RecLock("SAE", .F.)
				dbDelete()
				MsUnlock()
				DbSelectArea("SAE")
			EndIf
			DbSetOrder(1)
			
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Remove a amarracao da conta do vendedor na tabela ADL³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lAtuADL .AND. lNewWArea .AND. FindFunction("FT520Del") .AND. !Empty(SA1->A1_VEND)
			Ft520Del(SA1->A1_VEND,"SA1",SA1->A1_COD,SA1->A1_LOJA)
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Se houver prospect vinculado a este cliente, limpa o codigo³
		//³nos campos US_CODCLI e US_LOJACLI                          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea("SUS")
		DbSetOrder(5) //US_FILIAL+US_CODCLI+US_LOJACLI
		If DbSeek(xFilial("SUS")+SA1->A1_COD+SA1->A1_LOJA)
			RecLock("SUS",.F.)
			Replace US_CODCLI	With ""
			Replace US_LOJACLI	With ""
			Replace US_STATUS	With "1"	//Classificado
			MsUnLock()

			//Inclui amarracao com prospect                  
			If !lNewWArea .AND. !Empty(SUS->US_VEND)
				Ft520Inc(SUS->US_VEND,"SUS",SUS->US_COD,SUS->US_LOJA) 
			EndIf

		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Remove a amarracao da conta do vendedor na tabela ADL³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lNewWArea .AND. FindFunction("Ft520AltEn") .AND. lAtuADL .AND. !Empty(SA1->A1_VEND)
			Ft520AltEn(	5			, SA1->A1_VEND ,"SA1"	, SA1->A1_COD,;
						SA1->A1_LOJA)
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Exclusao da Geocodificacao da entidade       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		GeoSavCoor(xFilial("SA1"),"SA1",SA1->A1_COD+SA1->A1_LOJA,,,.F.,.T.)
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Remove a amarracao cod. Externo X cod. Interno - tabela XXF - De/Para                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lPodeApagar .And. FindFunction("CFGA070Mnt") .And. FWXX4Seek("MATA030")
			If ( XX4->XX4_SENDER == '1' )			
      		CFGA070Mnt( , 'SA1', 'A1_COD', ,SA1->( A1_COD + A1_LOJA ), .T. )  
   		EndIf
		EndIf       
		//Exclui Assciação com a regra da Margem Minima
		IF lPodeApagar .And. FindFunction("FT101Exc")
			FT101Exc(SA1->A1_COD,SA1->A1_LOJA )
       Endif
		
		End Transaction
		
		If lDelJURErr
	  		Help("",1,"HELP",ProcName(),aErrorJUR[6],1)	
		Endif	
		
		//Insere o registro na integracao
		If lAmbOffLn
			Ma030AltOk()
		Endif

		Ma30IntFim(.F., 5)
		
	Else
		MsUnLock()
	EndIf
	Exit
End

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Integracao SIGATMS X SIGAGFE	³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If nOpcA == 2 .And. FindFunction("MaEnvEAI") 

	MaEnvEAI(,,nOpc,"MATA030",{ { "SA1", "MATA030_SA1", NIL, NIL, NIL, NIL } },,,,,,"MATA030" )                   

EndIf	

DbSelectArea(cAlias)

Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A030Visual³ Autor ³ Wagner Xavier         ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de atualizacao de Clientes                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ A030Visual(ExpC1,ExpN1,ExpN2)                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³          ³ ExpN1 = Numero do registro                                 ³±±
±±³          ³ ExpN2 = Opcao selecionada                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA030                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A030Visual(cAlias,nReg,nOpc)

Local aUsrBut  := {} 
Local aButtons := {}
Local lPyme	   := Iif(Type("__lPyme") <> "U",__lPyme,.F.)
Local nDel     := 0
Local nPos     := 0

aButtons := {{"POSCLI",{|| a450F4Con()},STR0017, STR0018 }}

If !lPyme
	aadd(aButtons,{"WEB",{|| fGeoWizard("SA1",M->A1_COD+M->A1_LOJA,{"M->A1_END","M->A1_MUN","M->A1_EST","M->A1_CEP","M->A1_BAIRRO"},{|lContinua| CodGeoRev(aCoor,NIL,@lContinua)[6] <> M->A1_CEP })},STR0021, STR0022 })	
	aadd(aButtons,{"BMPVISUAL",{|| fConsWizard({M->A1_NOME, M->A1_PESSOA, M->A1_NREDUZ, M->A1_END, M->A1_CEP, M->A1_DDD, M->A1_TEL, M->A1_CGC, M->A1_RG, M->A1_DTNASC})},STR0019,STR0020 })
	aAdd(aButtons,{"CLIENTE",{|| SaveInter(),FtContato( cAlias, nReg, nOpc ),RestInter()}, STR0010, STR0010 } ) //"Contatos"
EndIf

If nModulo == 13 .OR. nModulo == 73	// SigaTMK ou SigaCRM
	// Botao para acessar Script de Campanha
	aAdd( aButtons, { "PRODUTO", {|| TkLstScr( nOpc, cAlias, M->A1_COD, M->A1_LOJA) }, STR0046, STR0047 } ) //"Scripts de Campanha", "Scripts"
EndIf

If ExistBlock( "MA030BUT" )
	If Valtype( aUsrBut := Execblock( "MA030BUT", .F., .F., { 2 } ) ) == "A"
		AEval( aUsrBut, { |x| AAdd( aButtons, x ) } )
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para EXCLUSAO de botoes            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock( "MA030DBT" ) 
	If Valtype( aUsrBut := Execblock( "MA030DBT", .F., .F., { 2 } ) ) == "A"
		For nDel:=1 To Len(aUsrBut)
			nPos := Ascan(aButtons,{ |x| x[1] == AllTrim(aUsrBut[nDel]) }	)	
			If nPos > 0
				ADel(aButtons,nPos)
				ASize(aButtons,Len(aButtons)-1)
			EndIf
		Next nDel
	EndIf
EndIf

nOpcA:=AxVisual( cAlias, nReg, nOpc,,,,,aButtons)

DbSelectArea(cAlias)

Return


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A030Inclui³ Autor ³ Wagner Xavier         ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de atualizacao de Clientes                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ A030Inclui(ExpC1,ExpN1,ExpN2)                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³          ³ ExpN1 = Numero do registro                                 ³±±
±±³          ³ ExpN2 = Opcao selecionada                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA030                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A030Inclui(cAlias,nReg,nOpc)

Local aButtons   := {} 
Local aUsrBut    := {} 
Local nOpcA
Local lPyme      := Iif(Type("__lPyme") <> "U",__lPyme,.F.)	
Local l030Inc    := (ExistBlock("M030Inc"))
Local lT030Inc   := (ExistTemplate("M030Inc"))
Local lAtuADL    := SX2->(DbSeek("ADL"))
Local lNewWArea  := .F. 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Limpa algum filtro do SA1                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cOldFilter := SA1->(dbFilter())
Local nOrd       := SA1->(IndexOrd())
Local cKey       := SA1->(IndexKey())
Local nDel     	 := 0					// Contador do aUsrBut
Local nPos		 := 0                	// Posição do filtro                   

Local aParam	 := {{|| .T.}, {|| .T.}, {|| .T.}, {||IIF(lAmbOffLn,Ma030AltOk(),(Ma30IntFim(.F., nOpc),MA030OK(nOpc)))} }	//Bloco de codigo executado apos a transacao da inclusao do cliente
Local lCGCValido := .F.  // Variavel usada na validacao do CNPJ/CPF (utilizando o Mashup)
Local cEventID   := 0    // Variavel usada para armazenar o ID do EventViewer	  
Local cMessagem  := " " // Variavel para armazenar a mensagem utilizada no eventviewer
Local aFieldValue := {}
Local aStruModel  := {}
Local lIntGFE     := SuperGetMv("MV_INTGFE",,.F.) 
//-- Variavel usada para verificar se o disparo da funcao IntegDef() pode ser feita manualmente
Local lIntegDef  :=  FindFunction("GETROTINTEG") .And. FindFunction("FWHASEAI") .And. FWHasEAI("MATA030",.T.,,.T.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se possui a tabela ADL.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
if lAtuADL
	lNewWArea := ADL->(FieldPos("ADL_CGC")) > 0	// Indica se utiliza a nova workarea
endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Limpa o filtro do ponto de entrada                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SA1->( dbClearFilter() ) 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Adiciona botoes a enchoicebar                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !lPyme
	aButtons  := {{"WEB",{|| fGeoWizard("SA1",M->A1_COD+M->A1_LOJA,{"M->A1_END","M->A1_MUN","M->A1_EST","M->A1_CEP","M->A1_BAIRRO"},{||CodGeoRev(aCoor)[6] <> M->A1_CEP})},STR0021, STR0022 },;
					{"BMPVISUAL",{|| fConsWizard({M->A1_NOME, M->A1_PESSOA, M->A1_NREDUZ, M->A1_END, M->A1_CEP, M->A1_DDD, M->A1_TEL, M->A1_CGC, M->A1_RG, M->A1_DTNASC})}, STR0019,STR0020 }}
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para criacao de botoes do usuario  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock( "MA030BUT" ) 
	If Valtype( aUsrBut := Execblock( "MA030BUT", .F., .F., { 3 } ) ) == "A" 
		AEval( aUsrBut, { |x| AAdd( aButtons, x ) } ) 
	EndIF 
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para EXCLUSAO de botoes            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock( "MA030DBT" ) 
	If Valtype( aUsrBut := Execblock( "MA030DBT", .F., .F., { 3 } ) ) == "A"
		For nDel:=1 To Len(aUsrBut)
			nPos := Ascan(aButtons,{ |x| x[1] == AllTrim(aUsrBut[nDel]) }	)	
			If nPos > 0
				ADel(aButtons,nPos)
				ASize(aButtons,Len(aButtons)-1)
			EndIf
		Next nDel
	EndIf 
EndIf 		
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se a rotina automatica esta ativa                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ							
If ( Type("l030Auto") == "U" )
	l030Auto := .f.
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Envia para processamento dos Gets          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nOpcA:=0

nOpcA:=AxInclui(cAlias,nReg,nOpc,/*aAcho*/,/*cFunc*/,/*aCpos*/,"MA030TudOk(nOpc)",/*lF3*/,"MA030Trans(" + Alltrim(Str(nOpcA)) + ")"/*cTransact*/,aButtons,aParam,aRotAuto,/*lVirtual*/)	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Chamada da função IntegDef()	³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ   
If nOpcA == 1 .And. lIntegDef
 	FwIntegDef("MATA030")
EndIf	

If lT030Inc
	ExecTemplate("M030Inc",.F.,.F., nOpcA )
EndIf

If l030Inc
	ExecBlock("M030Inc",.F.,.F., nOpcA )
Endif

If nOpca == 1 .AND. lAtuADL .AND. !Empty(SA1->A1_VEND)
	If lNewWArea
		If FindFunction("Ft520Inc") 
		#IFDEF TOP
			Ft520Inc(SA1->A1_VEND,"SA1",SA1->A1_COD,SA1->A1_LOJA) 
		#ENDIF
		EndIf
	Else
		Ft520AltEn(	3, SA1->A1_VEND, "SA1", SA1->A1_COD, SA1->A1_LOJA)
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Event Viewer - Envia e-mail ou RSS na inclusao de clientes. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nOpcA == 1 
	If GetRpoRelease("R5") // Verifica se o Release e 11.5 	              
		cEventID  := "032" //Inclusao de cliente
		cMessagem := STR0058+"  "+STR0059+"/"+STR0060+" :"+SA1->A1_COD+"/"+SA1->A1_LOJA+CHR(13)+CHR(10)+STR0111+" :"+SA1->A1_NOME+CHR(13)+CHR(10)+STR0112+": "+Subs(cUsuario,7,15)+"."
		EventInsert(FW_EV_CHANEL_ENVIRONMENT, FW_EV_CATEGORY_MODULES, cEventID,FW_EV_LEVEL_INFO,""/*cCargo*/,STR0057,cMessagem,.T./*lPublic*/)
	Else 
		MEnviaMail("032",{SA1->A1_COD,SA1->A1_LOJA,SA1->A1_NOME, Subs(cUsuario,7,15) })
	EndIf	
EndIf

DbSelectArea(cAlias)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Retorna o filtro original                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("SA1")
#IFDEF TOP    //Refaz Indregua
   If !Empty(cOldFilter)
      If nOrd == 0 .AND. !Empty(cKey)
         cOldFilter += ".AND. ORDERBY("+StrTran(ClearKey(cKey),"+",",")+")"
      EndIf
   EndIf
#ENDIF
If !Empty( cOldFilter )
	SET FILTER TO &cOldFilter
EndIf

If lIntGFE
	aFieldValue := { { "A1_CLIFIL", { || A030CliFil(SA1->A1_CGC) } }}	
EndIf	

Aadd(aStruModel, { "SA1", "MATA030_SA1" , NIL, NIL, NIL, aFieldValue } )

If nOpcA == 1 .And. FindFunction("MaEnvEAI")

	If lIntGFE
		MaEnvEAI(,,nOpc+1,"MATA030",aStruModel,,,,,,"MATA030" )
	Else
		MaEnvEAI(,,nOpc,"MATA030",aStruModel,,,,,,"MATA030" )	
	EndIf
 
EndIf	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Chamada da função IntegDef()	³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ   
//If nOpcA == 1 .And. lIntegDef
 	//FwIntegDef("MATA030")
//EndIf	
Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A030Altera³ Autor ³Rosane                 ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de atualizacao de Clientes                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ A030Altera(ExpC1,ExpN1,ExpN2)                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³          ³ ExpN1 = Numero do registro                                 ³±±
±±³          ³ ExpN2 = Opcao selecionada                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA030                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Eduardo Sz. ³12/07/06³102768³Inclusao de msg na alteracao de cliente   ³±±
±±³            ³        ³      ³quando ha vinculo na tabela JA2           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A030Altera(cAlias,nReg,nOpc)

Local nOpcA      := 0
Local lExecuta   := .T.
Local l030Alt    := (ExistBlock("M030Alt"))
Local lM030PALT  := ExistBlock("M030PALT")
Local cAliasAtu  := ""
Local nOrderAtu  := 0
Local lMt030AltT := ExistTemplate("MALTCLI")
Local lMt030Alt  := ExistBlock("MALTCLI")
Local aButtons   := {{"POSCLI",{|| a450F4Con()},STR0017, STR0018 }}
Local lPyme		 := Iif(Type("__lPyme") <> "U",__lPyme,.F.)
Local cCEPAnt    := SA1->A1_CEP
Local cTelAnt    := SA1->A1_TEL
Local cDDDAnt    := SA1->A1_DDD
LOCAL lACAtivo   := GetNewPar("MV_ACATIVO", .F.)
Local nDel       := 0
Local nPos       := 0
Local lHistTab   := GetNewPar("MV_HISTTAB", .F.)
Local nX         := 0
Local nY         := 0
Local cFilialAIF := xFilial("AIF")
Local cFilialSA1 := xFilial("SA1")
Local dDataAlt
Local cHoraAlt
Local lAtuADL 	 := SX2->(DbSeek("ADL"))
Local lNewWArea  := .F.
Local cVendAnt	 := ""
Local cNomeAnt	 := ""
Local cCGCAnt	 := ""
Local aParam	 := {{|| .T.}, {|| .T.}, {|| .T.}, {||IIF(lAmbOffLn,Ma030AltOk(),(Ma30IntFim(.F., nOpc),MA030OK(nOpc)))} }	//Bloco de codigo executado apos a transacao da inclusao do cliente
Local lIntGFE   := SuperGetMv("MV_INTGFE",,.F.) 
//-- Variavel usada para verificar se o disparo da funcao IntegDef() pode ser feita manualmente
Local lIntegDef  :=  FindFunction("GETROTINTEG") .And. FindFunction("FWHASEAI") .And. FWHasEAI("MATA030",.T.,,.T.)
Local bCampoSA1  := { |x| SA1->(Field(x)) }
Local aCmps      := {}

If Type("aCpoAltSA1") == "U"
	Private aCpoAltSA1 := {}
EndIf

lCGCValido := .F. // Variavel usada na validacao do CNPJ/CPF (utilizando o Mashup)

If lAtuADL
	lNewWArea := ADL->(FieldPos("ADL_CGC")) > 0	// Indica se utiliza a nova workarea
endif

If !lPyme
	aAdd(aButtons,{"WEB",{|| fGeoWizard("SA1",M->A1_COD+M->A1_LOJA,{"M->A1_END","M->A1_MUN","M->A1_EST","M->A1_CEP","M->A1_BAIRRO"},{||CodGeoRev(aCoor)[6] <> M->A1_CEP})},STR0021, STR0022 })
	aAdd(aButtons,{"BMPVISUAL",{|| fConsWizard({M->A1_NOME, M->A1_PESSOA, M->A1_NREDUZ, M->A1_END, M->A1_CEP, M->A1_DDD, M->A1_TEL, M->A1_CGC, M->A1_RG, M->A1_DTNASC})},STR0019, STR0020 })
	aAdd(aButtons,{"CLIENTE",{|| SaveInter(),FtContato( cAlias, nReg, nOpc ),RestInter()}, STR0010, STR0010 } ) //"Contatos"

	//Botão para visualizar imagem integrada com o uMov.me
	If FindFunction("Tk710VerImg") .AND. FieldPos("A1_IMGUMOV") > 0
		aAdd(aButtons,{"FOTOUMOV",{|| SaveInter(),Tk710VerImg(M->A1_IMGUMOV),RestInter()}, STR0089, STR0089 } ) //"Foto uMov"
	EndIf

EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para criacao de botoes do usuario  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock( "MA030BUT" ) 
	If Valtype( aUsrBut := Execblock( "MA030BUT", .F., .F., { 4 } ) ) == "A"
		AEval( aUsrBut, { |x| AAdd( aButtons, x ) } ) 
	EndIf 
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para EXCLUSAO de botoes            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock( "MA030DBT" ) 
	If Valtype( aUsrBut := Execblock( "MA030DBT", .F., .F., { 4 } ) ) == "A"
		For nDel:=1 To Len(aUsrBut)
			nPos := Ascan(aButtons,{ |x| x[1] == AllTrim(aUsrBut[nDel]) }	)	
			If nPos > 0
				ADel(aButtons,nPos)
				ASize(aButtons,Len(aButtons)-1)
			EndIf
		Next nDel
	EndIf 
EndIf 		
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Caso exista o execblock , executa ,se voltar³
//³.F. abandona o programa                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
#IFNDEF SHELL
	If l030Alt
		lExecuta := ExecBlock("M030Alt",.F.,.F.)
		If !(lExecuta)
			Return .T.
		Endif
	EndIf
#ENDIF

cVendAnt := SA1->A1_VEND
cNomeAnt := SA1->A1_NOME
cCGCAnt	 := SA1->A1_CGC


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Salva dados antes da alteracao.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aCmps :=  RetCmps("SA1",bCampoSA1)	

nOpcA := AxAltera(cAlias,nReg,nOpc,/*aAcho*/,/*aCpos*/,/*nColMens*/,/*cMensagem*/,	iif(!lAcativo, "MA030TudOk(nOpc)", "MA030TudOk(nOpc) .And. AC700ALTALU()"),/*cTransact*/,/*cFunc*/,aButtons, aParam  ,aRotAuto,/*lVirtual*/)

#IFDEF SHELL
	If l030Alt
		lExecuta := ExecBlock("M030Alt",.F.,.F.,nOpca)
		If !(lExecuta)
			Return .T.
		Endif
	Endif
#ENDIF
If lM030PALT
	If ValType(lExecuta := ExecBlock("M030PALT",.F.,.F.,{nOpca})) == "L" .And. !lExecuta
		Return .T.
	EndIf
Endif

If nOpca == 1 .AND. lAtuADL     
	If lNewWArea
		If FindFunction("Ft520Inc")     
			#IFDEF TOP
				If Empty(cVendAnt) .AND. !Empty(SA1->A1_VEND)
					Ft520Inc(SA1->A1_VEND,"SA1",SA1->A1_COD,SA1->A1_LOJA)
				ElseIf !Empty(cVendAnt) .AND. SA1->A1_VEND <> cVendAnt
					Ft520Alt(cVendAnt, SA1->A1_VEND, "SA1", SA1->A1_COD, SA1->A1_LOJA)
				EndIf  
		
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Atualiza a tabela de referencia ADL³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			
				If ((cCGCAnt <> SA1->A1_CGC) .OR. (cNomeAnt <> SA1->A1_NOME)) .AND. FindFunction("Ft520AtuEn")
					Ft520AtuEn("SA1", SA1->A1_COD, SA1->A1_LOJA, SA1->A1_NOME, SA1->A1_CGC)
				EndIf
			#ENDIF
		EndIf
	Else
		Ft520AltEn(4, SA1->A1_VEND, "SA1", SA1->A1_COD, SA1->A1_LOJA)
	EndIf
EndIf

If nOpca == 1               
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Pontos de entrada 									³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lMt030AltT
		ExecTemplate("MALTCLI",.F.,.F.)
	EndIf
	If lMt030Alt
		Execblock("MALTCLI",.F.,.F.)
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Gravacao no Log de Alteracoes do Front Loja. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nOpcA == 1
	If FindFunction("FRTGeraSLH")
		FRTGeraSLH("SA1", "A")
	EndIf
EndIf

If nOpcA == 1 .AND. (nModulo == 12 .OR. nModulo == 72 )// SIGALOJA //SIGAPHOTO
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Se for SigaLoja e for um registro criado automaticamente a partir ³
	//³ do cadastro de Adm.Cartäes, deve atualizar o SAE.                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cAliasAtu := Alias()
	nOrderAtu := IndexOrd()
	
	DbSelectArea("SAE")
	DbSetOrder(2)
	If DbSeek( xFilial("SAE") + SA1->A1_COD )
		
		If SA1->A1_NOME <> SAE->AE_DESC
			RecLock("SAE", .F.)
			Replace AE_DESC With SA1->A1_NOME
			MsUnlock()
		EndIf
		
	EndIf
	
	DbSelectArea(cAliasAtu)
	DbSetOrder(nOrderAtu)
	
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualizacao do movimento de viagem (SIGATMS) ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nOpcA == 1 .AND. cCEPAnt <> SA1->A1_CEP
	If IntTMS() .AND. FindFunction("TmsCEPDUD")
		Begin Transaction
		MsgRun(STR0027,,{|| TmsCEPDUD(SA1->A1_CEP,SA1->A1_COD,SA1->A1_LOJA) })  // "Aguarde, Atualizando movimento de viagem." 
		End Transaction
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualizacao do telefone na Seq.Endereco³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙs
If nOpcA == 1 .AND. (cTelAnt <> SA1->A1_TEL .Or. cDDDAnt <> SA1->A1_DDD)
	If IntTMS() .AND. FindFunction("TmsTELDUL")
		Begin Transaction
		MsgRun(STR0070,,{|| TmsTELDUL(SA1->A1_DDD,SA1->A1_TEL,SA1->A1_COD,SA1->A1_LOJA,cDDDAnt,cTelAnt) })  // "Aguarde, Atualizando movimento de viagem." 
		End Transaction
	EndIf
EndIf


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Gravar o historico das alteracoes realizadas pelo usuario    ³
//³na tabela AIF usando o vetor aCpoAltSA1 que foi carregado na ³
//³funcao Ma030TudOk().                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Altera .And. nOpcA == 1 .And. lHistTab .And. Len(aCpoAltSA1) > 0
	dDataAlt := Date()
	cHoraAlt := Time()
	For nX := 1 To Len(aCpoAltSA1)
		MSGrvHist(cFilialAIF,;			// Filial de AIF
		          cFilialSA1,;			// Filial da tabela SA1
		          "SA1",;				// Tabela SA1
		          SA1->A1_COD,;			// Codigo do cliente
		          SA1->A1_LOJA,;		// Loja do cliente
		          aCpoAltSA1[nX][1],;	// Campo alterado
		          aCpoAltSA1[nX][2],;	// Conteudo antes da alteracao
		          dDataAlt,;			// Data da alteracao
		          cHoraAlt)				// Hora da alteracao
	Next nX
	//aCpoAltSA1 := {} // limpar o vetor
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Gravacao do Historico das alteracoes.      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lHistFiscal .And. Altera .And.  nOpcA == 1  .And. Len(aCpoAltSA1) > 0
	GrvHistFis("SA1", "SS2", aCmps) 
EndIf	

aCpoAltSA1 := {} // limpar o vetor

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Integracao Protheus x ClassisNet (CorporeRM)³
//³Atualizacao do cliente dentro do CorporeRM  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Altera .And. nOpcA == 1 .and. GetNewPar("MV_RMCLASS",.F.) .and. SA1->A1_ORIGEM = 'S'
	BeginTran()
	If !ClsProcCli(SA1->(Recno()),'1','MAT030')
		DisarmTran()		
		Return .F.
	Else
		EndTran()	
	EndIf		
EndIf


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se a rotina automatica esta ativa                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ							
If ( Type("l030Auto") == "U" )
	l030Auto := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Integracao SIGATMS X SIGAGFE	³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ          
If nOpcA == 1 .And. FindFunction("MaEnvEAI")
  	MaEnvEAI(,,nOpc,"MATA030",{ { "SA1", "MATA030_SA1", NIL, NIL, NIL, NIL } },,,,,,"MATA030"  )                
EndIf	  


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Chamada da função IntegDef()	³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ   
If nOpcA == 1 .And. lIntegDef
  	FwIntegDef("MATA030")
EndIf  

Return .T.
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Mata030Ref³ Autor ³  Eduardo Motta        ³ Data ³ 12/12/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Manutencao das infromacoes cadastrais do cliente           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Mata030Ref(cAlias,nReg,nOpcx)

Local aPages	:= {}, aTitles := {}
Local nControl	:= 0
Local ni, oDlg	
Local aCpoEncho	:= {"A1_NOME","A1_PESSOA","A1_NREDUZ","A1_TIPO","A1_END","A1_MUN", ;
                    	"A1_EST","A1_BAIRRO","A1_ESTADO","A1_CEP","A1_TEL","A1_FAX","A1_CGC","A1_INSCR"}

Local aNaoG1 	:= {"AO_FILIAL","AO_CLIENTE","AO_LOJA","AO_TIPO","AO_TELEFONE","AO_CONTATO","AO_DESDE","AO_ULTCOM", ;
						"AO_MAICOM","AO_VLRMAI","AO_PAGPON","AO_BCOCAR","AO_LIMCRE","AO_MOVCC","AO_OUTOPE" }

Local aNaoG2 	:= {"AO_FILIAL","AO_CLIENTE","AO_LOJA","AO_TIPO","AO_MOVCC","AO_OUTOPE"}

Local aNaoG3 	:= {"AO_FILIAL","AO_CLIENTE","AO_LOJA","AO_TIPO","AO_ULTCOM","AO_MAICOM","AO_VLRMAI","AO_PAGPON",;
                 "AO_BCOCAR","AO_LIMCRE"} 
                 
Local cLinOk 	:= "AllWaysTrue()"                 
Local cTudOk 	:= "AllWaysTrue()"                 
Local lGetD 	:= .F.
Local oCliente, oLoja
Local cCampo
Local aCBox
Local aSavSA1 	:= SA1->(GetArea())

Local aObjects 	:= {} 
Local aPosObj  	:= {} 
Local aSizeAut 	:= {}
Local aNaoGD   	:= {} 
Local nBotGetD 	:= 0
Local nRigGetD 	:= 0
Local nBotFd   	:= 0
Local nRigFd   	:= 0

Private aRotina 	:= { {""  	,""		, 0 , 1},;
                      {STR0012	,""	, 0 , 2},; // //"Vizualizar"
                      {STR0013  	,""	, 0 , 3}} // //"Alterar"
Private nControGD	:= 0    // variavel para controle da ultima GETDADOS editada devido ao problema de que quando se esta editando a getdados e depois clica direto no OK nao e' executado o CODBLOCK de LOSTFOCUS da GETDADOS.
Private nOpcao		:= If(nOpcx#2,3,nOpcx)
Private aSvHeader	:= {{},{},{}}
Private aSvCols	    := {{},{},{}}
Private aHeader1    := {}
Private aCols1      := {}
Private aHeader2    := {}
Private aCols2      := {}
Private aHeader3    := {}
Private aCols3      := {}
Private oGet01		:= NIL
Private oGet02		:= NIL
Private oGet03		:= NIL
Private n			:= 1
Private aCols       := {}
Private aHeader     := {}
Private aSvAtela	:= {{},{},{}}
Private aSvAGets	:= {{},{},{}}
Private aTela		:= {}
Private aGets		:= {}
Private oEnc01		:= NIL
Private lOk			:= .F.
Private nFoldAtu	:= 1
Private Inclui		:= (nOpcao==3)
Private Altera		:= (nOpcao==4)
Private Exclui		:= (nOpcao==5)  
Private oFolder     := NIL

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para restringir a exibicao dos campos nos diferentes folders ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
If ExistBlock( "MA030REF" ) 
	aNaoGD := ExecBlock( "MA030REF", .F., .F. ) 
	AEval( aNaoGD[ 1 ], { |x| AAdd( aNaoG1, x ) } )  
	AEval( aNaoGD[ 2 ], { |x| AAdd( aNaoG2, x ) } )  
	AEval( aNaoGD[ 3 ], { |x| AAdd( aNaoG3, x ) } )  	
EndIf 	

aCBox := RetX3Box("AO_TIPO")
Aadd(aTitles,aCBox[1])
Aadd(aPages,"HEADER 1")
nControl++
Aadd(aTitles,aCBox[2])
Aadd(aPages,"HEADER 2")
nControl++
Aadd(aTitles,aCBox[3])
Aadd(aPages,"HEADER 3")
nControl++


If nOpcao # 2	.AND. nOpcao # 5		// Visual/Excluir
	lGetD :=.T.
EndIf

aSizeAut := MsAdvSize()
aObjects := {} 
AAdd( aObjects, { 68, 312, .T., .t. } )
AAdd( aObjects, { 105,309, .t., .t. } )

aInfo := { aSizeAut[ 1 ], aSizeAut[ 2 ], aSizeAut[ 3 ], aSizeAut[ 4 ], 3, 3 } 

aPosObj := MsObjSize( aInfo, aObjects ) 

   DbSelectArea("SA1")
   DbSetOrder(1)

   DEFINE MSDIALOG oDlg TITLE cCadastro FROM aSizeAut[7],0 TO aSizeAut[6],aSizeAut[5] OF oMainWnd PIXEL

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Enchoice 01							                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
	DbSelectArea("SA1")                 

	aTela := {}
	aGets := {}

	RegToMemory("SA1",.F.,.F.)

	oEnc01:= MsMGet():New("SA1" ,nReg ,2,,,,,aPosObj[1],,,,,,oDlg,,,.F.,"aSvATela[1]",.T.)
	oEnc01:oBox:bGotFocus   := {|| Fd_EntraEnc(1,"SA1")}
	oEnc01:oBox:bLostFocus  := {|| Fd_SaiEnc(1)}
   
	aSvATela[1] := aClone(aTela)
	aSvAGets[1] := aClone(aGets)

	nBotFd   := (aPosObj[2,3]-aPosObj[2,1])
	nRigFd   := (aPosObj[2,4]-aPosObj[2,2])
	nBotGetD := (aPosObj[2,3]-aPosObj[2,1]-15)
	nRigGetD := (aPosObj[2,4]-aPosObj[2,2]-2)

	oFolder := TFolder():New(aPosObj[2,1],aPosObj[2,2],aTitles,aPages,oDlg,,,,.T.,.F.,nRigFd,nBotFd,)


	DbSelectArea("SAO")
	DbSetOrder(1)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ getDados 03								  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    aHeader:= {}
	aCols  := {}
	If MsSeek(xFilial("SAO")+SA1->A1_COD+SA1->A1_LOJA+"3")
		cSeek  	  := xFilial("SAO")+SA1->A1_COD+SA1->A1_LOJA
		cWhile 	  := "AO_FILIAL+AO_CLIENTE+AO_LOJA"
		bCondicao := {|| If( SAO->AO_TIPO == "3" , .T. , .F. ) }
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Sintaxe da FillGetDados(nOpcX,Alias,nOrdem,cSeek,bSeekWhile,uSeekFor,aNoFields,aYesFields,lOnlyYes,cQuery,bMontCols,lEmpty,aHeaderAux,aColsAux,bAfterCols,bBeforeCols,bAfterHeader,cAliasQry |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		FillGetDados( IIf(nOpcao == 3 , 4 , 2) ,"SAO",1,cSeek,{|| &cWhile },bCondicao,aNaoG3,,,,,,,,,,,)
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Sintaxe da FillGetDados(nOpcX,Alias,nOrdem,cSeek,bSeekWhile,uSeekFor,aNoFields,aYesFields,lOnlyYes,cQuery,bMontCols,lEmpty,aHeaderAux,aColsAux,bAfterCols,bBeforeCols,bAfterHeader,cAliasQry |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		FillGetDados(3,"SAO",1,,,,aNaoG3,,,,,.T.,,,,,)
		aEval(aCols,{|x| x[ aScan(aHeader,{|x| AllTrim(x[2]) == "AO_DATA" }) ]:= dDataBase })
		aEval(aCols,{|x| x[ aScan(aHeader,{|x| AllTrim(x[2]) == "AO_DESDE"}) ]:= dDataBase })
	EndIf
	
	aHeader3 := aClone(aHeader)
	aCols3	 := aClone(aCols)
	n		 := Len(aCols)

	oGet03 	:= MSGetDados():New(0,0,nBotGetd,nRigGetd,nOpcao,cLinOK,cTudOk,,lGetD,,1,,,,,,,oFolder:aDialogs[3])
	oGet03  :oBrowse:lDisablePaint := .T.	

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ getDados 02								  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    aHeader:= {}
	aCols  := {}
	If MsSeek(xFilial("SAO")+SA1->A1_COD+SA1->A1_LOJA+"2")
		cSeek  	  := xFilial("SAO")+SA1->A1_COD+SA1->A1_LOJA
		cWhile 	  := "AO_FILIAL+AO_CLIENTE+AO_LOJA"
		bCondicao := {|| If( SAO->AO_TIPO == "2" , .T. , .F. ) }
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Sintaxe da FillGetDados(nOpcX,Alias,nOrdem,cSeek,bSeekWhile,uSeekFor,aNoFields,aYesFields,lOnlyYes,cQuery,bMontCols,lEmpty,aHeaderAux,aColsAux,bAfterCols,bBeforeCols,bAfterHeader,cAliasQry |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		FillGetDados( IIf(nOpcao == 3 , 4 , 2) ,"SAO",1,cSeek,{|| &cWhile },bCondicao,aNaoG2,,,,,,,,,,,)
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Sintaxe da FillGetDados(nOpcX,Alias,nOrdem,cSeek,bSeekWhile,uSeekFor,aNoFields,aYesFields,lOnlyYes,cQuery,bMontCols,lEmpty,aHeaderAux,aColsAux,bAfterCols,bBeforeCols,bAfterHeader,cAliasQry |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		FillGetDados(3,"SAO",1,,,,aNaoG2,,,,,.T.,,,,,)
		aEval(aCols,{|x| x[ aScan(aHeader,{|x| AllTrim(x[2]) == "AO_DATA"  }) ]:= dDataBase })
		aEval(aCols,{|x| x[ aScan(aHeader,{|x| AllTrim(x[2]) == "AO_DESDE" }) ]:= dDataBase })
		aEval(aCols,{|x| x[ aScan(aHeader,{|x| AllTrim(x[2]) == "AO_ULTCOM"}) ]:= dDataBase })
		aEval(aCols,{|x| x[ aScan(aHeader,{|x| AllTrim(x[2]) == "AO_MAICOM"}) ]:= dDataBase })
	EndIf
	
	aHeader2 := aClone(aHeader)
	aCols2	 := aClone(aCols)
	n		 := len(aCols)

	oGet02 	:= MSGetDados():New(0,0,nBotGetd,nRigGetd,nOpcao,cLinOK,cTudOk,,lGetD,,1,,,,,,,oFolder:aDialogs[2])
	oGet02  :oBrowse:lDisablePaint := .T.	

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ getDados 01								  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    aHeader := {}
	aCols   := {}
	If MsSeek(xFilial("SAO")+SA1->A1_COD+SA1->A1_LOJA+"1")
		cSeek  	  := xFilial("SAO")+SA1->A1_COD+SA1->A1_LOJA
		cWhile 	  := "AO_FILIAL+AO_CLIENTE+AO_LOJA"
		bCondicao := {|| If( SAO->AO_TIPO == "1" , .T. , .F. ) }
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Sintaxe da FillGetDados(nOpcX,Alias,nOrdem,cSeek,bSeekWhile,uSeekFor,aNoFields,aYesFields,lOnlyYes,cQuery,bMontCols,lEmpty,aHeaderAux,aColsAux,bAfterCols,bBeforeCols,bAfterHeader,cAliasQry |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		FillGetDados( IIf(nOpcao == 3 , 4 , 2) ,"SAO",1,cSeek,{|| &cWhile },bCondicao,aNaoG1,,,,,,,,,,,)
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Sintaxe da FillGetDados(nOpcX,Alias,nOrdem,cSeek,bSeekWhile,uSeekFor,aNoFields,aYesFields,lOnlyYes,cQuery,bMontCols,lEmpty,aHeaderAux,aColsAux,bAfterCols,bBeforeCols,bAfterHeader,cAliasQry |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		FillGetDados(3,"SAO",1,,,,aNaoG1,,,,,.T.,,,,,)
		aEval(aCols,{|x| x[ aScan(aHeader,{|x| AllTrim(x[2]) == "AO_DATA"}) ]:= dDataBase })
	EndIf
	
	aHeader1 := aClone(aHeader)
	aCols1	 := aClone(aCols)
	n		 := len(aCols)

	oGet01 	:= MSGetDados():New(0,0,nBotGetd,nRigGetd,nopcao,cLinOK,cTudOk,,lGetD,,1,,,,,,,oFolder:aDialogs[1])		
	oGet01  :oBrowse:lDisablePaint := .T.

	oFolder:bSetOption:={|nAtu| MT030Fld(nAtu,oFolder:nOption,oFolder,{oGet01,oGet02,oGet03})}
   
	ACTIVATE DIALOG oDlg ON INIT ( MT030Refre( {oGet01,oGet02,oGet03} ),;
	EnchoiceBar(oDlg, {|| oFolder:SetOption(IIf(oFolder:nOption<>1,1,2)),lOk:=.T. ,If(MT030Ok({oGet01,oGet02,oGet03},oFolder:nOption),(If(Str(nOpcao,1) $ "345",Mata030Grv(),.t.),oDlg:End()),.F.)   },{|| oDlg:End()} ), Mata030Ini())
    RestArea(aSavSA1)

Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Mata030Lin ³Autor ³ Eduardo Motta         ³ Data ³ 12.12.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Checagem de linha na getdados.                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA030                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Mata030Lin()
If aCols[n,Len(aHeader)+1]
   Return .T.
EndIf
If Empty(aCols[n,1])
   Return .F.
EndIf   
Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Mata030Grv ³Autor ³ Eduardo Motta         ³ Data ³ 12.12.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao de gravacao dos dados.                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA030                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Mata030Grv()
Local nI := 0,nJ

aSvHeader[1] := aClone(aHeader1)
aSvCols[1]   := aClone(aCols1)
aSvHeader[2] := aClone(aHeader2)
aSvCols[2]   := aClone(aCols2)
aSvHeader[3] := aClone(aHeader3)
aSvCols[3]   := aClone(aCols3)

DbSelectArea("SAO")
DbSetOrder(1)
DbSeek(xFilial("SAO")+SA1->A1_COD+SA1->A1_LOJA)
While !Eof() .AND. AO_FILIAL == xFilial("SAO") .AND. AO_CLIENTE == SA1->A1_COD .AND. AO_LOJA == SA1->A1_LOJA
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de entrada antes da exclusao.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("M030SAO")
		ExecBlock("M030SAO",.F.,.F.,{5})
	Endif
   	RecLock("SAO",.F.)
   	DbDelete()
   	MsUnlock()
   	DbSkip()
End

If nOpcao == 3 .OR. nOpcao == 4   // se for inclusao ou alteracao
	For nI := 1 To Len(aSvCols)
 		For nJ := 1 To Len(aSvCols[nI])
   			If Empty(aSvCols[nI,nJ,1]) .OR. aSvCols[nI,nJ,len(aSvHeader[nI])+1]   // se o campo nome estiver em branco ou a linha estiver deletada nao processa.
            	Loop
        	EndIf   
         	RecLock("SAO",.T.)
         	SAO->AO_FILIAL  := xFilial("SAO")
         	SAO->AO_CLIENTE := SA1->A1_COD
         	SAO->AO_LOJA    := SA1->A1_LOJA
         	SAO->AO_TIPO    := Str(nI,1)      // tipo 1(instituicao de credito), 2(empresas) ou 3(bancos)
         	GravaACols("SAO",aSvHeader[nI],aSvCols[nI,nJ])
         	MsUnlock()
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Ponto de entrada apos alteracao.³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ExistBlock("M030SAO")
				ExecBlock("M030SAO",.F.,.F.,{nOpcao})
			Endif
      	Next
   	Next   
EndIf
Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³GravaACols ³Autor ³ Eduardo Motta         ³ Data ³ 12.12.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para gravacao dos dados no aCols de acordo com o    ³±±
±±³          ³ aHeader passado.                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cAlias   - Alias que sera gravado                          ³±±
±±³          ³ aAHeader - array aHeader                                   ³±±
±±³          ³ aACols   - array aCols (devera ser passado a linha do aCols³±±
±±³          ³                         ex: GravaACols(aHeader,aCols[1]))  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA030                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function GravaACols(cAlias,aAHeader,aACols)
Local nI := 0,cCampo,uValor
If aACols[Len(aACols)]   // se o item do aCols estiver deletado
   Return .F.
EndIf   
For nI := 1 to Len(aAHeader)   	
   If Trim(aAHeader[nI][2]) <> "AO_ALI_WT" .And. Trim(aAHeader[nI][2]) <> "AO_REC_WT"
      cCampo	:= cAlias+"->"+Trim(aAHeader[nI,2])
      uValor	:= aACols[nI]
      &cCampo	:= uValor
   EndIf
Next nI
Return .T.
                                         
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Mata030Ini ³Autor ³ Eduardo Motta         ³ Data ³ 12.12.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para inicio do dialogo                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA030                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Mata030Ini()
oGet01:oBrowse:SetFocus()	
oGet01:oBrowse:Refresh(.T.)
Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Fd_EntraEnc³Autor ³ Eduardo Motta         ³ Data ³ 12.12.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Atualiza aTela e aGets quando e focada a enchoice          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nE - Numero da enchoice.                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA030                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fd_EntraEnc(nE,cAlias)
aTela := AClone(aSvAtela[nE])
aGets := AClone(aSvaGets[nE])
DbSelectArea(cAlias)
Return  


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Fd_SaiEnc ³ Autor ³ Eduardo Motta         ³ Data ³ 12.12.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Guarda aTela e aGets na saida do foco na enchoice          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nE - Numero da enchoice.                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA030                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fd_Saienc(nE)
aSvATela[nE]	:= aClone(aTela)
aSvAGets[nE] 	:= aClone(aGets)
Return


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³RetX3Box  ³ Autor ³ Eduardo Motta         ³ Data ³ 12.12.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Retorna array da ComboBox                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cCampo - Nome do Campo                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA030                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function RetX3Box(cCampo)
Local aRET := {},nCONT
Local cCBox
Local aSvArea := SX3->(GetArea())

SX3->(DbSetOrder(2))
SX3->(DbSeek(cCampo))
cCBox := SX3->(X3Cbox())
   
BEGIN SEQUENCE 
   While !Empty(cCBOX)
      nCONT:=AT(";",cCBOX)
      IF nCont == 0
         AADD(aRET,SubStr(AllTrim(cCBOX),3))
         Exit
      Else
         AADD(aRET,SubStr(AllTrim(SubStr(cCBOX,1,nCONT-1)),3))
      Endif 
      cCBOX := SubStr(cCBOX,nCONT+1)
   End
ENDSEQUENCE
   
RestArea(aSvArea)

Return aRET

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ Ma030Tudok³ Autor ³ Aline Correa do Vale ³ Data ³ 19/02/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica se os campos estao OK                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Mata030                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Ma030TudOk(nOpc)
Local bCampoSA1  := { |x| SA1->(Field(x)) }
Local lRet       := .T.
Local lHistTab   := GetNewPar("MV_HISTTAB", .F.)
Local lTpPessoa  := M->A1_PESSOA
Local nX         := 0
Local lUsaFilTrf := IIF(FindFunction('UsaFilTrf'), UsaFilTrf(), .F.)
Local aAreaSA1   := {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Quando o tipo de cliente for I, M, X ou E o campo do numero de inscricao torna-se obrigatorio ³
//³ Localizacao Argentina 																		  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cPaisLoc == "ARG" .AND. M->A1_TIPO $ "IMXE" .AND. Empty(M->A1_CGC)
	Aviso(STR0023,STR0025,{STR0024})  //"Atencao"###"O tipo de cliente selecionado exige o preenchimento do campo CUIT/CUIL"###"Ok"
	lRet:=.F.
EndIf 

If cPaisLoc == "BRA" .AND. M->A1_EST<>"EX"
	lRet := IE(M->A1_INSCR,M->A1_EST)
EndIf             

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se o Tipo de documento (AFIP) for 80 ou 86 devera ser obrigatorio o campo A1_CGC (C.U.I.T.)   ³
//³ qualquer outro valor selecionado devera ser obrigatorio o campo A1_RG. Localizacao Argentina  ³
//³ Conforme tabela "OC" do configurador.                                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cPaisLoc == "ARG" .AND. !SA1->(FieldPos("A1_AFIP")) == 0 .AND. AllTrim(M->A1_AFIP) $ "1/7" .AND. Empty(M->A1_CGC)
	Aviso(STR0023,STR0041,{STR0024})  //"Atencao"###"O tipo de documento (AFIP) selecionado exige o preenchimento do campo CUIT/CUIL"###"Ok"
	lRet:=.F.
ElseIf cPaisLoc == "ARG" .AND. !SA1->(FieldPos("A1_AFIP")) == 0 .AND. !(AllTrim(M->A1_AFIP) $ "1/7") .AND. Empty(M->A1_RG) .AND. !Empty(M->A1_AFIP)
	Aviso(STR0023,STR0042,{STR0024})  //"Atencao"###"O tipo de documento (AFIP) selecionado exige o preenchimento do campo ID"###"Ok"
	lRet:=.F.
EndIf 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Pontos de Entrada 		  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .AND. ExistTemplate("MA030TOK")
	lRet := ExecTemplate("MA030TOK")
EndIf

If lRet .AND. nModulo == 72
	lRet := KEXF830()
EndIf

If lRet .AND. ExistBlock("MA030TOK")
	lRet := ExecBlock("MA030TOK")
EndIf

If lRet .AND. cPaisLoc == "GUA"
   lRet  := A030ValDoc()
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Carregar o vetor aCpoAltSA1 com os campos que sofreram  ³
//³alguma alteracao. Somente serao gravados na tabela AIF  ³
//³apos a validacao completa da rotina AxAltera() executada³
//³pela funcao A030Altera().                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Altera .And. lRet .And. ((lHistTab .And. FindFunction("MSGrvHist")) .Or. lHistFiscal)
	
	aCpoAltSA1 := {}
	For nX := 1 to FCount()
		If !(AllTrim(M->&( eVal( bCampoSA1, nX) )) == AllTrim(SA1->&( eVal( bCampoSA1, nX))))
			aAdd( aCpoAltSA1, { eVal( bCampoSA1, nX), SA1->&( eVal( bCampoSA1, nX) ) } )			
		EndIf				
	Next nX 	
	
		If  SA1->(FieldPos("A1_IDHIST"))>0	.And. Len(aCpoAltSA1)>0 .And. lHistFiscal
			M->A1_IDHIST := IdHistFis()
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Integracao com o Modulo de Transporte (TMS)                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. IntTms() .And. nModulo == 43
	If Empty(M->A1_CDRDES)
		Help("",1,"CDRDES") //--"Informe um código de região válida para este cliente."
		lRet := .F.
	Endif
Endif

//MV_RMCLASS: Parametro de ativacao da integracao do Protheus x RM Classis Net (RM Sistemas)
If lRet .and. GetNewPar("MV_RMCLASS",.F.) .and. nOpc == 3 .and. M->A1_COD == Replicate("0",TamSX3("A1_COD")[1])
	//Busca o Proximo codigo do cliente que esta sendo incluido
	M->A1_COD := M030PrRMCli() 
EndIf

If cPaisLoc=="BRA" .And. lRet .And. !Empty(M->A1_CGC) .And. (Type("lCGCValido")<>"U" .And. !lCGCValido);
	.And. M->A1_EST<>"EX" .And. M->A1_TIPO <> "X"
	If Empty(lTpPessoa)
		lTpPessoa := IIf(Len(AllTrim(M->A1_CGC))==11, "F", "J")
	EndIf
	lRet := A030CGC(lTpPessoa, M->A1_CGC)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Validacao do campo A1_FILTRF.(UPDEST39)                       ³
//³Verificar se a filial informada neste campo existe realmente. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. lUsaFilTrf
	If !Empty(M->A1_FILTRF)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Valida se a filial informada existe realmente                  |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lRet := IIf(FindFunction('MtValidFil'), MtValidFil(cEmpAnt+M->A1_FILTRF), lRet)
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verificar se nao existe outro cliente com a mesma filial associada |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lRet
			aAreaSA1 := SA1->(GetArea())
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Monta filtro e indice temporario na SA1 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cArqIdx := CriaTrab(,.F.)
			IndRegua("SA1", cArqIdx, "A1_FILIAL+A1_FILTRF") //"Selecionando Registros ..."
			nIndex := RetIndex('SA1')
			#IFNDEF TOP
				dbSetIndex(cArqIdx+OrdBagExt())
			#ENDIF
			dbSetOrder(nIndex+1) // A1_FILIAL+A1_FILTRF
			If dbSeek(xFilial('SA1')+M->A1_FILTRF) .And. (SA1->A1_COD <> M->A1_COD)
				Help("",1,"SAVALCLI",, STR0059+': '+SA1->A1_COD+' - '+STR0060+': '+SA1->A1_LOJA, 4, 11 )
				lRet := .F.
			EndIf			
			RetIndex("SA1")
			Ferase( cArqIdx + OrdBagExt() )
			RestArea(aAreaSA1)
		EndIf
	EndIf
EndIf  

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Validacao do campo A1_ENTORI.                      						  ³
//³Verificar se o campos A1_ORIGCT == 1, campo A1_ENTORIse torna obrigatorio.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
If  SA1->(FieldPos("A1_ORIGCT")) > 0 .And. SA1->(FieldPos("A1_ENTORI"))>0
	If lRet .And. (M->A1_ORIGCT $ "1|2|5|7" ) .And. Empty(M->A1_ENTORI)    
  	    Help(,,STR0023,,STR0078,1,0) //"O campo Ent. Origem tem que ser preenchido"
		lRet := .F. 
	EndIf
EndIf

//-- Integra?o Protheus x GFE (INCLUSAO,ALTERACAO)
If lRet .And. !MATA030IPG(nOpc)
	lRet := .F.
EndIf

Return(lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Mat030Oper ³ Autor ³Rodrigo de A. Sartorio³ Data ³ 03/07/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Grava informacoes no arqv. de codigo do Operador Logistico ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Mata030                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Mat030Oper(cCod,cLoja,cCGC,cFilialAdm)
Local cFilBack:=cFilAnt
Local aArea:=GetArea()

DEFAULT cFilialAdm := SuperGetMV("MV_INTDL")

cFilAnt:=cFilialAdm // Troca para a filial do operador logistico
dbSelectArea("DCK")
Reclock("DCK",.T.)
Replace DCK_FILIAL	With xFilial()	// Filial do Arquivo no OL
Replace DCK_FILCLI	With cFilBack	// Codigo da Filial Corrente
Replace DCK_CODCLI	With cCod		// Codigo do Cliente na Filial Corrente
Replace DCK_LOJCLI	With cLoja 		// Codigo da Loja do Cliente na Filial Corrente
Replace DCK_CGC		With cCgc		// CGC do Cliente na Filial Corrente
Replace DCK_CODOPL	With ""			// Codigo do Cliente para a filial de administracao do OL
Replace DCK_LOJOPL	With ""			// Codigo da Loja do Cliente para a filial de administracao do OL
MsUnlock()
cFilAnt:=cFilBack // Troca para a filial de cliente do operador logistico
RestArea(aArea)
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A030ValDoc³ Autor ³ Fernando Machima      ³ Data ³ 07.06.04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Validacao do campo NIT. Nao permitir cadastrar dois clientes³±±
±±³          ³com o mesmo NIT                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ A030ValDoc()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Cadastro de clientes                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function A030ValDoc()

Local lRet     := .T.      
Local lFound   := .F.
Local cCodClie := Space(TamSX3("A1_COD")[1])
Local cLojClie := Space(TamSX3("A1_LOJA")[1])
Local aArea    := GetArea()

DbSelectArea("SA1")
DbSetOrder(3)
If !Empty(M->A1_CGC) .AND. DbSeek(xFilial("SA1")+M->A1_CGC)
   While !Eof() .AND. xFilial("SA1")+M->A1_CGC == SA1->A1_FILIAL+SA1->A1_CGC .AND. !lFound
      //Desconsiderar se for o proprio cliente ou uma de suas filiais
      If M->A1_COD == SA1->A1_COD
         DbSkip()
	     Loop
      EndIf
      lFound   := .T.
      lRet     := .F.
      cCodClie := SA1->A1_COD
      cLojClie := SA1->A1_LOJA			
   End
EndIf

If !lRet
   MsgStop(STR0026+cCodClie+"/"+cLojClie)	  //"NIT ja gravado para o cliente "        	     
EndIf

RestArea(aArea)

Return (lRet)


/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³MTA030TMS ³ Autor ³ Eduardo de Souza      ³ Data ³ 08/11/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Valida se o cliente esta em uso no SIGATMS.                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MTA030TMS()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ SIGATMS                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function MTA030TMS()

Local aArea     := GetArea()
Local lRet      := .T.
Local cQuery    := ""
Local cAliasTRB := ""
Local cIndex    := ""

cIndex    := ""
cAliasTRB := ""

#IFDEF TOP
	cAliasTRB := GetNextAlias()
	cQuery := " SELECT "
	cQuery += " COUNT(DTC_FILIAL) QUANT "
	cQuery += "   FROM " + RetSqlName("DTC")
	cQuery += "   WHERE DTC_FILIAL = '" + xFilial("DTC") + "' "
	cQuery += "     AND ( ( DTC_CLIREM = '" + SA1->A1_COD + "' AND DTC_LOJREM = '" + SA1->A1_LOJA + "' )   "
	cQuery += "        OR ( DTC_CLIDES = '" + SA1->A1_COD + "' AND DTC_LOJDES = '" + SA1->A1_LOJA + "' )   "
	cQuery += "        OR ( DTC_CLICON = '" + SA1->A1_COD + "' AND DTC_LOJCON = '" + SA1->A1_LOJA + "' )   "
	cQuery += "        OR ( DTC_CLIDPC = '" + SA1->A1_COD + "' AND DTC_LOJDPC = '" + SA1->A1_LOJA + "' ) ) "
	cQuery += "     AND D_E_L_E_T_ = ' ' "
	cQuery := ChangeQuery(cQuery)
	dbUseArea( .T., "TOPCONN", TCGENQRY(,,cQuery),cAliasTRB, .F., .T.)
	If (cAliasTRB)->(!Eof())
		If (cAliasTRB)->QUANT > 0
			lRet := .F.
		EndIf
	EndIf
	(cAliasTRB)->(DbCloseArea())
	If lRet .AND. FindFunction("ALIASINDIC") .AND. AliasIndic("DE4")
		cQuery := " SELECT "
		cQuery += " COUNT(*) QUANT "
		cQuery += "   FROM " + RetSqlName("DE4")
		cQuery += "   WHERE DE4_FILIAL = '" + xFilial("DE4") + "' "
		cQuery += "     AND DE4_CNPJ   = '" + SA1->A1_CGC    + "' " 
		cQuery += "     AND D_E_L_E_T_ = ' ' "
		cQuery += " UNION ALL "
		cQuery += " SELECT "
		cQuery += " COUNT(*) QUANT "
		cQuery += "   FROM " + RetSqlName("DE4")
		cQuery += "   WHERE DE4_FILIAL = '" + xFilial("DE4") + "' "
		cQuery += "     AND DE4_CNPJ1  = '" + SA1->A1_CGC    + "' " 
		cQuery += "     AND D_E_L_E_T_ = ' ' "
		cQuery := ChangeQuery(cQuery)
		dbUseArea( .T., "TOPCONN", TCGENQRY(,,cQuery),cAliasTRB, .F., .T.)
		While (cAliasTRB)->(!Eof())
			If (cAliasTRB)->QUANT > 0
				lRet := .F.
				Exit
			EndIf
			(cAliasTRB)->(DbSkip())
		End
		(cAliasTRB)->(DbCloseArea())
	EndIf
	If lRet .AND. FindFunction("ALIASINDIC") .AND. AliasIndic("DW3")
		cQuery := " SELECT "
		cQuery += " COUNT(*) QUANT "
		cQuery += "   FROM " + RetSqlName("DW3")
		cQuery += "   WHERE DW3_FILIAL = '" + xFilial("DW3") + "' "
		cQuery += "     AND DW3_CODCLI = '" + SA1->A1_COD    + "' " 
		cQuery += "     AND DW3_LOJCLI = '" + SA1->A1_LOJA   + "' "
		cQuery += "     AND D_E_L_E_T_ = ' ' "
		cQuery := ChangeQuery(cQuery)
		dbUseArea( .T., "TOPCONN", TCGENQRY(,,cQuery),cAliasTRB, .F., .T.)
		If (cAliasTRB)->(!Eof())
			If (cAliasTRB)->QUANT > 0
				lRet := .F.
			EndIf
		EndIf
		(cAliasTRB)->(DbCloseArea())
	EndIf
#ELSE
	cIndex := CriaTrab(NIL,.F.)
	cQuery := " DTC->DTC_FILIAL == '" + xFilial("DTC")  + "' "
	cQuery += " .AND. ( ( DTC->DTC_CLIREM == '" + SA1->A1_COD + "' .AND. DTC->DTC_LOJREM == '" + SA1->A1_LOJA + "' )   "
	cQuery += "    .OR. ( DTC->DTC_CLIDES == '" + SA1->A1_COD + "' .AND. DTC->DTC_LOJDES == '" + SA1->A1_LOJA + "' )   "
	cQuery += "    .OR. ( DTC->DTC_CLICON == '" + SA1->A1_COD + "' .AND. DTC->DTC_LOJCON == '" + SA1->A1_LOJA + "' )   "
	cQuery += "    .OR. ( DTC->DTC_CLIDPC == '" + SA1->A1_COD + "' .AND. DTC->DTC_LOJDPC == '" + SA1->A1_LOJA + "' ) ) "
	IndRegua('DTC',cIndex,'DTC_FILIAL+DTC_CLIREM+DTC_LOJREM',,cQuery) //-- "Selecionando Registros..."
	If DTC->(!Eof())
		lRet := .F.
	EndIf
	RetIndex("DTC")
	If File(cIndex+OrdBagExt())
		Ferase(cIndex+OrdBagExt())
	EndIf
#ENDIF

If !lRet
	Help(" ",1,"TMSNODEL") //-- Nao sera possivel excluir o cliente, pois o mesmo esta em uso no SIGATMS.
EndIf

RestArea(aArea)

Return lRet
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A030CGC   ³ Autor ³ Sabrina Passini       ³ Data ³ 01.06.05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Validacao do campo A1_CGC. Qd Pessoa="J" nao permitir       ³±±
±±³          ³entrada de CPF                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Cadastro de clientes                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/   
Function A030CGC(cTipPes,cCNPJ)
Local aArea       := GetArea()
Local aAreaSA1    := SA1->(GetArea())
Local lRetorno    := .T.
Local cCNPJBase   := ""
Local cMv_ValCNPJ := GetNewPar("MV_VALCNPJ","1")
Local cMv_ValCPF  := GetNewPar("MV_VALCPF","1")
Local lAchou      := .F.
Local lEleMesmo   := .F.

DEFAULT cCNPJ     := &(ReadVar())                                          

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Valida o tipo de pessoa                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cTipPes == "F" .AND. !(Len(AllTrim(cCNPJ))==11)
	Help(" ",1,"CPFINVALID")
	lRetorno := .F.
ElseIf cTipPes == "J" .AND. !(Len(AllTrim(cCNPJ))==14)  
	Help(" ",1,"CGC")     
	lRetorno := .F.
EndIf     

If Type("lCGCValido") == "U" // Protecao caso esta funcao seja invocada por outra rotina diferente da Inclusao/Alteracao
	Private lCGCValido := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Valida a duplicidade do CGC                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno .AND. Pcount() > 1 
	If cTipPes == "J" .Or. Empty(cTipPes)
		DbSelectArea("SA1")
		DbSetOrder(3)
		lAchou := DbSeek(xFilial("SA1")+cCNPJ)
		If lAchou
			lEleMesmo := M->A1_COD+M->A1_LOJA == SA1->A1_COD+SA1->A1_LOJA
		EndIf
		If lAchou .AND. !lEleMesmo
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³O parametro MV_VALCNPJ verifica se a validacao do CNPJ deve ser feita:                            ³
			//³1 = informando ao usuario que ja existe o CNPJ na base e verificando se deseja incluir mesmo assim³
			//³2 = nao permitindo que o usuario insira o mesmo CNPJ                                              ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If cMv_ValCNPJ == "1" 
				If !_SetAutoMode()
					If Aviso(STR0023,STR0028 + " " + AllTrim(SA1->A1_COD) + "/" + AllTrim(SA1->A1_LOJA) + " - " + AllTrim(SA1->A1_NOME) + ".",{STR0030,STR0031},2)<>1//"Atenção"###"O CNPJ informado já foi utilizado no cliente "###"Aceitar"###"Cancelar"
						lRetorno   := .F.
						lCGCValido := .F.
					Else
						lCGCValido := .T. // Indica que ja validou o CNPJ e nao devera validar novamente na confirmacao da inclusao
					EndIf
				EndIf
			Else
				Aviso(STR0023,STR0028 + " " + AllTrim(SA1->A1_COD) + "/" + AllTrim(SA1->A1_LOJA) + " - " + AllTrim(SA1->A1_NOME) + ".",{"Ok"})//"Atenção"###"O CNPJ informado já foi utilizado no cliente "
				lRetorno := .F.
			Endif
		ElseIf lRetorno			
			cCNPJBase := SubStr(cCNPJ,1,8)
			DbSelectArea("SA1")
			DbSetOrder(3)
		  	If DbSeek(xFilial("SA1")+cCNPJBase) .And. M->A1_COD <> SA1->A1_COD .And. SA1->A1_PESSOA == "J"
				If !_SetAutoMode()
					If Aviso(STR0023,STR0044 + " " + AllTrim(SA1->A1_COD) + "/" + AllTrim(SA1->A1_LOJA) + " - " + AllTrim(SA1->A1_NOME) + ".",{STR0030,STR0031},2)<>1//"Atenção"###"O CNPJ informado já foi utilizado no cliente "###"Aceitar"###"Cancelar"
						lRetorno   := .F.
						lCGCValido := .F.
					Else
						lCGCValido := .T. // Indica que ja validou o CNPJ e nao devera validar novamente na confirmacao da inclusao
					EndIf
				EndIf
			EndIf
		EndIf
	Else
		DbSelectArea("SA1")
		DbSetOrder(3)
		If DbSeek(xFilial("SA1")+cCNPJ) .And. M->A1_COD+M->A1_LOJA <> SA1->A1_COD+SA1->A1_LOJA
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³O parametro MV_VALCPF verifica se a validacao do CPF deve ser feita:                              ³
			//³1 = informando ao usuario que ja existe o CPF na base e verificando se deseja incluir mesmo assim ³
			//³2 = nao permitindo que o usuario insira o mesmo CPF                                               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If cMv_ValCPF == "1"
				If !_SetAutoMode()
					If Aviso(STR0023,STR0029 + " " + AllTrim(SA1->A1_COD) + "/" + AllTrim(SA1->A1_LOJA) + " - " + AllTrim(SA1->A1_NOME) + ".",{STR0030,STR0031},2)<>1//"Atenção"###"O CPF informado já foi utilizado cliente "###"Aceitar"###"Cancelar"
						lRetorno   := .F.
						lCGCValido := .F.
					Else
						lCGCValido := .T. // Indica que ja validou o CNPJ e nao devera validar novamente na confirmacao da inclusao
					EndIf
				EndIf
			Else 
				Aviso(STR0023,STR0029 + " " + AllTrim(SA1->A1_COD) + "/" + AllTrim(SA1->A1_LOJA) + " - " + AllTrim(SA1->A1_NOME) + ".",{"Ok"})//"Atenção"###"O CPF informado já foi utilizado no cliente "
				lRetorno := .F.
			Endif
		EndIf		
	EndIf	
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Valida a existencia do CNPJ/CPF nos cadastros de suspect³
//³e prospect                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If	lRetorno .AND. (nModulo == 5 .or. nModulo == 13) .And. !lEleMesmo
	If (cTipPes == "F" .And. cMv_ValCPF <> "1") .Or. ((cTipPes == "J" .Or. Empty(cTipPes)) .And. cMv_ValCNPJ <> "1")
		If !Empty(cCNPJ) .AND. FindFunction('TmkVeEnt')
			lRetorno := TmkVeEnt(cCNPJ,"SA1")
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Avalia o site da Receita Federal - Mashups                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
If lRetorno .AND. GetNewPar("MV_MASHUPS",.F.) .AND. !_SetAutoMode()
	RFMashups(M->A1_CGC,{"M->A1_NOME","M->A1_NREDUZ","M->A1_END","M->A1_CEP","M->A1_BAIRRO","M->A1_MUN","M->A1_EST"})
EndIf

RestArea(aAreaSA1)
RestArea(aArea)
Return lRetorno  


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A030ACN   ³ Autor ³ Vendas CRM            ³ Data ³ 20.09.11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Validação do campo A1_ACN para Australia.                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±|Parametros³ExpC1: ACN a ser Validado                                   |±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Cadastro de clientes                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/   
Function A030ACN(cACN)
Local aArea		:= GetArea()
Local aAreaSA1	:= SA1->(GetArea())
Local lRetorno	:= .T.
Local nDig		:= NIL
Local aPesos	:= {8,7,6,5,4,3,2,1}
Local nSoma		:=0
Local nVerif   
Local nX

DEFAULT cACN	:= &(ReadVar())


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Valida o tamanho para que tenha 9 posicoes                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !(Len(AllTrim(cACN))==9)    
	lRetorno := .F.
EndIf     

If lRetorno 
	For nX := 1 To 8
		nDig := Val(Substr(cACN,nX,1))
		nDig := nDig * aPesos[nX]
		nSoma += nDig		
	Next nX	
	nVerif := 10 - Mod(nSoma,10)
	nVerif := Iif(nVerif == 10,0,nVerif)
	lRetorno := (nVerif == Val(Substr(cACN,9,1)))
EndIf

If !lRetorno
	Help(" ",1,"CGC") 
EndIf    

RestArea(aAreaSA1)
RestArea(aArea)
Return lRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A030TFN   ³ Autor ³ Vendas CRM            ³ Data ³ 20.09.11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Validação do campo A1_TFN para Australia.                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±± 
±±|Parametros³ExpC1: TFN a ser Validado                                   |±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Cadastro de clientes                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/   
Function A030TFN(cTFN)
Local aArea		:= GetArea()
Local aAreaSA1	:= SA1->(GetArea())
Local lRetorno	:= .T.
Local nDig		:= NIL
Local aPesos	:= {1,4,3,7,5,8,6,9,10}
Local nSoma		:=0
Local nX     

DEFAULT cTFN	:= &(ReadVar())


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Valida o tamanho para que tenha 9 posicoes                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Len(AllTrim(cTFN))<8    
	lRetorno := .F.
EndIf                      

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Quando TFN for 8 casas, inserir um 0 antes do ultimo dígito  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Len(AllTrim(cTFN)) == 8
	cTFN := Substr(cTFN,1,7) + "0" + Substr(cTFN,8)
EndIf

If lRetorno 
	For nX := 1 To 9
		nDig := Val(Substr(cTFN,nX,1))
		nDig := nDig * aPesos[nX]
		nSoma += nDig		
	Next nX		
	lRetorno := (Mod(nSoma,11) == 0)
EndIf

If !lRetorno
	Help(" ",1,"CGC") 
EndIf     

RestArea(aAreaSA1)
RestArea(aArea)
Return lRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A030ABN   ³ Autor ³ Vendas CRM            ³ Data ³ 01.06.05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Validação do campo A1_CGC para Australia. Na localização    ³±±
±±³          ³Adotamos o ABN como CGC. Não há consistencia com A1_TIPO    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: ABN a ser Validado                                   ³±±
±±³          ³ExpC2: Opcional - Tabela para verificar duplicidade         ³±±
±±³          ³ExpN3: Opcional - Indice para verificar duplicidade         ³±±
±±³          ³ExpC4: Opcional - Cliente para verificar duplicidade        ³±±
±±³          ³ExpC5: Opcional - Loja para verificar duplicidade        	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Cadastro de clientes                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/   
Function A030ABN(cABN,cTabela,nIndice,cCliente,cLoja)
Local aArea		:= GetArea()
Local aAreaSA1	:= SA1->(GetArea())
Local lRetorno	:= .T.
Local nDig		:= NIL
Local aPesos	:= {10,1,3,5,7,9,11,13,15,17,19}
Local nSoma		:=0
Local nX

DEFAULT cABN		:= &(ReadVar())
DEFAULT cTabela		:= Iif(cTabela  == NIL .AND. FunName()=="MATA030","SA1","")
DEFAULT nIndice		:= Iif(nIndice  == NIL .AND. FunName()=="MATA030",3,NIL)
DEFAULT cCliente	:= Iif(cCliente == NIL .AND. FunName()=="MATA030","A1_COD","")
DEFAULT cLoja		:= Iif(cLoja    == NIL .AND. FunName()=="MATA030","A1_LOJA","")


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Valida o tamanho para que tenha 11 posicoes                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !(Len(AllTrim(cABN))==11)  
	lRetorno := .F.
EndIf     

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Valida a duplicidade do ABN                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno .AND. cTabela <> "" .AND. nIndice <> NIL .AND. cCliente <> "" .AND. cLoja <> ""	
	DbSelectArea(cTabela)
	DbSetOrder(nIndice)
	If DbSeek(xFilial(cTabela)+cABN) .AND. !(&("M->"+cCliente)+&("M->"+cLoja) == &(cTabela+"->"+cCliente)+&(cTabela+"->"+cLoja)) // Se encontrar para o mesmo cliente na mesma tabela
		Aviso(STR0023,STR0064 + " " + AllTrim(&(cTabela+"->"+cCliente)) + "/" + AllTrim(&(cTabela+"->"+cLoja)) + ".",{STR0024})//"Atenção"###"O ABN informado já foi utilizado no cliente "#"OK"
		lRetorno := .F.                                                                                                                                                                                                                  
		RestArea(aAreaSA1)
		RestArea(aArea)
		Return lRetorno		
	EndIf	
EndIf

If lRetorno 
	For nX := 1 To 11
		nDig := Val(Substr(cABN,nX,1))
		If nX == 1
			nDig -= 1	
		EndIf
		nDig := nDig * aPesos[nX]
		nSoma += nDig		
	Next nX	
	lRetorno := (Mod(nSoma,89) == 0)
EndIf

If !lRetorno
	Help(" ",1,"CGC") 
EndIf    

RestArea(aAreaSA1)
RestArea(aArea)
Return lRetorno       

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³AjustaSX3     ³ Autor ³Gilson da Silva       ³ Data ³25.07.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Ajusta o X3_Valid do A1_CGC                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³AjustaSX3()                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
*/

Static Function AjustaSX3()

Local aArea    := GetArea()

Local cCriaPtel := "0"               
Local nOrdem   	:= 0 
Local nOrdeAux 	:= 0 

DbSelectArea("SX3")
dbSetOrder(2)

//MV_RMCLASS: Parametro de ativacao da integracao do Protheus x RM Classis Net (RM Sistemas)
//Quando existir a integracao do Protheus x RM Classis Net (RM Sistemas), o campo (Cod. do Cliente) nao sera mais editavel.
//Sera buscado o codigo sequencial na tabela de controle de numeracao do RM Classis Net (RM Sistemas) atraves da funcao M030PrRMCli()
If GetNewPar("MV_RMCLASS", .F.)
	If DbSeek("A1_COD") .and. (alltrim(SX3->X3_RELACAO) <> 'MA030Relac()' .or. alltrim(SX3->X3_WHEN) <> '!GetNewPar("MV_RMCLASS",.F.)')
		RecLock('SX3',.F.)
		Replace SX3->X3_RELACAO With 'MA030Relac()'
		Replace SX3->X3_WHEN With '!GetNewPar("MV_RMCLASS",.F.)'
		MsUnlock()
	EndIf
EndIf


//Ajuste da VALID do campo A1_LOJA devido implementacao da Integracao entre os Sistemas Protheus x RM Classis Net
If SX3->(dbSeek("A1_LOJA"))
	If Alltrim(SX3->X3_VALID) <> 'iif(GetNewPar("MV_RMCLASS",.F.),.T.,existchav("SA1",M->A1_COD+M->A1_LOJA,,"EXISTCLI"))'
		RecLock("SX3",.F.)
		SX3->X3_VALID := 'iif(GetNewPar("MV_RMCLASS",.F.),.T.,existchav("SA1",M->A1_COD+M->A1_LOJA,,"EXISTCLI"))'
		MsUnlock()
	EndIf
EndIf


If cPaisLoc<>"BRA"
	DbSelectArea("SX3")
	DbSetOrder(2) 
	If DbSeek("A1_CBO    ")
		RecLock("SX3",.F.)
		SX3->X3_USADO := "€€€€€€€€€€€€€€€€"
		MsUnlock()
	EndIf
	
	DbSelectArea("SX3")
	DbSetOrder(2)
	If DbSeek("A1_CNAE   ")
		RecLock("SX3",.F.)
		SX3->X3_USADO := "€€€€€€€€€€€€€€€€"
		MsUnlock()
	EndIf
	
	DbSelectArea("SX3")
	DbSetOrder(2)
	If DbSeek("A1_SIMPLES")
		RecLock("SX3",.F.)
		SX3->X3_USADO := "€€€€€€€€€€€€€€€€"
		MsUnlock()
	EndIf
	
	DbSelectArea("SX3")
	DbSetOrder(2)
	If DbSeek("A1_CTARE  ")
		RecLock("SX3",.F.)
		SX3->X3_USADO := "€€€€€€€€€€€€€€€€"
		MsUnlock()
	EndIf

EndIf

DbSelectArea("SX3")
DbSetOrder(2)
//-- SIGATMS: Campo Codigo da Regiao do Cliente (A1_CDRDES)
If SX3->( MsSeek( "A1_CDRDES" ) ) .And. ;
	( SX3->X3_TITULO <> "Reg. Cliente" .Or. SX3->X3_TITSPA <> "Reg. Cliente" .Or.  SX3->X3_TITENG <> "Cust. Region" ) 
	
	RecLock("SX3", .F.)
	SX3->X3_TITULO  := "Reg. Cliente"
	SX3->X3_DESCRIC := "Regiao do Cliente"
	SX3->X3_TITSPA  := "Reg. Cliente"
	SX3->X3_DESCSPA := "Region del Cliente"
	SX3->X3_TITENG  := "Cust. Region"
	SX3->X3_DESCENG := "Customer Region"
	SX3->(MsUnlock())
EndIf
//-- SIGATMS: Campo Descricao da Regiao do Cliente (A1_REGDES)
If SX3->( MsSeek( "A1_REGDES" ) ) .And. ;
 	( SX3->X3_TITULO <> "Des.Reg.Cli." .Or. SX3->X3_TITSPA <> "Des.Reg.Cli." .Or. 	SX3->X3_TITENG <> "Des.Cus.Reg." )
	
	RecLock("SX3", .F.)
	SX3->X3_TITULO  := "Des.Reg.Cli."
	SX3->X3_DESCRIC := "Descr. Regiao do Cliente"
	SX3->X3_TITSPA  := "Des.Reg.Cli."
	SX3->X3_DESCSPA := "Descr. Region del Cliente"
	SX3->X3_TITENG  := "Des.Cus.Reg."
	SX3->X3_DESCENG := "Descrip. Customer Region"
	SX3->(MsUnlock())
EndIf 
If SX3->(DbSeek(PADR("A1_REGDES",Len(SX3->X3_CAMPO))))
	If Alltrim(SX3->X3_RELACAO) <> "IIF(Inclui,'',Posicione('DUY',1,xFilial('DUY')+SA1->A1_CDRDES,'DUY_DESCRI'))"
		RecLock("SX3", .F.)
		SX3->X3_RELACAO := "IIF(Inclui,'',Posicione('DUY',1,xFilial('DUY')+SA1->A1_CDRDES,'DUY_DESCRI'))"
		SX3->(MsUnlock())
	EndIf
EndIf
      
SX3->( DbSetOrder(2) )
SX3->( DbSeek( "A1_GRPVEN" ) )
If ! SX3->( EOF() )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Deixar a campo X3_VALID em branco, pois nao permitia informar Taxa = 0 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If UPPER( AllTrim(SX3->X3_VALID) ) <> UPPER( 'Vazio() .or. ExistCpo("ACY")' )
		RecLock("SX3")
		SX3->X3_VALID := 'Vazio() .or. ExistCpo("ACY")'
		MsUnlock()
	EndIf
EndIf

If cPaisloc == "PAR"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza X3_PICTURE e o X3_VALID do campo A1_CGC (RUC) - Paraguay     	³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	SX3->(dbSetOrder(2))
	If SX3->(dbSeek("A1_CGC"))
		If Trim(Upper(SX3->X3_PICTURE)) != "@R 9999999999"
			RecLock("SX3",.F.)
			SX3->X3_PICTURE  := "@R 9999999999"
			SX3->(MsUnlock())
		EndIf
		If Trim(Upper(SX3->X3_VALID)) != Upper("Vazio() .Or. A030RUC(M->A1_CGC)")
			RecLock("SX3",.F.)
			SX3->X3_VALID  := "Vazio() .Or. A030RUC(M->A1_CGC)"
			SX3->(MsUnlock())		
		EndIf
	EndIf
EndIf    

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ajuste do posicionamento do campo pra nao gerar alerta na exclusao do registro.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SX3->( DbSetOrder(2) )
SX3->( DbSeek( "A1_VM_OBS" ) )
If ! SX3->( EOF() )
	If UPPER( AllTrim(SX3->X3_RELACAO) ) <> UPPER("E_MSMM(SA1->A1_OBS,60)")
		RecLock("SX3",.F.)
		SX3->X3_RELACAO := "E_MSMM(SA1->A1_OBS,60)"
		MsUnlock()
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ajusta o Inicializador padrao do campo A1_PESSOA devido utilizacao da rotina Automatica ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SX3->( DbSetOrder(2) )
if SX3->( dbSeek( "A1_PESSOA" ) ) .and. !empty(SX3->X3_RELACAO) .and. alltrim(SX3->X3_RELACAO) <> "IF(Type('l030Auto')<>'U' .And. l030Auto,'',IF(Left(SA1->A1_CGC,2) == '  ',' ',If(Len(Trim(SA1->A1_CGC))<14,'F','J')))"
	RecLock("SX3", .F.)
	SX3->X3_RELACAO := "IF(Type('l030Auto')<>'U' .And. l030Auto,'',IF(Left(SA1->A1_CGC,2) == '  ',' ',If(Len(Trim(SA1->A1_CGC))<14,'F','J')))"
	SX3->( MsUnlock() )
endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza validacao do campo natureza, para observar corretamente o campo ED_USO        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SX3->( DbSetOrder(2) )
If SX3->( DbSeek( "A1_NATUREZ" ) ) .And. Upper( AllTrim( SX3->X3_VALID ) ) <> "FINVLDNAT( .T., , 1 )"
	Reclock( "SX3", .F. )
	SX3->X3_VALID := "FinVldNat( .T., , 1 )"
	MsUnLock()
EndIf	

If cPaisLoc=="ARG"
	If SX3->(dbSeek("A1_PESSOA"))
		If Upper(Alltrim(SX3->X3_VALID) )<>'PERTENCE(" FJ") .AND. CUIT(M->A1_CGC,"A1_CGC")'
			RecLock("SX3",.F.)
			SX3->X3_VALID := 'Pertence(" FJ") .And. Cuit(M->A1_CGC,"A1_CGC")'
			MsUnlock()
		EndIf
	EndIf
	If SX3->(dbSeek("A1_EST"))
		If Upper(Alltrim(SX3->X3_VALID) )<>'EXISTCPO("SX5","12"+M->A1_EST).AND. CUIT(M->A1_CGC,"A1_CGC")'
			RecLock("SX3",.F.)
			SX3->X3_VALID :='Existcpo("SX5","12"+M->A1_EST).And. Cuit(M->A1_CGC,"A1_CGC")' 
			MsUnlock()
		EndIf
	EndIf
Endif          


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ajusta o campo de visualisar para alterar atendendo ao mudulo do PLS ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SX3->( DbSetOrder(2) )
If cModulo ='PLS' .and. SX3->( dbSeek( "A1_CEINSS" ) ) .and. SX3->X3_VISUAL<>"A"  
	RecLock("SX3", .F.)
	SX3->X3_VISUAL := "A"
	SX3->( MsUnlock() )
Endif

If cPaisLoc=="PTG"
	If SX3->(dbSeek("A1_COD_MUN"))
		If Upper(Alltrim(SX3->X3_VALID) )<>'VAZIO() .OR.(EXISTCPO("CC2",,3) .AND. NIF(M->A1_CGC))'
			RecLock("SX3",.F.)
			SX3->X3_VALID := 'Vazio() .Or.(ExistCpo("CC2",,3) .And. NIF(M->A1_CGC))'
			MsUnlock()
		EndIf
	EndIf
Endif

SX3->( DbSetOrder(2) )
If SX3->( DbSeek( "A1_IBGE" ) ) .And. Upper( AllTrim( SX3->X3_RESERV ) ) <> "¦+"
	Reclock( "SX3", .F. )
	SX3->X3_RESERV := "¦+"
	MsUnLock()
EndIf	

SX3->( DbSetOrder(2) )
If DbSeek("A1_CNAE   ")  .And. Alltrim(SX3->X3_WHEN) == 'M->A1_PESSOA = "J"'
	RecLock("SX3",.F.)
	SX3->X3_WHEN := ""
	MsUnlock()	
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ajusta a máscara utilizada para digitação do Telefone no SA1 - clientes³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SX3->( DbSetOrder(2) )
cCriaPtel := GetNewPar("MV_PICTTEL","1")

If cCriaPtel == '1'
	If MsSeek("A1_TEL") .AND. X3_PICTURE <> '@R 9999999999'
		RecLock("SX3")
		Replace X3_PICTURE With '@R 9999999999'
	    MsUnlock()
	EndIf
	If MsSeek("A1_FAX") .AND. X3_PICTURE <> '@R 9999999999'
		RecLock("SX3")
		Replace X3_PICTURE With '@R 9999999999'
	    MsUnlock()
	EndIf
ElseIf cCriaPtel == '2'
	If MsSeek("A1_TEL") .AND. X3_PICTURE <> '@R 9999-9999'
		RecLock("SX3")
		Replace X3_PICTURE With '@R 9999-9999'
	    MsUnlock()
	EndIf
	If MsSeek("A1_FAX") .AND. X3_PICTURE <> '@R 9999-9999'
		RecLock("SX3")
		Replace X3_PICTURE With '@R 9999-9999'
	    MsUnlock()
	EndIf
EndIf

If cPaisLoc=="COL" 
	If SX3->(MsSeek("A1_NOMEPRI"))
		nOrdem := SX3->X3_ORDEM
		If SX3->(MsSeek("A1_MSBLQL"))
			If SX3->X3_ORDEM < nOrdem
				nOrdeAux := SX3->X3_ORDEM
				RecLock("SX3")
				SX3->X3_ORDEM := nOrdem
				SX3->( MsUnlock() )
				If SX3->(MsSeek("A1_NOMEPRI"))
					RecLock("SX3")
					SX3->X3_ORDEM := nOrdeAux
					SX3->( MsUnlock() )
				EndIf
			EndIf
		EndIf
	EndIf
	
	If MsSeek("A1_CGC") .AND. X3_PICTVAR <> "PictNIT(M->A1_TIPO)"
		RecLock("SX3")
		SX3->X3_PICTVAR := "PictNIT(M->A1_TIPO)"
		SX3->( MsUnlock() )
	EndIf
	
EndIf

If cPaisLoc == "BRA"
	SX3->( DbSetOrder(2) )
	If SX3->(dbSeek("A1_CBAIRRE")) .And. SX3->X3_USADO <> "€€€€€€€€€€€€€€€"
		RecLock("SX3", .F.)
		SX3->X3_USADO := "€€€€€€€€€€€€€€€"
		SX3->X3_RESERV:= "—€"
		SA1->(MsUnLock())
    EndIf 
    If SX3->(dbSeek("A1_CODMUNE")) .And. !Empty(SX3->X3_WHEN)
		RecLock("SX3", .F.)
		SX3->X3_WHEN := ""
		SA1->(MsUnLock())
    EndIf
EndIf

If cPaisLoc $ "ARG/MEX" .And. DbSeek("A1_IENCONT")
	RecLock("SX3")
	Replace X3_USADO With '€€€€€€€€€€€€€€€'
    MsUnlock()	
EndIf

SX3->( dbSetOrder( 1 ) )

RestArea(aArea)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Marco Bianchi         ³ Data ³01/09/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±³          ³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³	  1 - Pesquisa e Posiciona em um Banco de Dados           ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function MenuDef()

Local lPyme			:= Iif(Type("__lPyme") <> "U",__lPyme,.F.)
Local aPermissoes	:= {}											// Permissões do representante comercial

Private aRotina	:= {}
Private lIntLox	:= GetMv("MV_QALOGIX") == "1"     

If Alltrim(Upper(Funname())) == "ACAA700"  // verifica se foi chamado pelo modulo Gestao Educacional   
	aRotina := { 	{STR0001,"PesqBrw"    , 0 , 1,0 ,.F.},;  			// "Pesquisar"
						{STR0002, "A030Visual" , 0 , 2,0   , NIL},;  	// "Visualizar"
						{STR0003, "A030Inclui" , 0 , 3,81  , NIL},;  	// "Incluir"
						{STR0004, "A030Altera" , 0 , 4,143 , NIL},;  	// "Alterar"
						{STR0005, "A030Deleta" , 0 , 5,144 , NIL}}		// "Excluir"
ElseIf lIntLox
	aRotina := { 	{STR0001,"PesqBrw"    , 0 , 1,0 ,.F.},;   			// "Pesquisar"
						{STR0002,"A030Visual" , 0 , 2 ,0  , NIL},;		// "Visualizar"
						{STR0004,"A030Altera" , 0 , 4 ,82 , NIL},;		// "Alterar"
						{STR0010,"FtContato"  , 0 , 4 ,0  , NIL}}		// "Contatos"
Else
	If (IsInCallStack("FATA320") .OR. IsInCallStack("FATA321")) .AND. FindFunction("FT060Permi")
		aPermissoes := FT060Permi(__cUserId, "ACA_ACCLIE")
	Else
		aPermissoes := {.T.,.T.,.T.,.T.}
	EndIf
	
	aRotina := { 	{STR0001,"PesqBrw"    , 0 , 1,0 ,.F.}}		// "Pesquisar"
	
	If aPermissoes[4]
		aAdd(aRotina,{STR0002,"A030Visual" , 0 , 2,0 ,NIL})	// "Visualizar"
	EndIf
	If aPermissoes[1]
		aAdd(aRotina,{STR0003,"A030Inclui" , 0 , 3,81,NIL})	// "Incluir"
	EndIf
	If aPermissoes[2]                                                             
	
			
		aAdd(aRotina,{STR0004,"A030Altera" , 0 , 4,143,NIL})	// "Alterar"
	EndIf
	If aPermissoes[3]
		aAdd(aRotina,{STR0005,"A030Deleta" , 0 , 5,144,NIL})	// "Excluir"
	EndIf
	aAdd(aRotina,{STR0010,"FtContato"	 , 0 , 4,0 ,NIL})		// "Contatos"
						
//	If !lPyme   <<== Inibido serie 3 tem banco do conhecimento
		Aadd(aRotina,{STR0014,"MsDocument", 0 , 4,0,NIL}) //"Conhecimento"
//	EndIf			

	aadd(aRotina,{STR0011,"Mata030Ref" , 0 , 3,0,NIL}) // //"Referencias"

EndIf

aAdd(aRotina,{OemtoAnsi(STR0045), "A030WizFac", 0, 4, 143, .F.})	//"Facilitador"

If lHistFiscal
	Aadd(aRotina, { 'Histórico',  "A030Hist" , 0 ,0,0, NIL })//"Histórico
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada - Adiciona rotinas ao aRotina       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistTemplate("MA030ROT")
	aRotAdic := ExecTemplate("MA030ROT", .F., .F.)
	If ValType(aRotAdic) == "A"
		AEval(aRotAdic,{|x| AAdd(aRotina,x)})
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada - Adiciona rotinas ao aRotina       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("MA030ROT")
	aRotAdic := ExecBlock("MA030ROT", .F., .F.)
	If ValType(aRotAdic) == "A"
		AEval(aRotAdic,{|x| AAdd(aRotina,x)})
	EndIf
EndIf      

Return(aRotina)     


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Mata030RotºAutor  ³Vendas CRM          º Data ³  01/09/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Retorna o array aRotina do Mata030                          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³MATA030                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Mata030Rot()
Return MenuDef()

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³RFMashups ³ Autor ³ Eduardo Riera         ³ Data ³30.11.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao dos dados fornecidos pela Receita Federal       ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: CNPJ ou CPF                                          ³±±
±±³          ³ExpA2: Array com os dados que serao preenchidos             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function RFMashups(cCNPJ,aArray)

Local oWS
Local oDlg
Local oFont
Local oBold
Local cBitmap := CriaTrab(,.F.)+".jpg"
Local nHdle := 0
Local cIdentity := Space(4)

cCNPJ := AllTrim(cCNPJ)

If cPaisLoc=="BRA" //.AND. EcoHandShake("MICROSIGA","SHOWECO")
	If Len(cCNPJ) == 14
		oWS := WSCNPJ():New()
	Else
		oWS := WSCPF():New()	
	EndIf
	oWS:cidentity := ""
	If oWS:GetParams()
		
		FErase (cBitMap)
		nHdle := FCreate(cBitMap,0)
		FWrite(nHdle,OWS:OWSGETPARAMSRESULT:CImgByteArray)
		FClose(nHdle)
	
		DEFINE MSDIALOG oDlg FROM 0,0 TO 184,354 TITLE STR0035 Of oMainWnd PIXEL //"Consulta a Receita Federal"
		DEFINE FONT oBold NAME "Arial" SIZE 0, -13 BOLD
		@ 000,000 BITMAP RESNAME "LOGIN" oF oDlg SIZE 035,155 NOBORDER WHEN .F. PIXEL
		@ 002,040 SAY STR0036 Of oDlg PIXEL SIZE 400,013 //"Por favor, repita os caracteres abaixo"
		@ 011,035 TO 013,400 LABEL "" OF oDlg PIXEL
		@ 015,040 BITMAP FILE cBitmap oF oDlg SIZE 249,099 NOBORDER WHEN .F. PIXEL
		@ 080,040 GET oGet VAR cIdentity Of oDlg PIXEL SIZE 051,009
		TButton():New(080,100,STR0037,oDlg,{|| oDlg:End()},32,10,,oDlg:oFont,.F.,.T.,.F.,,.F.,,,.F.) //"Obter"
		TButton():New(080,140,STR0031,oDlg,{|| cIdentity := "",oDlg:End()},32,10,,oDlg:oFont,.F.,.T.,.F.,,.F.,,,.F.) //"Cancelar"
		ACTIVATE MSDIALOG oDlg CENTERED	
		FErase(cBitMap)
			
		If !Empty(cIdentity)
			oWS:cIdentity := ""
			If Len(cCNPJ) == 14
				oWs:oWSaParams := CNPJ_CNPJPARAMS():New()
				oWs:oWSaParams:cCNPJ         := cCNPJ
				oWs:oWSaParams:cImgCode      := cIdentity
				oWs:oWSaParams:cImgCookie    := oWS:OwsGetParamsResult:cImgCookie
				oWs:oWSaParams:cImgByteArray := oWS:OwsGetParamsResult:CImgByteArray
			Else
				oWs:oWSaParams := CPF_CPFPARAMS():New()
				oWs:oWSaParams:cCPF          := cCNPJ
				oWs:oWSaParams:cImgCode      := cIdentity
				oWs:oWSaParams:cImgCookie    := oWS:OwsGetParamsResult:cImgCookie
				oWs:oWSaParams:cImgByteArray := oWS:OwsGetParamsResult:CImgByteArray			
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Recupera os dados do WS                              ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ			
			If oWS:GetData()
				If Len(cCNPJ) == 14
					oWS:OwsGetDataResult:cCEP := StrTran(oWS:OwsGetDataResult:cCEP,".","")
					oWS:OwsGetDataResult:cCEP := StrTran(oWS:OwsGetDataResult:cCEP,"-","")				
					&(aArray[1])    := IIF(Empty(&(aArray[1])),PadR(oWS:OwsGetDataResult:cName       ,Len(&(aArray[1]))),&(aArray[1]))
					&(aArray[2])    := IIF(Empty(&(aArray[2])),PadR(oWS:OwsGetDataResult:cNickName ,Len(&(aArray[2]))),&(aArray[2]))
					&(aArray[3])    := IIF(Empty(&(aArray[3])),PadR(AllTrim(oWS:OwsGetDataResult:cAddress)+","+AllTrim(oWS:OwsGetDataResult:cNumber)+" "+oWS:OwsGetDataResult:cComplement,Len(&(aArray[3]))),&(aArray[3]))
					&(aArray[4])    := IIF(Empty(&(aArray[4])),PadR(oWS:OwsGetDataResult:cCEP ,Len(&(aArray[4]))),&(aArray[4]))
					&(aArray[5])    := IIF(Empty(&(aArray[5])),PadR(oWS:OwsGetDataResult:cNeighborhood,Len(&(aArray[5]))),&(aArray[5]))
					&(aArray[6])    := IIF(Empty(&(aArray[6])),PadR(oWS:OwsGetDataResult:cCity ,Len(&(aArray[6]))),&(aArray[6]))
					&(aArray[7])    := IIF(Empty(&(aArray[7])),PadR(oWS:OwsGetDataResult:cState,Len(&(aArray[7]))),&(aArray[7]))
				Else
					&(aArray[1])   := IIF(Empty(&(aArray[1])),PadR(oWS:OwsGetDataResult:cName       ,Len(&(aArray[1]))),&(aArray[1]))
				EndIf
			Else				
				Aviso(STR0038,STR0039,{"Ok"}) //"Ecossistema"###"Site da receita federal não disponível"
			EndIf
		EndIf
	Else				
		Aviso(STR0038,STR0039,{"Ok"}) //"Ecossistema"###"Site da receita federal não disponível"
   	EndIf
EndIf
Return(.T.)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³A030Cep   ³ Autor ³ Eduardo Riera         ³ Data ³30.11.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao dos dados fornecidos pelos correios             ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: CEP                                                  ³±±
±±³          ³ExpA2: Array com os dados que serao preenchidos             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A030Cep(cTipo)

DEFAULT cTipo := ""
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Avalia o site dos correiros - Mashups                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
If GetNewPar("MV_MASHUPS",.F.) .AND. !_SetAutoMode()
	Do Case
		Case cTipo == "E"
			CepMashups(M->A1_CEPE,{"M->A1_ENDENT","M->A1_BAIRROE","M->A1_MUNE","M->A1_ESTE"})
		Case cTipo == "C"
			CepMashups(M->A1_CEPC,{"M->A1_ENDCOB","M->A1_BAIRROC","M->A1_MUNC","M->A1_ESTC"})
		OtherWise
			CepMashups(M->A1_CEP,{"M->A1_END","M->A1_BAIRRO","M->A1_MUN","M->A1_EST"})
	EndCase
EndIf
Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³CEPMashups³ Autor ³ Eduardo Riera         ³ Data ³30.11.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao dos dados fornecidos pelos correios             ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: CNPJ ou CPF                                          ³±±
±±³          ³ExpA2: Array com os dados que serao preenchidos             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function CepMashups(cCep,aArray)

Local oWS
Local cIdentity := Space(4)

If cPaisLoc=="BRA" //.AND. EcoHandShake("MICROSIGA","SHOWECO")
	oWS := WSCEP():New()
	oWS:cidentity := ""
	If oWS:GetParams()
		oWS:cIdentity := ""
		oWs:oWSaParams := CEP_CEPPARAMS():New()
		oWs:oWSaParams:cPostalCode       := cCep
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Recupera os dados do WS                              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ			
		If oWS:GetData()
			&(aArray[1])    := IIF(Empty(&(aArray[1])),PadR(AllTrim(oWS:OwsGetDataResult:cAddress),Len(&(aArray[1]))),&(aArray[1]))
			&(aArray[2])    := IIF(Empty(&(aArray[2])),PadR(oWS:OwsGetDataResult:cNeighborhood,Len(&(aArray[2]))),&(aArray[2]))
			&(aArray[3])    := IIF(Empty(&(aArray[3])),PadR(oWS:OwsGetDataResult:cCity ,Len(&(aArray[3]))),&(aArray[3]))
			&(aArray[4])    := IIF(Empty(&(aArray[4])),PadR(oWS:OwsGetDataResult:cState,Len(&(aArray[4]))),&(aArray[4]))
		Else				
			Aviso(STR0038,STR0040,{"Ok"}) //"Ecossistema"###"Site dos correios não disponível"
		EndIf
	Else				
		Aviso(STR0038,STR0040,{"Ok"}) //"Ecossistema"###"Site dos correios não disponível"
   	EndIf
EndIf
Return(.T.)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³A030WizFac³ Autor ³ Gustavo G. Rueda      ³ Data ³27/11/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Chamada da rotina que permite uma manutencao facil no      ³±±
±±³          ³ cadastro.                                                  ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³.T.                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A030WizFac()
Local cCmps		 :=	""
Local aPar		 :=	{}
Local cMVA030FAC :=	GetNewPar("MV_A030FAC","")

cCmps	:=	"A1_TIPO/A1_MUN/A1_EST/A1_NATUREZ/A1_ESTADO/A1_BAIRRO/A1_CEP/A1_CONTATO/A1_VEND/A1_COMIS/A1_REGIAO/"
cCmps	+=	"A1_CONTA/A1_BCO1/A1_BCO2/A1_BCO3/A1_BCO4/A1_BCO5/A1_TRANSP/A1_TPFRET/A1_COND/A1_DESC/A1_PRIOR/A1_RISCO/A1_LC/A1_VENCLC/"
cCmps	+=	"A1_CLASSE/A1_LCFIN/A1_MOEDALC/A1_CLASVEN/A1_MENSAGE/A1_RECISS/A1_SUFRAMA/A1_TABELA/A1_INCISS/A1_CXPOSTA/A1_ATIVIDA/"
cCmps	+=	"A1_ALIQIR/A1_CALCSUF/A1_GRPTRIB/A1_BAIRROC/A1_CEPC/A1_MUNC/A1_ESTC/A1_BAIRROE/A1_CEPE/A1_MUNE/A1_ESTE/A1_CODLOC/A1_TPISSRS/"
cCmps	+=	"A1_CODPAIS/A1_TPESSOA/A1_TIPCLI/A1_EMAIL/A1_CODMUN/A1_HPAGE/A1_CNAE/A1_CONDPAG/A1_DIASPAG/A1_DESCPAG/A1_OBS/A1_RECINSS/"
cCmps	+=	"A1_RECCOFI/A1_RECCSLL/A1_RECPIS/A1_COD_MUN/A1_CONTAB/A1_GRPVEN/A1_MSBLQL/A1_VINCULO/A1_DTINIV/A1_DTFIMV/A1_SIMPLES/A1_CEINSS/"
cCmps	+=	"A1_FRETISS/A1_CTARE/A1_ABATIMP/A1_RECIRRF/A1_RECFET/A1_CONTRIB/A1_TIPPRFL/A1_PRF_OBS/A1_PRF_VLD/"
cCmps	+=	cMVA030FAC

aAdd(aPar,{"SA1","A1_COD+' - '+A1_NOME", cCmps, ""})

MATA984(aPar[1,1],aPar[1,2],aPar[1,3],,aPar[1,4])

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  |MA030Trans| Autor ³ Conrado Q. Gomes      ³ Data ³03/01/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Processa gravações durante a inclusão.                     ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³.T.                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MA030Trans( nOpcA )
Local l030Inc  := (ExistBlock("M030Inc"))				// Existi função
Local lT030Inc := (ExistTemplate("M030Inc"))        	// Existi função
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Funcionalidades do APDL                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lIntegraDL :=	(SuperGetMV("MV_INTDL") == "S")		// Aparametros de Funcionalidade Advpl
Local lOperadorL := SuperGetMV("MV_APDLOPE")			// Aparametros de Funcionalidade Advpl
Local cFilialAdm := SuperGetMV("MV_APDLFOP")          	// Aparametros de Funcionalidade Advpl
Local lFilialCli := cFilialAdm # cFilAnt				// controla filial do cliente

If lT030Inc
	ExecTemplate("M030Inc",.f.,.f., nOpcA )
Endif
If l030Inc
	ExecBlock("M030Inc",.f.,.f., nOpcA )
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Gravacao no Log de Alteracoes do Front Loja. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nOpcA == 1
	If FindFunction("FRTGeraSLH")
		FRTGeraSLH("SA1", "I")
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Caso utilize os modulos do APDL e esteja sendo utilizado ³
//³ no ambiente de operador logistico avisa o usuario sobre o³
//³ procediemento de cadastro de clientes.                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nOpcA == 1 .AND. lIntegraDL .AND. lOperadorL .AND. lFilialCli
	If !( l030Auto )
		HELP(" ",1,"APDLCLIOPL")
	EndIf
	Mat030Oper(SA1->A1_COD,SA1->A1_LOJA,SA1->A1_CGC,cFilialAdm)
EndIf
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³MT030Refre³ Autor ³ Marco Bianchi         ³ Data ³ 22/11/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Efetua o refresh nas GetDados                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Cadastro de clientes                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/   

Static Function MT030Refre( aGetDad )
        
aGetDad[1]:oBrowse:lDisablePaint := .F.
aGetDad[1]:oBrowse:Refresh(.T.) 

Return( .T. )

/*/  
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ MT030Fld ³ Autor ³ Marco Bianchi         ³ Data ³ 22/11/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Funcao de Tratamento dos Folders                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Cadastro de clientes                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/   

Static Function MT030Fld(nFldDst,nFldAtu,oFolder,aGetDad)

Local lRetorno:= .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Efetua a Validacao da GetDados                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aGetDad[nFldAtu]:TudoOk()
If ( aGetDad[nFldAtu]:TudoOk() )
	lRetorno := .T.
	aGetDad[nFldAtu]:oBrowse:lDisablePaint := .T.
	Do Case
	Case ( nFldAtu == 1 )
		aCols1  := aClone(aCols)
		aHeader1:= aClone(aHeader)
	Case ( nFldAtu == 2 )
		aCols2  := aClone(aCols)
		aHeader2:= aClone(aHeader)
	Case ( nFldAtu == 3 )
		aCols3  := aClone(aCols)
		aHeader3:= aClone(aHeader)
	EndCase
	N := Max(aGetDad[nFldDst]:oBrowse:nAt,1)
	Do Case
	Case ( nFldDst == 1 )
		aCols   := aClone(aCols1)
		aHeader := aClone(aHeader1)
	Case ( nFldDst == 2 )
		aCols   := aClone(aCols2)
		aHeader := aClone(aHeader2)
	Case ( nFldDst == 3 )
		aCols   := aClone(aCols3)
		aHeader := aClone(aHeader3)
	EndCase
	aGetDad[nFldDst]:oBrowse:lDisablePaint := .F.
	aGetDad[nFldDst]:oBrowse:Refresh(.T.)
EndIf     

Return(lRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³MT030Ok   ³ Autor ³ Marco Bianchi         ³ Data ³ 22/11/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Funcao de validacao da Getdados                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Cadastro de clientes                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/   

Function MT030Ok(aGetDad,nAtu)

Local lRetorno := .F.
Local aSavHead := aClone(aHeader)
Local aSavCols := aClone(aCols)
Local nSavN    := N
        
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Valida todas as getdados                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ aCols e aHeader 1 e 2 nao coincidem com folder 1 e 2 devido  ³
//³ a um erro na classe folder ( nao alterar )                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( nAtu == 2 )
	aHeader := aClone(aSavHead)
	aCols   := aClone(aSavCols)
	N       := nSavN
Else
	aHeader := aClone(aHeader1)
	aCols   := aClone(aCols1)
	N       := Max(aGetDad[1]:oBrowse:nAT,1)
EndIf 	
If ( aGetDad[1]:TudoOk() )
	If ( nAtu == 1 )
		aHeader := aClone(aSavHead)
		aCols   := aClone(aSavCols)
		N       := nSavN
	Else
		aHeader := aClone(aHeader2)
		aCols   := aClone(aCols2)
		N       := Max(aGetDad[2]:oBrowse:nAT,1)
	EndIf
	If ( aGetDad[2]:TudoOk() )

		If ( nAtu == 3 )
			aHeader := aClone(aSavHead)
			aCols   := aClone(aSavCols)
			N       := nSavN
		Else
			aHeader := aClone(aHeader3)
			aCols   := aClone(aCols3)
			N       := Max(aGetDad[3]:oBrowse:nAT,1)
		EndIf
		If ( aGetDad[3]:TudoOk() )
			lRetorno := .T.			
		Endif 				
	EndIf
EndIf

aHeader := aClone(aSavHead)
aCols   := aClone(aSavCols)
N       := nSavN
    
Return(lRetorno)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ A030Reg  ³ Autor ³ Richard Anderson      ³ Data ³ 04.06.07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Validacao do campo A1_CDRDES                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Cadastro de clientes                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/   
Function A030Reg()

Local lRet := .T.

If AliasInDic('DUY') .And. DUY->(FieldPos('DUY_PAIS')) > 0 .And. !Empty(M->A1_PAIS)
	If M->A1_PAIS != Posicione('DUY',1,xFilial('DUY')+M->A1_CDRDES,'DUY_PAIS')
		MsgAlert(STR0043) //-- Região não pertence ao país informado
		lRet := .F.
	EndIf
EndIf			


Return(lRet)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ A030RUC	³ Autor ³ Marcio Menon          ³ Data ³ 26/03/09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Funcao para validação do RUC (A1_CGC).					  ³±±
±±³			 ³ 													          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Cadastro de clientes (Localizado - Paraguay)               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/   
Function A030RUC(cVldRuc)

Local aArea  := GetArea()
Local lRet   := .T.
Local cDvRuc := ""

DEFAULT cVldRuc := ""

//Faço a comparação dos dígitos
If cPaisLoc == "EQU"
	If Type("M->A1_TIPDOC") <> "U"
		If Empty(M->A1_TIPDOC)
			If (FindFunction("DvRucEqu") .And. !DvRucEqu(cVldRuc)) 
				If FindFunction("ChkDocEQU") .And. !ChkDocEQU(cVldRuc, .F.)
					Help(" ",1,"RUC")		//Digito verificador incorreto.          
					lRet := .F.					
				EndIf
			EndIf
		ElseIf AllTrim(M->A1_TIPDOC) == "01"
			If FindFunction("DvRucEqu") .And. !DvRucEqu(cVldRuc)
				Help(" ",1,"RUC")		//Digito verificador incorreto.          
				lRet := .F.
			EndIf
		ElseIf M->A1_TIPDOC == "02"
			If FindFunction("ChkDocEQU")
				lRet := ChkDocEQU(cVldRuc, .T.)
			EndIf
		EndIf
	Else
		If (FindFunction("DvRucEqu") .And. !DvRucEqu(cVldRuc)) 
			If FindFunction("ChkDocEQU") .And. !ChkDocEQU(cVldRuc, .F.)
				Help(" ",1,"RUC")		//Digito verificador incorreto.          
				lRet := .F.					
			EndIf
		EndIf
	EndIf
Else

	cVldRuc := AllTrim(Replace(cVldRuc,"-",""))
	
	//Guardo o digito verificador
	cDvRuc := SubStr(cVldRuc,Len(cVldRuc),Len(cVldRuc))
	
	//Guardo o RUC digitado sem o digito verificador
	cVldRuc := SubStr(cVldRuc,1,Len(cVldRuc)-1)
	
	If cPaisLoc == "PER"	
		If  FindFunction("DvRucPer") .AND. AllTrim(DvRucPer(cVldRuc)) != cDvRuc 
			Help(" ",1,"RUC")		//Digito verificador incorreto.          
			lRet := .F.
		Endif
	Else
		If DvRucPar(cVldRuc) != cDvRuc
			Help(" ",1,"RUC")		//Digito verificador incorreto.
			lRet := .F.
		Endif
	EndIf
EndIf

RestArea(aArea)

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ A030RIF	³ Autor ³ Marcio Menon          ³ Data ³ 26/03/09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Funcao para validação do RIF (A1_CGC).					  ³±±
±±³			 ³ 													          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Cadastro de clientes (Localizado - Paraguay)               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A030RIF(cVldRif)

Local aArea  := GetArea()
Local lRet   := .T.

DEFAULT cVldRif := ""

If (FindFunction("DvRifVen") .And. !DvRifVen(cVldRif)) 
	Help(" ",1,"RIF")		//Digito verificador incorreto.          
	lRet := .F.					
EndIf

RestArea(aArea)

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao:    ³ AjustaHelp   ³ Autor:³ David dos Santos     ³Data: ³25/09/2009³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao: ³Ajusta os Helps                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe:   ³AjustaHelp()                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros:³Nenhum                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno:   ³Nenhum                                                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
*/
Static Function AjustaHelp()

Local aHelpPor := {}
Local aHelpEng := {}
Local aHelpSpa := {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Help dos campos CFD do Mexico³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cPaisLoc == "MEX"
	aHelpPor	:= {"Indica o modelo de comprovante fiscal   ",		;
						"digital que devera ser gerado para o    ",	;
						"cliente."}				 
	aHelpEng	:= {"Indicates the type of digital tax ",			;
						"receipt to be generated for the client"}
	aHelpSpa	:= {"Indica el modelo de comprobante fiscal  ",		;
						"digital que debe generarse para el      ",	;
						"cliente."} 
					 
	PutHelp("PA1_MODCFD", aHelpPor, aHelpEng, aHelpSpa, .T.)
EndIf

aHelpPor	:= {"Cliente está relacionado a uma ou mais  ",		;
					"movimentações no módulo Gestão Agrícola."}
aHelpEng 	:= {"Customer linked to one or more movements",		;
					" in Agricultural Management module."}
aHelpSpa 	:= {"Cliente esta relacionado a uno o mas    ",		;
					"movimientos en el modulo Gestion        ",	;
					" Agricola. "}
				 
PutHelp("PMATA030AGR", aHelpPor, aHelpEng, aHelpSpa, .F.)


aHelpPor 	:= {"Verificar as movimentações relacionadas ",		;
				 	"ao cliente, no módulo Gestão Agrícola,  ",	;
				 	"como: Saldos e Saldos Iniciais de       ",	;
				 	"clientes. "}
aHelpEng	:= {"Check the movements related to customer ",		;
				 	"in what concerns: Balances and Customers",	;
					"  Initial Balances."}
aHelpSpa	:= {"Verificar los movimientos relacionados  ",		;
				 	"con el cliente en el modulo Gestion     ",	;
				 	"Agricola, como:                         ",	;
				 	"Saldos y Saldos Iniciales de clientes.  "}

PutHelp("SMATA030AGR", aHelpPor, aHelpEng, aHelpSpa, .F.)


aHelpPor	:= {"Cliente já associado a um Layout na     ",		;
					"rotina Edi-> Cliente X Layout.          ",	;
			 	 	"Exclusão não permitida.                 "}  

aHelpEng	:= {"Customer already linked to a Layout of  ",		;
				 	"the Edi-> Customer vs.                  ",	;
				 	"Deletion is not allowed.                "}
aHelpSpa	:= {"Cliente asociado a un Layout en la      ",		;
			 		"rutina Edi-> Cliente vs. Layout.        ",	;
				 	"Borrado no permitido.                   "}

PutHelp("PTMSCLIEDI", aHelpPor, aHelpEng, aHelpSpa, .F.) 


aHelpPor	:= {"Cliente não poderá ser excluído.       "}  
aHelpEng	:= {"Client cannot be deleted               "}
aHelpSpa	:= {"Cliente no puede ser borrado.          "}  

PutHelp("PMA030TEMCP", aHelpPor, aHelpEng, aHelpSpa, .F.) 


aHelpPor 	:= {"Verificar o Contrato de Parceria        ",		;
					" existente para este cliente.           "}
aHelpEng	:= {"Check the Contracts Partnership         ",		;
				 	" for this client.                       "}
aHelpSpa	:= {"Compruebe lo Contrato de Sociedad       ",		;
				 	" existen- tes para este cliente.        "}


PutHelp("SMA030TEMCP", aHelpPor, aHelpEng, aHelpSpa, .F.) 
 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Help para validacao do RUC (Paraguay) - A1_CGC               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//Problema
aHelpPor	:= {"Digito verificador incorreto.          "}    
aHelpEng	:= {"Incorrect checking digit.              "}
aHelpSpa	:= {"Dígito de verificación incorrecto.     "}  

PutHelp("PRUC", aHelpPor, aHelpEng, aHelpSpa, .T.) 

//Solucao
aHelpPor 	:= {"Entre com um código válido.            "}  
aHelpEng	:= {"Enter a valid code.                    "}
aHelpSpa	:= {"Informe un código válido.              "}    

PutHelp("SRUC", aHelpPor, aHelpEng, aHelpSpa, .T.) 


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Help para validacao do A1_CDRDES                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//Problema
aHelpPor 	:= {"O preenchimento do campo 'Reg. Cliente'", "é obrigatório"       }
aHelpEng    := {"The completion of the 'Region of the", "Customer' is mandatory" }
aHelpSpa    := {"La realización de la 'Región del", "Cliente' es obligatoria"    }

PutHelp( "PCDRDES", aHelpPor, aHelpEng, aHelpSpa, .T.) 

//Solucao
aHelpPor 	:= {"Informe um código de região válida para", "este cliente." }
aHelpEng	:= {"Tell a region code valid for this", "customer."           }
aHelpSpa	:= {"Díselo a un código de región válida", "para este cliente" }

PutHelp( "SCDRDES", aHelpPor, aHelpEng, aHelpSpa, .T.) 


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Help para validacao do A1_COD                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//Problema
aHelpPor 	:= {"Cliente não poderá ser excluído.       "}    
aHelpEng	:= {"Client cannot be deleted               "}
aHelpSpa	:= {"Cliente no puede ser borrado.          "}  

PutHelp("PMATA030DV1", aHelpPor, aHelpEng, aHelpSpa, .T.) 
PutHelp("PMATA030DV2", aHelpPor, aHelpEng, aHelpSpa, .T.) 
PutHelp("PMATA030DV3", aHelpPor, aHelpEng, aHelpSpa, .T.) 
PutHelp("PMATA030DV5", aHelpPor, aHelpEng, aHelpSpa, .T.) 
PutHelp("PMATA030DV6", aHelpPor, aHelpEng, aHelpSpa, .T.) 
PutHelp("PMATA030DV7", aHelpPor, aHelpEng, aHelpSpa, .T.) 
PutHelp("PMATA030DV8", aHelpPor, aHelpEng, aHelpSpa, .T.) 
PutHelp("PMATA030DVN", aHelpPor, aHelpEng, aHelpSpa, .T.) 
PutHelp("PMATA030DTI", aHelpPor, aHelpEng, aHelpSpa, .T.) 

//Solucao
aHelpPor 	:= {"Verificar o Doctos e Regras            ",		;
					" existente para este cliente.           "}
aHelpEng	:= {"Check the Docs And Rules               ",		;
				 	" for this client.                       "}
aHelpSpa	:= {"Compruebe lo Doc y Reglas              ",		;
			 	" existentes para este cliente.          "}

PutHelp("SMATA030DV1", aHelpPor, aHelpEng, aHelpSpa, .T.)  

//Solucao
aHelpPor 	:= {"Verifique a rotina observações de      ",		;
					" clientes (TMSA610) para este cliente.  "}
aHelpEng	:= {"Check comments from customers          ",		;
				 	" (TMSA610) for this client.             "}
aHelpSpa	:= {"Check comentarios de los clientes      ",		;
			 	" (TMSA610) para este cliente.           "}

PutHelp("SMATA030DV2", aHelpPor, aHelpEng, aHelpSpa, .T.)  

//-- A1_REGDES
aHelpPor	:= {"Descrição da região do cliente"		}
aHelpEng	:= {"Description of the customer region"	}
aHelpSpa	:= {"Descripcion de la region del cliente"	}

		             			            
PutHelp("PA1_REGDES", aHelpPor, aHelpEng, aHelpSpa, .T.)

//Solucao
aHelpPor	:= {"Verifique a rotina Prazos de Regiões   ",		;
			    "por cliente (TMSA395) para este cliente."}
aHelpEng	:= {"Check the routine limits of Regions by ",		;
				"customer"}
aHelpSpa	:= {"Compruebe los plazos para las Regiones de",	;
			 	"de rutina por parte de los clientes."}

PutHelp("SMATA030DVN", aHelpPor, aHelpEng, aHelpSpa, .T.)  

//Solucao
aHelpPor	:= {"Verifique a rotina Inscrições Cliente   ",;
			    "(TMSA620) para este cliente."}
aHelpEng	:= {"Check routine Subscriptions Customer	 ",	;
			    "(TMSA620) for this client."}
aHelpSpa	:= {"Control de rutina suscripciones 		 ",;
			 	"de los clientes para este cliente."}

PutHelp("SMATA030DV3", aHelpPor, aHelpEng, aHelpSpa, .T.)  

//Solucao
aHelpPor	:= {"Verifique a rotina Averbação Cliente   ",;
			    "(TMSA650) para este cliente."}
aHelpEng	:= {"Check the routine Annotation Client	 ",	;
			    "(TMSA650) for this client."}
aHelpSpa	:= {"Compruebe el cliente de rutina de       ",;
			 	"anotación (TMSA650) para este cliente."}

PutHelp("SMATA030DV6", aHelpPor, aHelpEng, aHelpSpa, .T.)

//Solucao
aHelpPor	:= {"Verifique a rotina Bloqueio de Cliente  ",;
			    "(TMSA630) para este cliente."}
aHelpEng	:= {"Check the lock routine Client	 ",	;
			    "(TMSA630) for this client."}
aHelpSpa	:= {"Compruebe el bloqueo del cliente de    ",;
			 	"rutina (TMSA630) para este cliente."}

PutHelp("SMATA030DV5", aHelpPor, aHelpEng, aHelpSpa, .T.)

//Solucao
aHelpPor	:= {"Verifique a rotina Perfil de Cliente  ",;
			    "(TMSA480) para este cliente."}
aHelpEng	:= {"Check the profile routine Client	 ",	;
			    "(TMSA480) for this client."}
aHelpSpa	:= {"Compruebe el perfil del cliente de    ",;
			 	"rutina (TMSA480) para este cliente."}

PutHelp("SMATA030DV7", aHelpPor, aHelpEng, aHelpSpa, .T.)


//Solucao          
aHelpPor	:= {"Verifique a rotina Contrato de Cliente  ",;
			    "de Serviço(TECA250) para este cliente."}
aHelpEng	:= {"Check the routine  Customer Contract	 ",	;
			    "Service(TECA250) for this client."}
aHelpSpa	:= {"Compruebe el contrato del cliente de    ",;
			 	"Serviço(TMSA480) para este cliente."}
PutHelp("SMATA030DV8", aHelpPor, aHelpEng, aHelpSpa, .T.)

//Solucao
aHelpPor	:= {"Verifique a rotina de Consignatários  ",;
			    "(TMSA100) para este cliente."}
aHelpEng	:= {"Check the routine of Trustees	 ",	;
			    "(TMSA100) for this client."}
aHelpSpa	:= {"Compruebe la rutina de Síndicos    ",;
			 	"(TMSA100) para este cliente."}

PutHelp("SMATA030DTI", aHelpPor, aHelpEng, aHelpSpa, .T.)
//Problema
aHelpPor	:= {"Este cliente não poderá ser excluído   ",;
                "pois há orçamento cadastrado."}
aHelpEng	:= {"This client can not be excluded ",; 
                "because no budget registered."}
aHelpSpa	:= {"Este cliente no puede ser se excluyó",;
                "porque sin presupuesto registrados."}

PutHelp("PMATA030ORC", aHelpPor, aHelpEng, aHelpSpa, .T.)    

//Solucao
aHelpPor	:= {"Exclua o orçamento antes da exclusão  ",;
                "do cliente."}
aHelpEng	:= {"Delete the budget before deleting ",;
                "customer. "}
aHelpSpa	:= {"Eliminar el presupuesto antes de eliminar ",;
                "cliente."}

PutHelp("SMATA030ORC", aHelpPor, aHelpEng, aHelpSpa, .T.)    
  
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Help para validacao do Teleatendimento/Service Desk          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//Problema

aHelpPor 	:= {"Essa informação não poderá ser excluída ",;
				"do sistema porque esta diretamente      ",;
				"relacionada com as tabelas de           ",;
				"Teleatendimento/Service Desk "}

aHelpEng 	:= {"This information cannot be deleted since",;
				"it is directly related to the servicing",;
				" table Customer Service/Service Desk "}

aHelpSpa 	:= {"Esta informacion no podra borrarse del  ",;
				"sistema porque esta directamente        ",;
				"relacionada con las tablas de           ",;
				"Teleatencion/Service Desk "}

PutHelp( "PTMKNDELADE", aHelpPor, aHelpEng, aHelpSpa, .F.)     
//Solucao 
aHelpPor 	:= {"Elimine primeiro todos os registros das ",;
				"tabelas que estejam relacionados com ",;
				"essa informação."}

aHelpEng 	:= {"First delete all records from tables  ",;
				"relating to this information"}

aHelpSpa 	:= {"Elimine primero todos los registros de  ",;
				"las tablas relacionados con esta        ",;
				"informacion."}

PutHelp( "STMKNDELADE", aHelpPor, aHelpEng, aHelpSpa, .F.) 


//Problema
aHelpPor 	:= {"Digito verificador incorreto."}
aHelpEng 	:= {"Invalid verifier digit."}
aHelpSpa 	:= {"Dígito verificador incorrecto."}

PutHelp( "PRIF", aHelpPor, aHelpEng, aHelpSpa, .F.)     

//Solucao 
aHelpPor 	:= {"Entre com um código válido."}
aHelpEng 	:= {"Enter a valid code."}
aHelpSpa 	:= {"Entre con un código válido."}

PutHelp( "SRIF", aHelpPor, aHelpEng, aHelpSpa, .F.) 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Help para validacao do campo A1_FILTRF                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//Problemas
aHelpPor 	:= {"A filial de transferência informada não ",;
				"é válida.                               "}

aHelpEng 	:= {"The transfer branch code is not valid.  "}

aHelpSpa 	:= {"La sucursal de transferencia informada  ",;
				"no es valida.                           "}

PutHelp( "PSAVALFIL", aHelpPor, aHelpEng, aHelpSpa, .F.)     

aHelpPor 	:= {"A filial de transferência informada já  ",;
				"está associada a outro cliente.         "}

aHelpEng 	:= {"The transfer branch code informed is    ",;
                "already associated with another         ",;
                "customer.                               "}

aHelpSpa 	:= {"La sucursal de transferencia informada  ",;
                "ya esta asociada a otro cliente.        "}

PutHelp( "PSAVALCLI", aHelpPor, aHelpEng, aHelpSpa, .F.) 

//Solucoes
aHelpPor 	:= {"Informe uma filial válida ou deixe o    ",;
				"campo em branco. Utilize F3 para        ",;
				"consultar as filiais disponíveis.       "}

aHelpEng 	:= {"Type a valid branch code or leave the   ",;
                "field blank. Use F3 to query branches.  "}

aHelpSpa 	:= {"Informe una sucursal valida o deje el   ",;
                "campo en blanco. Utilice F3 para        ",;
                "consultar las sucursales disponibles.   "}

PutHelp( "SSAVALFIL", aHelpPor, aHelpEng, aHelpSpa, .F.)     


aHelpPor 	:= {"Informe outra filial ou deixe o campo em",;
				"branco.                                 "}

aHelpEng 	:= {"Type other branch code or leave the     ",;
                "field blank.                            "}

aHelpSpa 	:= {"Informe otra sucursal o deje el campo en",;
                "blanco.                                 "}

PutHelp( "SSAVALCLI", aHelpPor, aHelpEng, aHelpSpa, .F.) 


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Help para validacao do cadastro de Oportunidades ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//Problema
aHelpPor := {"Exclusão não permitida deste cliente ", "pois existe vínculo do mesmo no ","cadastro de oportunidades." }
aHelpEng := {"Exclusão não permitida deste cliente ", "pois existe vínculo do mesmo no ","cadastro de oportunidades." }
aHelpSpa := {"Exclusão não permitida deste cliente ", "pois existe vínculo do mesmo no ","cadastro de oportunidades." }

PutHelp( "POPORNODEL", aHelpPor, aHelpEng, aHelpSpa, .T.) 

//Solucao
aHelpPor := {"Exclua primeiramente a oportunidade","cadastrada para este cliente." }
aHelpEng := {"Exclua primeiramente a oportunidade","cadastrada para este cliente." }
aHelpSpa := {"Exclua primeiramente a oportunidade","cadastrada para este cliente." }

PutHelp( "SOPORNODEL", aHelpPor, aHelpEng, aHelpSpa, .T.) 

//-- A1_CONFREM
aHelpPor	:= {"Indica se conforma nota de remissao."		}
aHelpEng	:= {"Indicates whether remission invoice is conformed."	}
aHelpSpa	:= {"Indica si se conforma una factura de envio."	}

	             			            
PutHelp("PA1_CONFREM", aHelpPor, aHelpEng, aHelpSpa, .T.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Help do campo A1_CGC para a Colombia ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cPaisLoc == "COL"

	aHelpPor := {"Número do NIT para pessoas jurídicas ","ou físicas"}				 
	aHelpEng := {"NIT number for individuals or ","companies"}				 
	aHelpSpa := {"Numero de NIT para personas juridicas","y fisicas"} 				 
					 
	PutHelp("PA1_CGC", aHelpPor, aHelpEng, aHelpSpa, .T.)

EndIf

If __Language=="SPANISH"

	aHelpPor := {"Preencha os campos cujos títulos possuem"," o símbolo '*' (asterisco). ","ou físicas"}				 
	aHelpEng := {"Fill out the fields whose titles present"," the symbol  '*' (asterisk).","companies"}				 
	aHelpSpa := {"Rellene los campos cuyos titulos tienen","el simbolo '*'  (asterisco).s","y fisicas"} 				 
					 
	PutHelp("SOBRIGAT", aHelpPor, aHelpEng, aHelpSpa, .T.)

EndIf

//A1_TEMVIS
aHelpPor := {"Intervalo de dias que o cliente deve ","ser visitado pelo vendedor responsável."}
aHelpEng := {"Interval of days in which the customer must be visited ","by the responsible sales representative."}
aHelpSpa := {"Intervalo de dias que el cliente debe ","ser visitado por el vendedor responsable."}

PutHelp("PA1_TEMVIS", aHelpPor, aHelpEng, aHelpSpa, .T.)

Return         

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³M030PrRMCliºAutor  ³Alberto Deviciente  º Data ³ 15/Mai/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Esta funcao tem por objetivo buscar o codigo sequencial paraº±±
±±º          ³o cliente utilizando a tabela de controle do RM Classis Net º±±
±±º          ³para que nao seja gerado codigo duplicado entre os sistemas.º±±
±±º          ³Neste caso nao sera considerado o controle de numeracao     º±±
±±º          ³para o cliente utilizando o SXE e SXF e sim a tabela do     º±±
±±º          ³RM Classis Net (RM Sistemas).                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Integracao - Protheus x RM Classis Net (RM Sistemas)       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function M030PrRMCli()
Local lOk   		:= .T.
Local nCodCli 		:= 0
Local cAlias 		:= GetNextAlias()
Local cQuery 		:= ""
Local cCodCli  		:= ""
Local lLinkOk 		:= .F.
Local nAmbCLASSIS 	:= 0
Local nAmbTOP		:= 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Valida as conexoes com as bases Protheus e Classis³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lLinkOk := _IntRMTpCon(@nAmbTOP,@nAmbCLASSIS)

if lLinkOk
	// Alterna o TOP para o ambiente do RM Classis Net (RM Sistemas)
	TCSetConn( nAmbCLASSIS )
		
	if TCCanOpen("GAUTOINC") //Verifica se existe no banco de dados a tabela de controle de auto-numeracao do RM Classis Net (RM Sistemas)
		cQuery := "SELECT VALAUTOINC "
		cQuery += "  FROM GAUTOINC "
		cQuery += " WHERE CODCOLIGADA = 0"
		cQuery += "   AND CODSISTEMA = 'F'"
		cQuery += "   AND CODAUTOINC = 'CODCFO'"
		cQuery := ChangeQuery(cQuery)
		dbUseArea( .T., "TOPCONN", TCGENQRY(,,cQuery), cAlias, .F., .T.)
		
		nCodCli := (cAlias)->VALAUTOINC+1
		cCodCli := StrZero(nCodCli,TamSX3("A1_COD")[1])
		
		(cAlias)->( dbCloseArea() )
		dbSelectArea("SA1")

		// Alterna o TOP para o ambiente padrao
		TCSetConn( nAmbTOP )
		
		while .T.
			//Verifica se ja existe cliente com o codigo retornado, sem considerar FILIAL
			dbSelectArea("SA1")
			cQuery := "SELECT COUNT(A1_COD) AS QTD "
			cQuery += "  FROM " + RetSQLName("SA1")
			cQuery += "  WHERE A1_COD = '" +cCodCli+ "'"
			cQuery += "    AND D_E_L_E_T_ = ' '"
			cQuery := ChangeQuery(cQuery)
			dbUseArea( .T., "TOPCONN", TCGENQRY(,,cQuery), cAlias, .F., .T.)
		
			if (cAlias)->QTD > 0
				(cAlias)->( dbCloseArea() )
				dbSelectArea("SA1")
				
				nCodCli++
				cCodCli := StrZero(nCodCli,TamSX3("A1_COD")[1])
			else
				(cAlias)->( dbCloseArea() )
				dbSelectArea("SA1")
				Exit
			endif
		end
		
		// Alterna o TOP para o ambiente do RM Classis Net (RM Sistemas)
		TCSetConn( nAmbCLASSIS )

		//Antes de atualizar a tabela de controle de numeracao do RM Classis Net (RM Sistemas), verifica se o registro ja existe
		cQuery := "SELECT COUNT(VALAUTOINC) AS QTD"
		cQuery += "  FROM GAUTOINC"
		cQuery += " WHERE CODCOLIGADA = 0 AND CODSISTEMA = 'F' AND CODAUTOINC = 'CODCFO'"
		cQuery := ChangeQuery(cQuery)
		dbUseArea( .T., "TOPCONN", TCGENQRY(,,cQuery), cAlias, .F., .T.)
		
		//Se ja existir o registro somente atualiza, senao insere o registro
		if (cAlias)->QTD > 0
			//Atualiza a tabela de controle de numeracao do RM Classis Net (RM Sistemas)
			cQuery := "UPDATE GAUTOINC SET VALAUTOINC = "+AllTrim(Str(nCodCli))
			cQuery += " WHERE CODCOLIGADA = 0"
			cQuery += "   AND CODSISTEMA = 'F'"
			cQuery += "   AND CODAUTOINC = 'CODCFO'"
		else
			//Insere o registro na tabela de controle de numeracao do RM Classis Net (RM Sistemas)
			cQuery := "INSERT INTO GAUTOINC "
			cQuery += " (CODCOLIGADA, CODSISTEMA, CODAUTOINC, VALAUTOINC) "
			cQuery += " VALUES( 0, 'F', 'CODCFO', "+AllTrim(Str(nCodCli))+")"
		endif
		
		TcSqlExec( cQuery )
		TcSqlExec( "COMMIT" )
		
		(cAlias)->( dbCloseArea() )
		dbSelectArea("SA1")
		
		// Alterna o TOP para o ambiente padrao
		TCSetConn( nAmbTOP )
	else
		MsgSTop(STR0052+Chr(13)+Chr(10)+Chr(13)+Chr(10)+STR0053) //"Não foi possível gerar o código do cliente."###"Não foi encontrada a tabela [GAUTOINC] na base de dados do RM Classis Net."
		lOk := .F.
	endif
	
endif

if lLinkOk
	TCUNLINK(nAmbCLASSIS) // Finaliza a conexao com o ambiente RM Classis Net (RM Sistemas) [nAmbCLASSIS]
endif

if !lOk
	TCSetConn( nAmbTOP ) // Alterna o TOP para o ambiente padrao
	
	cCodCli := Space(TamSX3("A1_COD")[1])
endif

Return cCodCli

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MA030RelacºAutor  ³Alberto Deviciente  º Data ³ 17/Mar/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Inicializador Padrao (X3_RELACAO) do campo A1_COD.         º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Uso       ³ Cadastro de clientes                                       ³±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MA030Relac()
Local cRet := ""

//MV_RMCLASS: Parametro de ativacao da integracao do Protheus x RM Classis Net (RM Sistemas)
if GetNewPar("MV_RMCLASS",.F.) .and. Inclui
	cRet := Replicate("0",TamSX3("A1_COD")[1])
else
	cRet := Space(TamSX3("A1_COD")[1])
endif

Return cRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MA030OK   ºAutor  ³Vendas Clientes     º Data ³ 14/12/09    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Efetua validacoes apos a transacao			              º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Uso       ³ Cadastro de clientes                                       ³±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MA030OK(nOpc)
	
Local nMvTipACrd := SuperGetMV("MV_TIPACRD", .F., 1)			//Define tipo de analise de credito 
Default nOpc 	:= 0											// opção de transação

If nMvTipACrd == YMF
	LJMsgRun(STR0054,,{||MA030Tools(nOpc)})//"Aguarde... Efetuando Analise de Crédito."
EndIf
	
Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MA030ToolsºAutor  ³Vendas Clientes     º Data ³ 14/12/09    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Efetua a analise de credito atraves do Intellector         º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Uso       ³ Cadastro de clientes                                       ³±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MA030Tools(nOpc)

	Local cMVTolPoCl	:= ALLTRIM(SuperGetMv("MV_TOLPOCL", .F.,""))   //Politica de cliente para integracao com Intellector
	Local cMVTolTiCl	:= ALLTRIM(SuperGetMv("MV_TOLTICL", .F.,""))   //Tipo de politica de cliente para integracao com Intellector
	Local cMVTolLayo	:= ALLTRIM(SuperGetMv("MV_TOLLAYO", .F.,""))   //Layout da politica para integracao com Intellector
	Local nMvCrdTole	:= SuperGetMV("MV_CRDTOLE", .F., 1)			//Valor de tolerancia para liberacao de limite de credito
	Local nVlrTitAbe	:= 0											//Valor dos titulos em aberto
	Local nVlrTitAtr	:= 0 											//Valor dos titulos atrasados
	Local oRetYMF		:= NIL											//Objeto do tipo Intellector
	Local oEntCli		:= NIL                                          //Entidade de cliente SA1
	Local cMessage		:= ""											//Mensagem a ser exibida apos a analise de credito
	
	//Consulta os titulos em aberto
	nVlrTitAbe := SldCliente( SA1->A1_COD + SA1->A1_LOJA, Nil, Nil, .F.)
	//Consulta os titulos em atraso
	nVlrTitAtr := CrdXTitAtr(SA1->A1_COD + SA1->A1_LOJA, Nil, Nil, .F.)
	//Faz a analise de credito via Tools
	oRetYMF    := CrdXExecYMF(cMVTolPoCl  , cMVTolTiCl ,cMVTolLayo  ,SA1->A1_COD ,;
	SA1->A1_LOJA, nVlrTitAbe ,nMvCrdTole 	,0  		  ,;
	nVlrTitAtr)
	
	oEntCli := LJCEntCliente():New()
	
	//Seta os valores da chave
	oEntCli:DadosSet("A1_COD", SA1->A1_COD)
	oEntCli:DadosSet("A1_LOJ", SA1->A1_LOJA)
	
	//Politica nao executada no intellector por falta de: (Conexao, erro de pacote, etc...)
	If (ValType(oRetYMF) == "N" .AND. oRetYMF == -1)
		
		If nOpc == 3
			//Alterar o cliente para risco maximo e limite de credito zerado
			oEntCli:DadosSet("A1_RISCO", "E") //RISCO MAXIMO
			oEntCli:DadosSet("A1_LC", 0)
		EndIf
		
		//Limite de credito nao aprovado
	ElseIf (ValType(oRetYMF) == "O" .AND. !oRetYMF:lAprovado)
		
		If nOpc == 3
			//Alterar o cliente para risco maximo e limite de credito zerado
			oEntCli:DadosSet("A1_RISCO", "E") //RISCO MAXIMO
			oEntCli:DadosSet("A1_LC", 0)
		ElseIf nOpc == 4
			//Alterar o cliente com limite de credito zerado
			oEntCli:DadosSet("A1_LC", 0)
		EndIf
		
		cMessage := STR0055 + " (" + oRetYMF:cMotBloq + ")" //"Analise de crédito não aprovado!"
		
		//Limite de credito aprovado
	ElseIf ValType(oRetYMF) == "O" .AND. oRetYMF:lAprovado
		
		oEntCli:DadosSet("A1_VENCLC", oRetYMF:dDtVctoLim)
		oEntCli:DadosSet("A1_LC", oRetYMF:nValLimite)
		oEntCli:DadosSet("A1_RISCO", "A") //RISCO MINIMO
		
		cMessage := STR0056 //"Analise de crédito aprovado!"
	EndIf
	
	oEntCli:Alterar(1)
	
	If !Empty(cMessage)
		Alert(cMessage)
	EndIf
	
Return Nil
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Ma030AltOk³ Autor ³ Nunzio Autorino Junior³ Data ³ 31/03/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Responsavel em enviar os dados do cliente para integracao  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Cadastro de clientes                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Ma030AltOk()

Local cTipo 		:= ""											//Como os dados serao integrados no processo offline
Local oProcessOff 	:= Nil											//Objeto do tipo LJCProcessoOffLine
Local lAmbOffLn 	:= SuperGetMv("MV_LJOFFLN", Nil, .F.)			//Identifica se o ambiente esta operando em offline

//Verifica se o ambiente esta em off-line
If lAmbOffLn
	//Instancia o objeto LJCProcessoOffLine
	oProcessOff := LJCProcessoOffLine():New("007")
	
	//Determina o tipo de operacao
	If INCLUI
		cTipo := "INSERT"
	ElseIf ALTERA
		cTipo := "UPDATE"
	Else
		cTipo := "DELETE"
		
		//Considera os registros deletados
		SET DELETED OFF
	EndIf
	
	If !Empty(cTipo)
		//Insere os dados do processo (registro da tabela)
		oProcessOff:Inserir("SA1", xFilial("SA1") + SA1->A1_COD + SA1->A1_LOJA, 1, cTipo)
		
		//Processa os dados
		oProcessOff:Processar()
	EndIf
	
	//Desconsidera os registros deletados
	SET DELETED ON
EndIf

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Ma030Off  ³ Autor ³ Nunzio Autorino Junior³ Data ³ 31/03/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Responsavel em verificar se o ambiente esta em offline,    ³±±
±±³			 ³ esta funcao he chamada atraves do campo A1_COD             ³±±
±±³			 ³ (Modo Edicao) X3								              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Cadastro de clientes                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Ma030Off()

Local lRetorno 		:= .T.					//Retorno da funcao

lRetorno 	:= SuperGetMv("MV_LJOFFLN", Nil, .F.)

Return !lRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³M030CGCCPF³ Autor ³ Nunzio Autorino Junior³ Data ³ 31/03/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Responsavel em gerar o codigo do cliente atraves do CGC/CPF³±±
±±³			 ³ quando o ambiente estiver off-line.             			  ³±±
±±³			 ³ Esta funcao he chamada atraves do gatilho do campo A1_CGC  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Cadastro de clientes                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function M030CGCCPF(lAutoEC, cCGCDoc, lEcCgcCpf)

Local aArea	   		:= GetArea()           	//Area atual
Local aAreaSA1 		:= SA1->(GetArea())    //Area do SA1
Local nTamCod		:= TamSx3("A1_COD")[1]	//Tamanho do campo
Local cRetorno 		:= Space(nTamCod)		//Retorno da funcao
Local cCGCCPFDoc	:= ""					//CGC ou CPF informado
Local nDiv			:= 0                    //Numero utilizado para geracao do A1_COD
Local nResto		:= 0                    //Guarda o resto da divisao
Local cNumero		:= Space(nTamCod)		//Numero gerado
Local lCgcCpf		:= .F.        			//Sinaliza se codigo sera gerado com base no Cpf/CNPJ
Local nX			:= 0 					//controle do looping
Local cDocNum		:= ""					//Apoio para converter somente numeros o documento de estrangeiro(A1_PFISICA)
Local lContinua		:= .T.					//Tratamento duplicidade de Doc.Estrangeiro
Local nAleatorio	:= -1  					//Apoio quando duplicidade no codigo gerado

Default cCGCDoc := ""
Default lAutoEC := .F. //Chamada pelo ExecAuto do E-commerce
Default lEcCgcCpf := .T. //CGC CPF ?
                          	

If lAutoEC .OR. INCLUI
	        
	If  ( (AllTrim(ReadVar()) == "M->A1_CGC") .OR. (AllTrim(ReadVar()) == "M->A1_PFISICA") )  .OR. ( lAutoEC .AND. !Empty(cCGCDoc))
	    
		//Prioridade para calculo com base no Cpf/Cnpj
		 
		IF !lAutoEC .AND. !Empty(M->A1_CGC)
			cCGCCPFDoc := M->A1_CGC
			lCgcCpf	   := .T.
		ElseIf !lAutoEC .AND. AllTrim(ReadVar()) == "M->A1_PFISICA" 	//Caso não tenha Cpf/Cnpj, verifica se informou A1_PFISICA
			cCGCCPFDoc := M->A1_PFISICA	
		ElseIf !lAutoEC
			cCGCCPFDoc := cCGCDoc   
			lCgcCpf := lEcCgcCpf
		EndIf
			      
		While lContinua .AND. !Empty(cCGCCPFDoc)
			/*
			Quando calculo com base num documento de estrangeiro, mantem apenas numero e valida se valor não é um CPF/CNPJ válido, 
			evitando duplicidade. 
			*/	
			If !lCgcCpf .AND. AllTrim(Str(Val(cCGCCPFDoc)))  <> AllTrim(cCGCCPFDoc) 
				For nX:= 1 To Len(cCGCCPFDoc)		    
				    //Verifica se eh numero, nao utilizar Val() para converter
					If SubStr(cCGCCPFDoc,nX,1) $ "012456789"      
						cDocNum += SubStr(cCGCCPFDoc,nX,1)
					EndIf				
				Next nX
				
				cCGCCPFDoc := cDocNum  //Atualiza conteudo apenas com numeros, acrescenta o zero para validar CPF/CNPJ existente	
			EndIf	
			
			/* 	
			Quando o CPF/CNPJ comeca com zero, a funcao Val() o retira, deixando nDiv com menos digitos do que deveria,
			possibilitando assim que esta funcao gere codigos duplicados.
			Quando Doc estrangeiro utiliza rotina evitar que seja utilizado um doc com numero igual a um CNPJ/CPF
			*/	
			If SubStr(cCGCCPFDoc,1,1) == "0" .OR. !lCgcCpf
				cCGCCPFDoc := NoZeroVldCGC(cCGCCPFDoc,lCgcCpf)
			EndIf      
			
			If Len(AllTrim(cCGCCPFDoc)) > 11
				//Pessoa Juridica
				nDiv := Val(cCGCCPFDoc)
			Else
				//Pessoa Fisica
				nDiv := Val(SubStr(cCGCCPFDoc,1,9))
			EndIf
		
			//Calcula codigo
			While nDiv >= 35 .AND. Len(AllTrim(cNumero)) < 6
				//Pega o inteiro do resto da divisao
				nResto := int(nDiv % 35)
				//Pega o valor inteiro da divisao
				nDiv := int(nDiv / 35)
				cNumero:= AllTrim(IIf(nResto < 10, Str(nResto), Chr(nResto + 55))) + AllTrim(cNumero)
			End
		
		 	//Quando codigo gerado for diferente do tamanho do campo A1_COD, realizado ajuste
			If Len(AllTrim(cNumero)) <> nTamCod
				cNumero := AllTrim(IIf(nResto < 10, Str(nResto), Chr(nResto + 55))) + AllTrim(cNumero)
			EndIf
		
			cRetorno := Replicate("0", nTamCod - Len(AllTrim(cNumero))) + AllTrim(cNumero)
			
			//Quando codigo gerado com base no doc estrangeiro(A1_PFISICA), verifica duplicidade de chave(PK)
			If !lCgcCpf
				SA1->(DbSetOrder(1))
				If ( SA1->(dbSeek(xFilial("SA1") + cRetorno) ) )					
					//Caso não consiga gerar novo codigo, emite aviso e sai da rotina
					If nAleatorio >= 9
						Alert(STR0075)		//"Não foi possível gerar o codigo para o cliente(A1_COD). O conteúdo do campo A1_PFISICA(RG/Cedf.Estr.) já foi utilizado em outro cadastro"
						lContinua := .F.
					Else				
						lContinua 	:= .T.
						nAleatorio++
						cCGCCPFDoc	:= Str(nAleatorio) + cCGCCPFDoc
					EndIf
				Else
					lContinua := .F.
				EndIf							
			Else 
				lContinua := .F.
			EndIf
		End
	EndIf	
Else
	cRetorno := SA1->A1_COD
EndIf

//Restaura a area atual e do arquivo SA1
RestArea(aAreaSA1)
RestArea(aArea)
	
Return cRetorno

//-------------------------------------------------------------------
/*{Protheus.doc} NoZeroVldCGC 
Esta funcao foi criada para impedir que o CPF/CNPJ usado para gerar o código do cliente comece com zero, 
evitando assim que a string cCGCCPF ao ser convertida para numerica fique com menos digitos do que deveria,
o que diminui a possibilidade da funcao M030CGCCPF() gerar codigos duplicados.

@param   cCGCCPF		CPF/CNPJ do cliente

@author  Vendas & CRM
@version P11
@since   25/10/2012
@obs     
@return cReturn 		- CPF/CNPJ invalido para geracao do codigo do cliente. O CPF/CNPJ é invalido para nao haver a possibilidade de duplicidade com um CPF/CNPJ existente.
*/
//-------------------------------------------------------------------

Static Function NoZeroVldCGC(cCGCCPF,lCgcCpf)
Local cIniDgtCGC 	:= SubStr(cCGCCPF,1,1) 	// Primeiro digito do CPF/CNPJ
Local cCGCRestant	:= SubStr(cCGCCPF,2)		// Digitos restantes do CPF/CNPJ
Local cReturn		:= cCGCCPF					// Retorno da funcao
Local lFound		:= .F.						// 
Local cCgcCpfDig	:= cCGCCPF					// Guarda o CPF/CNPJ digitado	

DEFAULT lCgcCpf		:= .T.

While !lFound             

	If lCgcCpf
		cIniDgtCGC 	:= Soma1(cIniDgtCGC)
		cCGCCPF 	:= cIniDgtCGC+cCGCRestant
	Else
		lCgcCpf := .T.
	EndIf
		
	If Len(AllTrim(cCGCCPF)) > 11
	
		//Pessoa Juridica
		If !CGC(cCGCCPF,,.F.)
			//O CPF/CNPJ deve ser invalido para nao haver a possibilidade de duplicidade com um CPF/CNPJ existente.
			lFound := .T.
			cReturn := cCGCCPF
		EndIf
	Else
		//Pessoa Fisica
		If !CGC(cCGCCPF,,.F.)
			//O CPF/CNPJ deve ser invalido para nao haver a possibilidade de duplicidade com um CPF/CNPJ existente.
			lFound := .T.
			cReturn := cCGCCPF
		EndIf
	EndIf
End                          

// Retorna o CPF/CGC digitado
M->A1_CGC := cCgcCpfDig

Return cReturn

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³M030ValCli³ Autor ³ Nunzio Autorino Junior³ Data ³ 01/04/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Responsavel em validar se o cliente ja esta cadastrado     ³±±
±±³			 ³ quando o ambiente estiver off-line.             			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Cadastro de clientes                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function M030ValCli()
	
Local aArea	   		:= GetArea()           					//Area atual
Local aAreaSA1 		:= SA1->(GetArea())    				//Area do SA1
Local lRetorno 		:= .T.									//Retorno da funcao
Local lAmb			:= SuperGetMv("MV_LJOFFLN", Nil, .F.)  //Se o ambiente esta em off-line

If lAmb .AND. INCLUI
	//Seleciona o arquivo
	DbSelectArea("SA1")
	//Ordena pelo indice 1
	DbSetOrder(1)
	//Posiciona no registro
	If DbSeek(xFilial("SA1") + M->A1_COD + M->A1_LOJA)
		Alert(STR0045) //"Cliente já cadastrado (Ambiente Off-Line)"
		lRetorno := .F.
	EndIf
EndIf

//Restaura a area atual e do arquivo SA1
RestArea(aAreaSA1)
RestArea(aArea)


Return lRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ ma030IncTrn  ºAutor  ³Paulo Benedet         º Data ³ 25/09/08 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Inserir registro e atualizar tabela de sincronizacao          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ Nao ha                                                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ Nao ha                                                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAplicacao ³ Funcao chamada pelo XB_CONTEM do tipo 03 da consulta padrao   º±±
±±º          ³ do cadastro de clientes                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ma030IncTrn()
Local aParam := {{|| .T.}, {|| .T.}, {|| .T.}, {||ma030AltOk()}} //Bloco de codigo executado apos a transacao da inclusao do cliente
Local cAlias := "SA1" 			// Alias em uso
Local nReg   := SA1->(RecNo()) // Numero do registro
Local nOpc   := 3 				// Inclusao

AxInclui(cAlias,nReg,nOpc,/*aAcho*/,/*cFunc*/,/*aCpos*/,".T.",.T.,/*cTransact*/,/*aButtons*/,aParam,/*aRotAuto*/,.F.)

Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ValBTOk   ºAutor  ³Microsiga           º Data ³  04/26/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Função para incluir PE para validar botão OK                º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³MATA030                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function ValBTOk(nOpc)
Local lOk := .T.

If nOpc == 5 // Valida Botão OK na exclusão.
	If ExistBlock("VBTOK030")
		lOkBlk := ExecBlock("VBTOK030",.F.,.F., {nOpc} )
		lOk := IIf(ValType(lOkBlk) <> "L",lOk,lOkBlk)
	EndIf
		
	//-- Integra?o Protheus x GFE (INCLUSAO,ALTERACAO)
	If !MATA030IPG(5)
		lOk := .F.
	EndIf
	
EndIf

Return lOk

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Ma030Int  ³ Autor ³ Vendas CRM			³ Data ³ 31/03/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Responsavel em gerar os dados da integracao  			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Cadastro de Vendedores                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Ma030Int(lAdmFinc, nOpc)

	Local lRetorno	:= .T.					//Retorno da funcao
	Local cChave 	:= ""                  	//Chave do indice 1
    Local lRotAuto  := .F.					//Verifica se he rotina automatica
    
  	DEFAULT lAdmFinc := .F. 
    
  	//Verifica se he rotina automatica
	If !lAdmFinc
    	lRotAuto := aRotAuto <> NIL
	EndIf
  
	If lIntegra .AND. nOpc == 5 .AND. !lRotAuto
		
		//Instancia o objeto LJCADAPXMLENVSA1
		oIntegra :=	LJCADAPXMLENVSA1():New()
		 
		//Prepara a chave
		cChave 	:= xFilial("SA1") + SA1->A1_COD + SA1->A1_LOJA
	
		//Processa os dados da integracao		
	    oIntegra:Inserir("SA1", cChave, "1", CVALTOCHAR(nOpc))
		//Gera XML integracao
		oIntegra:Gerar()
		
	EndIf
	
Return lRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Ma30IntFim³ Autor ³ Vendas CRM			³ Data ³ 31/03/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Responsavel em finalizar a integracao  			 		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Cadastro de Vendedores                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Ma30IntFim(lAdmFinc, nOpc)
	
	Local cChave 	:= ""                  	//Chave do indice 1 do vendedor
	Local lRotAuto  := .F.					//Verifica se he rotina automatica
    
  	DEFAULT lAdmFinc := .F. 
    
  	//Verifica se he rotina automatica
	If !lAdmFinc
    	lRotAuto := aRotAuto <> NIL
	EndIf
	
	If lIntegra .AND. oIntegra <> Nil .AND. nOpc == 5 .AND. !lRotAuto 
		
		//Finaliza - Envia EAI		
	    oIntegra:Finalizar()
		
	ElseIf lIntegra .AND. !lRotAuto
		
		If nOpc == 3 .OR. nOpc == 4
			
			//Instancia o objeto LJCADAPXMLENVSA1
			oIntegra :=	LJCADAPXMLENVSA1():New()
					 
			//Prepara a chave
	   		cChave 	:= xFilial("SA1") + SA1->A1_COD + SA1->A1_LOJA
			
			//Processa os dados da integracao		
		    oIntegra:Inserir("SA1", cChave, "1", CVALTOCHAR(nOpc))
			//Gera XML integracao
			oIntegra:Gerar()
			//Finaliza - Envia EAI		
	    	oIntegra:Finalizar()
		
		EndIf
	
	EndIf
	
Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ A030RNC	³ Autor ³ Vendas CRM            ³ Data ³ 16/02/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Funcao para validação do RNC (A1_CGC).					  ³±±
±±³			 ³ 													          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Cadastro de clientes (Localizado - Rep Dominicana)         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function A030RNC(cRnc)
Local lRet     := .T.
Local aPeso    := {7,9,8,6,5,4,3,2}
Local nSoma    := 0                                             
Local nCnt     := 0
Local nDivisao := 0
Local nResto   := 0
Local cDigito 
Local nDigito  := 0

If (Type("M->A1_TIPO") == "C" .AND. (M->A1_TIPO == "1"))
	Return .T.	
EndIf

If (Len(Trim(cRnc)) != 9)
	lRet := .F.
Else 
	For nCnt:=1 To 8
		cDigito = Substr(cRnc,nCnt,1)
		If ( Asc(cDigito) < 48 .OR. Asc(cDigito) > 57 )
			lRet := .F.
			Exit
		Else
			nSoma += ( Val(cDigito)	 * aPeso[nCnt] )
		EndIf
	Next
	If lRet		
		nDivisao := int(nSoma / 11)			
		nResto  := int(nSoma - (nDivisao * 11))
		If (nResto == 0)
			nDigito := 2
		ElseIf (nResto == 1)
			nDigito := 1
		Else
			nDigito := 11 - nResto
		EndIf
		
		If (nDigito != Val(Substr(cRnc,9)))
			lRet := .F.            
		EndIf		
	EndIf
EndIf                 

If !lRet
	Aviso(STR0023,STR0061,{"Ok"})//"Atenção"###"O RNC Informado é Inválido"
EndIf

Return lRet	


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³MA30VerOp  ³ Autor ³ Marco Aurelio - Mano    ³ Data ³26/09/07  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³Verifica se existe vinculo do cliente que esta sendo excluido  ³±±
±±³          ³no cadastro de oportunidades.                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³MA30VerOp()                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³MATA030                                                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/             
Static Function MA30VerOp()
Local cAliasTRB := GetNextAlias()	// Nome do arquivo temporario
Local cQuery    := ""				// Auxiliar para execucao de query
Local aArea     := GetArea()		// Salva area atual para posterior restauracao
Local lRet      := .F.				// Conteudo de retorno

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Query para pesquisar o cliente na tabela de Oportunidaes(AD1) ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cQuery := "SELECT * "

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Tabela base do filtro ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cQuery += "FROM "  
cQuery += RetSqlName("AD1")+" AD1 "	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Condicoes de filtro ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cQuery += "WHERE "
cQuery += "AD1_FILIAL = '"+ xFilial("AD1")+"' AND "
cQuery += "AD1_CODCLI = '"+ SA1->A1_COD   +"' AND "
cQuery += "AD1_LOJCLI = '"+ SA1->A1_LOJA  +"' AND "
cQuery += "AD1.D_E_L_E_T_  <> '*'"

cQuery := ChangeQuery(cQuery)

DbUseArea(.T.,'TOPCONN',TCGENQRY(,,cQuery),cAliasTRB,.T.,.T.)

If !(cAliasTRB)->(Eof())

	Help(" ",1,"OPORNODEL") // Exclusao nao permitida deste cliente pois existe vinculo do mesmo no cadastro de oportunidades. 
	lRet := .T.
	
EndIf

(cAliasTRB)->(DbCloseArea())

RestArea(aArea)

Return(lRet)
//-------------------------------------
/*	Modelo de Dados
@author  	Leandro Paulino / Jefferson Tomaz
@version 	P10 R1.4
@build		7.00.101202A
@since 		06/04/2011
@return 		oModel Objeto do Modelo*/
//-------------------------------------
Static Function ModelDef()
Local oModel 	   := Nil
Local oStructSA1	:= Nil
Local lIntGFE     := SuperGetMv("MV_INTGFE",,.F.)

If GetBuild() >= '7.00.101202A'
	
	oStructSA1 := FwFormStruct(1,"SA1")
	
	If lIntGFE
		oStructSA1:AddField( ;                    // Ord. Tipo Desc.
		"Cli.Filial"                     , ;      // [01]  C   Titulo do campo
		"Cliente Filial "                , ;      // [02]  C   ToolTip do campo
		"A1_CLIFIL"                      , ;      // [03]  C   Id do Field
		'C'                              , ;      // [04]  C   Tipo do campo
		1                                , ;      // [05]  N   Tamanho do campo
		0                                , ;      // [06]  N   Decimal do campo
		NIL                              , ;      // [07]  B   Code-block de validação do campo
		NIL                              , ;      // [08]  B   Code-block de validação When do campo
		NIL                              , ;      // [09]  A   Lista de valores permitido do campo
		NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatório
		FwBuildFeature( STRUCT_FEATURE_INIPAD,'A030CliFil(SA1->A1_CGC)' ), ;   // [11]  B   Code-block de inicializacao do campo
		NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
		NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operação de update.
		.T.                              )        // [14]  L   Indica se o campo é virtual
		
		oStructSA1:AddField( ;                    // Ord. Tipo Desc.
		"IBGE Compl"                     , ;      // [01]  C   Titulo do campo
		"Cod.IBGE Compl "                , ;      // [02]  C   ToolTip do campo
		"A1_CDIBGE"                      , ;      // [03]  C   Id do Field
		'C'                              , ;      // [04]  C   Tipo do campo
		7                                , ;      // [05]  N   Tamanho do campo
		0                                , ;      // [06]  N   Decimal do campo
		NIL                              , ;      // [07]  B   Code-block de validação do campo
		NIL                              , ;      // [08]  B   Code-block de validação When do campo
		NIL                              , ;      // [09]  A   Lista de valores permitido do campo
		NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatório
		FwBuildFeature( STRUCT_FEATURE_INIPAD,'TMS120CdUf(SA1->A1_EST, "1") + SA1->A1_COD_MUN' ), ;   // [11]  B   Code-block de inicializacao do campo
		NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
		NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operação de update.
		.T.                              )        // [14]  L   Indica se o campo é virtual
		
		oStructSA1:AddTrigger( ;
		"A1_COD_MUN", ;                                                      // [01] Id do campo de origem
		"A1_CDIBGE" , ;                                                      // [02] Id do campo de destino
		{|| .T. }   , ;                                                      // [03] Bloco de codigo de validação da execução do gatilho
		&( ' { | oModel |  TMS120CdUf(M->A1_EST, "1") + M->A1_COD_MUN } ' ) )   // [04] Bloco de codigo de execução do gatilho
		
	EndIf
	
	// Tira validação da estrutura
	oStructSA1:SetProperty( '*', MODEL_FIELD_VALID, FWBuildFeature( STRUCT_FEATURE_VALID, '.T.' ) )   
	oStructSA1:SetProperty( '*'         , MODEL_FIELD_WHEN,  NIL )
	
	oModel:= MpFormModel():New("MATA030",/*bPreValid*/,/*bPosValid*/,/*Commit*/,/*Cancel*/)
	oModel:AddFields("MATA030_SA1",Nil,oStructSA1,/*bPreValid*/,/*bPosValid*/,/*Carga*/)
	oModel:SetDescription(STR0006)
	oModel:GetModel("MATA030_SA1"):SetDescription(STR0006)
	oModel:SetPrimaryKey({"A1_COD","A1_LOJA"})
	
EndIf

Return ( oModel )

//----------------------------------------------------------
/*	Cliente Filial
@author  	Leandro Paulino
@version 	P10 R1.4
@build		7.00.101202A
@since 		06/04/2011
@return 		cRet Identificação se o fornecedor é uma filial*/
//-----------------------------------------------------------
Function A030CliFil(cCnpj)

Local cRet      := '2' 
Local aDadosEmp := FwLoadSM0()

If !Empty(aDadosEmp) .And. Ascan(aDadosEmp,{ |x| x[SM0_CGC] == cCnpj }) > 0
	cRet := "1" // Sim
EndIf

Return cRet	      

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MATA030   ºAutor  ³Microsiga           º Data ³  07/22/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Ajusta SCF para que adicione PAISES INTRACOMUNITARIOS  que º±±
±±º          ³ nao será valiudado NIF.                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function AjustaSCF()

If cPaisLoc=="PTG" .And. AliasInDic("SCF")
	DbSelectArea( "SCF" )
	DbSetOrder(1)
	If !DbSeek( xFilial("SCF")+"980000")
		Reclock("SCF", .T.)
		SCF->CF_FILIAL 	:= xFilial("SCF")
		SCF->CF_CBAIRRO	:= "980000"
		SCF->CF_BAIRRO	:= "PAISES INTRACOMUNITARIOS"
		SCF->CF_CODMUN	:= "9800"
		SCF->CF_EST		:= "98"
		MsUnlock()
	EndIf	
EndIF

Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±º Function  ³ IntegDef º Autor ³ Marcelo C. Coutinho  º Data ³  28/10/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Descricao ³ Funcao de tratamento para o recebimento/envio de mensagem    º±±
±±º           ³ unica de cadastro de clientes.                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Uso       ³ MATA030                                                      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function IntegDef( cXML, nTypeTrans, cTypeMessage )

Local aRet := {}
//a funcao integdef original foi transferida para o fonte mati030, conforme novas regras de mensagem unica.
aRet:= MATI030( cXml, nTypeTrans, cTypeMessage )

Return aRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ A080Hist     ºAutor  ³Wemerson Randolfo     º Data ³ 03/09/12 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Visualizacao do historico das alteracoes                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ Nao ha                                                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ .T. ou .F.                                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAplicacao ³ Funcao chamada pelo menu                                      º±±
±±º          ³                                                               º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A030Hist()
Local lRet

lRet := HistOperFis("SS2",SA1->A1_COD,SA1->A1_NOME,"S2_COD")
Return lRet
                    

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ A30ValJUR    ºAutor  ³Microsiga             º Data ³ 06/06/13 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Verifica se o cliente pode ser excluido no modulo Juridico    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ Nao ha                                                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ .T. ou .F.                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function	A30ValJUR()
Local aArea := GetArea()
Local oModel
Local lRet  := .T.

NUH->( dbSetOrder( 1 ) )

If NUH->( dbSeek( xFilial( 'NUH' ) + SA1->A1_COD + SA1->A1_LOJA ) )
	oModel := FWLoadModel( 'JURA148' )
	oModel:SetOperation( MODEL_OPERATION_DELETE )
	oModel:Activate()
	
	If !oModel:VldData()
		lRet := .F.
		JurMsgErro()
	EndIf
	
	oModel:Deactivate()
EndIf

RestArea( aArea )
Return lRet


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ A30DelJUR    ºAutor  ³Microsiga             º Data ³ 06/06/13 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Deleta o cliente no modulo Juridico                           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ Nao ha                                                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ .T. ou .F.                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function	A30DelJUR(aErrorJUR)
Local aArea := GetArea()
Local oModel
Local lRet := .T.

NUH->( dbSetOrder( 1 ) )

If NUH->( dbSeek( xFilial( 'NUH' ) + SA1->A1_COD + SA1->A1_LOJA ) )
	oModel := FWLoadModel( 'JURA148' )
	oModel:SetOperation( MODEL_OPERATION_DELETE )
	oModel:Activate()
	
	If oModel:VldData()
		oModel:CommitData()
	Else
		lRet := .F.                
		aErrorJUR := oModel:GetErrorMessage()
	EndIf
	oModel:Deactivate()
EndIf

RestArea( aArea )
Return lRet  

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A030VldEnt º Autor ³ Vendas CRM        º Data ³  22/05/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Efetua a validacao da origem para saber se o campo          º±±
±±º          ³ACH_ENTORI pode ser editavel.                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³TmkA341                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A030VldEnt()
Local lRet := .F.

If M->A1_ORIGCT $ "1|2|5|7" 
	 lRet := .T.
EndIf

Return (lRet)



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ A030VldCd º Autor ³ Vendas CRM        º Data ³  22/05/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Efetua a validacao para saber se o codigo que o usuario     º±±
±±º          ³digitou existe na tabela	                                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³TmkA341                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/                 
Function A030VldCd()   
Local lRet	:=	.F. 

// 1=Mailing;2=Campanha;3=Web;4=Indicacao;5=Evento;6=Anuncio;7=Parceiro;8=Relacoes publicas;9=Seminario;A=Boca-a-boca;B=Outros

Do Case
	Case M->A1_ORIGCT == "1" .AND. !Empty(M->A1_ENTORI)	//1=Mailing
		lRet := ExistCpo("SA2", M->A1_ENTORI)
	Case M->A1_ORIGCT == "2" .AND. !Empty(M->A1_ENTORI)	//2=Campanha
		lRet := ExistCpo("SUO", M->A1_ENTORI)
	Case M->A1_ORIGCT == "5"	.AND. !Empty(M->A1_ENTORI)	//5=Evento
		lRet := ExistCpo("ACD", M->A1_ENTORI)
	Case M->A1_ORIGCT == "7" .AND. !Empty(M->A1_ENTORI)	//7=Parceiro 
		lRet := ExistCpo("AC4", M->A1_ENTORI)
	Case Empty(M->A1_ENTORI)
		lRet := .T.
EndCase
Return(lRet)  


//------------------------------------------------------------------------------
/*/{Protheus.doc} Ma030Mile

Importa layout do acelerador MILE referente ao adapter MATA030 (Cliente)

@sample 	Ma030Mile() 

@param		
	
@return	Verdeiro ou Falso

@author	Aline Kokumai
@since		21/06/2013       
@version	P11.80   
/*/
//------------------------------------------------------------------------------

Function Ma030Mile()

Local lRetorno 	:= .T.									//Retorno da função
Local cCode 		:= 'SA1LAY01' 							//Codigo do layout
Local cDesc 		:= STR0079								//Descrição do layout: 'LAYOUT IMPORTACAO DE CLIENTE'
Local cAdapter		:= 'MATA030'							//Nome do adapter
Local cType		:= '1'									//Código tipo
Local cAtivo		:= '1'									//Código ativo
Local cLayout		:= ""

		
cLayout := '<?xml version="1.0" encoding="UTF-8"?><CFGA600 Operation="4" version="1.01">'+;
					'<XZ1MASTER modeltype="FIELDS" >'+;
						'<XZ1_LAYOUT order="1"><value>SA1LAY01</value></XZ1_LAYOUT>'+;
						'<XZ1_TYPE order="2"><value>1</value></XZ1_TYPE>'+;
						'<XZ1_DESC order="3"><value>'+STR0079+'</value></XZ1_DESC>'+;
						'<XZ1_ADAPT order="4"><value>MATA030</value></XZ1_ADAPT>'+;
						'<XZ1_STRUC order="5"><value>2</value></XZ1_STRUC>'+;
						'<XZ1_SEPARA order="6"><value>;</value></XZ1_SEPARA>'+;
						'<XZ1_TYPEXA order="7"><value>1</value></XZ1_TYPEXA>'+;
						'<XZ1_SEPINI order="8"><value>2</value></XZ1_SEPINI>'+;
						'<XZ1_SEPFIN order="9"><value>2</value></XZ1_SEPFIN>'+;
						'<XZ1_TABLE order="10"><value>SA1</value></XZ1_TABLE>'+;
						'<XZ1_DESTAB order="11"><value>'+STR0084+'</value></XZ1_DESTAB>'+; //Clientes
						'<XZ1_ORDER order="12"><value>1</value></XZ1_ORDER>'+;
						'<XZ1_SOURCE order="13"><value>0000</value></XZ1_SOURCE>'+;
						'<XZ1_TIPDAT order="17"><value>1</value></XZ1_TIPDAT>'+;
						'<XZ1_DECSEP order="18"><value>2</value></XZ1_DECSEP>'+;
						'<XZ1_EMULTC order="19"><value>2</value></XZ1_EMULTC>'+;
						'<XZ1_DETOPC order="20"><value>2</value></XZ1_DETOPC>'+;
						'<XZ1_IMPEXP order="22"><value>1</value></XZ1_IMPEXP>'+;
						'<XZ1_VERSIO order="23"><value>1.0</value></XZ1_VERSIO>'+;
						'<XZ1_MVCOPT order="24"><value>1</value></XZ1_MVCOPT>'+;
						'<XZ1_MVCMET order="25"><value>1</value></XZ1_MVCMET>'+;
					'<XZ2DETAIL modeltype="GRID">'+;
						'<struct>'+;
							'<XZ2_LAYOUT order="1"></XZ2_LAYOUT>'+;
							'<XZ2_SEQ order="2"></XZ2_SEQ>'+;
							'<XZ2_CHANEL order="3"></XZ2_CHANEL>'+;
							'<XZ2_SUPER order="4"></XZ2_SUPER>'+;
						'</struct>'+;
							'<items>'+;
								'<item id="1" deleted="0" >'+;
									'<XZ2_SEQ>01</XZ2_SEQ>'+;
									'<XZ2_CHANEL>01</XZ2_CHANEL>'+;
										'<XZ3DETAIL modeltype="FIELDS" >'+;
											'<XZ3_CHANEL order="2"><value>01</value></XZ3_CHANEL>'+;
											'<XZ3_DESC order="3"><value>'+STR0085+'</value></XZ3_DESC>'+; //CANAL 01
											'<XZ3_IDOUT order="4"><value>MASTER</value></XZ3_IDOUT>'+;
											'<XZ3_OCCURS order="5"><value>1</value></XZ3_OCCURS>'+;
										'</XZ3DETAIL>'+;
										'<XZ4DETAIL modeltype="GRID" optional="1">'+;
											'<struct>'+;
												'<XZ4_LAYOUT order="1"></XZ4_LAYOUT>'+;
												'<XZ4_CHANEL order="2"></XZ4_CHANEL>'+;
												'<XZ4_SEQ order="3"></XZ4_SEQ>'+;
												'<XZ4_FIELD order="4"></XZ4_FIELD>'+;
												'<XZ4_TYPFLD order="5"></XZ4_TYPFLD>'+;
												'<XZ4_EXEC order="6"></XZ4_EXEC>'+;
												'<XZ4_COND order="7"></XZ4_COND>'+;
												'<XZ4_NOVAL order="8"></XZ4_NOVAL>'+;
												'<XZ4_DESC order="9"></XZ4_DESC>'+;
												'<XZ4_OBS order="10"></XZ4_OBS>'+;
												'<XZ4_SOURCE order="11"></XZ4_SOURCE>'+;
											'</struct>'+;
												'<items>'+;
													'<item id="1" deleted="0" >'+;
														'<XZ4_SEQ>001</XZ4_SEQ>'+;
														'<XZ4_FIELD>A1_COD</XZ4_FIELD>'+;
														'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
														'<XZ4_EXEC>GETSXENUM(&quot;SA1&quot;,&quot;A1_COD&quot;)</XZ4_EXEC>'+;
														'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
														'<XZ4_DESC>'+Transform(RetTitle("A1_COD"), "@!")+'</XZ4_DESC>'+;
														'<XZ4_SOURCE>0001</XZ4_SOURCE>'+;
													'</item>'+;
												'<item id="2" deleted="0" >'+;
													'<XZ4_SEQ>002</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_LOJA</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_LOJA"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0002</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="3" deleted="0" >'+;
													'<XZ4_SEQ>003</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_NOME</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_NOME"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0003</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="4" deleted="0" >'+;
													'<XZ4_SEQ>004</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_NREDUZ</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_NREDUZ"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0004</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="5" deleted="0" >'+;
													'<XZ4_SEQ>005</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_TIPO</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_TIPO"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0005</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="6" deleted="0" >'+;
													'<XZ4_SEQ>006</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_END</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_END"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0006</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="7" deleted="0" >'+;
													'<XZ4_SEQ>007</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_MUN</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_MUN"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0007</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="8" deleted="0" >'+;
													'<XZ4_SEQ>008</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_EST</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_EST"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0008</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="9" deleted="0" >'+;
													'<XZ4_SEQ>009</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_COD_MUN</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_COD_MUN"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0009</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="10" deleted="0" >'+;
													'<XZ4_SEQ>010</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_COMPLEM</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_COMPLEM"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0010</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="11" deleted="0" >'+;
													'<XZ4_SEQ>011</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_BAIRRO</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_BAIRRO"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0011</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="12" deleted="0" >'+;
													'<XZ4_SEQ>012</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_CEP</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_EXEC>IIF(!Empty(xA),Strtran(Strtran(Strtran( xA, &quot;-&quot;, &quot;&quot; ),&quot;/&quot;,&quot;&quot;),&quot;.&quot;,&quot;&quot;),&quot;&quot;)</XZ4_EXEC>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_CEP"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0012</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="13" deleted="0" >'+;
													'<XZ4_SEQ>013</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_PAIS</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_PAIS"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0013</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="14" deleted="0" >'+;
													'<XZ4_SEQ>014</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_TPESSOA</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_TPESSOA"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0014</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="15" deleted="0" >'+;
													'<XZ4_SEQ>015</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_DDI</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_DDI"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0015</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="16" deleted="0" >'+;
													'<XZ4_SEQ>016</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_DDD</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_DDD"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0016</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="17" deleted="0" >'+;
													'<XZ4_SEQ>017</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_TEL</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_TEL"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0017</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="18" deleted="0" >'+;
													'<XZ4_SEQ>018</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_TELEX</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_TELEX"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0018</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="19" deleted="0" >'+;
													'<XZ4_SEQ>019</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_FAX</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_FAX"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0019</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="20" deleted="0" >'+;
													'<XZ4_SEQ>020</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_CONTATO</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_CONTATO"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0020</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="21" deleted="0" >'+;
													'<XZ4_SEQ>021</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_EMAIL</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_EMAIL"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0021</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="22" deleted="0" >'+;
													'<XZ4_SEQ>022</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_HPAGE</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_HPAGE"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0022</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="23" deleted="0" >'+;
													'<XZ4_SEQ>023</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_ORIGCT</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_ORIGCT"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0023</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="24" deleted="0" >'+;
													'<XZ4_SEQ>024</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_ENTORI</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_ENTORI"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0024</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="25" deleted="0" >'+;
													'<XZ4_SEQ>025</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_CGC</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_EXEC>IIF(!Empty(xA),Strtran(Strtran(Strtran( xA, &quot;-&quot;, &quot;&quot; ),&quot;/&quot;,&quot;&quot;),&quot;.&quot;,&quot;&quot;),&quot;&quot;)</XZ4_EXEC>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_CGC"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0025</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="26" deleted="0" >'+;
													'<XZ4_SEQ>026</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_PFISICA</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_PFISICA"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0026</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="27" deleted="0" >'+;
													'<XZ4_SEQ>027</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_INSCR</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_INSCR"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0027</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="28" deleted="0" >'+;
													'<XZ4_SEQ>028</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_INSCRM</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_INSCRM"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0028</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="29" deleted="0" >'+;
													'<XZ4_SEQ>029</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_DTNASC</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>D</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_DTNASC"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0029</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="30" deleted="0" >'+;
													'<XZ4_SEQ>030</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_CNAE</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_CNAE"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0030</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="31" deleted="0" >'+;
													'<XZ4_SEQ>031</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_MSBLQL</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_MSBLQL"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0031</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="32" deleted="0" >'+;
													'<XZ4_SEQ>032</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_INSCRUR</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_INSCRUR"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0032</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="33" deleted="0" >'+;
													'<XZ4_SEQ>033</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_ALIFIXA</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_ALIFIXA"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0033</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="34" deleted="0" >'+;
													'<XZ4_SEQ>034</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_NATUREZ</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_NATUREZ"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0034</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="35" deleted="0" >'+;
													'<XZ4_SEQ>035</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_VEND</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>C</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_VEND"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0035</XZ4_SOURCE>'+;
												'</item>'+;
												'<item id="36" deleted="0" >'+;
													'<XZ4_SEQ>036</XZ4_SEQ>'+;
													'<XZ4_FIELD>A1_COMIS</XZ4_FIELD>'+;
													'<XZ4_TYPFLD>N</XZ4_TYPFLD>'+;
													'<XZ4_NOVAL>2</XZ4_NOVAL>'+;
													'<XZ4_DESC>'+Transform(RetTitle("A1_COMIS"), "@!")+'</XZ4_DESC>'+;
													'<XZ4_SOURCE>0036</XZ4_SOURCE>'+;
												'</item>'+;
												'</items>'+;
											'</XZ4DETAIL>'+;
										'<XZ5DETAIL modeltype="GRID" optional="1">'+;
											'<struct>'+;
												'<XZ5_LAYOUT order="1"></XZ5_LAYOUT>'+;
												'<XZ5_CHANEL order="2"></XZ5_CHANEL>'+;
												'<XZ5_SEQ order="3"></XZ5_SEQ>'+;
												'<XZ5_FIELD order="4"></XZ5_FIELD>'+;
												'<XZ5_TYPFLD order="5"></XZ5_TYPFLD>'+;
												'<XZ5_EXEC order="6"></XZ5_EXEC>'+;
												'<XZ5_COND order="7"></XZ5_COND>'+;
												'<XZ5_OBS order="8"></XZ5_OBS>'+;
												'<XZ5_SOURCE order="9"></XZ5_SOURCE>'+;
											'</struct>'+;
										'</XZ5DETAIL>'+;
									'</item>'+;
								'</items>'+;
							'</XZ2DETAIL>'+;
						'</XZ1MASTER>'+;
					'</CFGA600>'

DbSelectArea("XXJ")
RecLock("XXJ",.T.)
XXJ->XXJ_CODE 		:= cCode
XXJ->XXJ_DESC 		:= cDesc
XXJ->XXJ_ADAPT	:= cAdapter
XXJ->XXJ_LAYOUT	:= cLayout
XXJ->XXJ_TYPE		:= cType
XXJ->XXJ_ACTIVE	:= cAtivo
XXJ->(MsUnLock())

Return(lRetorno)

//-----------------------------------------------------
/*/	Valid após a confirmação de inclusão/alteração/exclusão
@author Felipe Machado de Oliveira
@param nOperation = 3 - Incluir
                    4 - Alterar
                    5 - Excluir
@version P11
@since 18/04/2013
/*/
//------------------------------------------------------
Function MATA030IPG(nOperation)
Local lRet := .T.
Local lIntGFE := SuperGetMv("MV_INTGFE",.F.,.F.)
Local cIntGFE2 := SuperGetMv("MV_INTGFE2",.F.,"2")

Default nOperation := "3"

//Integração Protheus com SIGAGFE
If lIntGFE == .T. .And. cIntGFE2 $ "1"
	If !InterGU3C(nOperation)
		lRet := .F.
	EndIf
EndIf

Return lRet

//-----------------------------------------------------
/*/	Integra a tabela SA1(Protheus) com GU3(SIGAGFE) a cada registro novo
@author Felipe Machado de Oliveira
@param nOperation = 3 - Incluir
                    4 - Alterar
                    5 - Excluir
@version P11
@since 18/04/2013
/*/
//------------------------------------------------------
Static Function InterGU3C(nOperation)
Local aAreaAnt := GetArea()
Local aAreaGU3 := GU3->( GetArea() )
Local lRet :=  .T.
Local oModelGU3 := FWLoadModel("GFEA015")
Local nTpOpSetad
Local cMsg := ""
Local cIdClien
Local cRet := "2"
Local lNumProp   := SuperGetMv("MV_EMITMP",.F.,"0") == "1" .And. SuperGetMv("MV_INTGFE2",.F.,"2") == "1"

If !lNumProp
	cIdClien := RegraIdGU3(nOperation,@lRet,@cMsg)
EndIf

If lRet
	If !lNumProp
		dbSelectArea("GU3")
		GU3->( dbSetOrder(1) )
		GU3->( dbSeek( xFilial("GU3")+cIdClien ) )
		If !GU3->( Eof() ) .And. GU3->GU3_FILIAL == xFilial("GU3");
						 	.And. AllTrim(GU3->GU3_CDEMIT) == AllTrim(cIdClien)

			oModelGU3:SetOperation( MODEL_OPERATION_UPDATE )
			nTpOpSetad := MODEL_OPERATION_UPDATE
		Else
			oModelGU3:SetOperation( MODEL_OPERATION_INSERT )
			nTpOpSetad := MODEL_OPERATION_INSERT
		EndIf
	Else
		If nOperation == MODEL_OPERATION_INSERT .Or. nOperation == MODEL_OPERATION_UPDATE
			cIdClien := OMSM011COD(M->A1_COD,M->A1_LOJA,1,,)
		Else
			cIdClien := OMSM011COD(SA1->A1_COD,SA1->A1_LOJA,1,,)
		EndIf
		
		If Empty(cIdClien)
			oModelGU3:SetOperation(MODEL_OPERATION_INSERT)
			nTpOpSetad := MODEL_OPERATION_INSERT
		Else
			oModelGU3:SetOperation(MODEL_OPERATION_UPDATE)
			nTpOpSetad := MODEL_OPERATION_UPDATE
		EndIf
	EndIf

	oModelGU3:Activate()

	If nOperation <> MODEL_OPERATION_DELETE
		oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_NMEMIT', M->A1_NOME )
		oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_NMFAN' , M->A1_NREDUZ )
		oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_NATUR' , IIF(M->A1_TIPO <> 'X',M->A1_PESSOA,'X') )
		oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_DTNASC', M->A1_DTNASC )
		oModelGU3:LoadValue( 'GFEA015_GU3', 'GU3_EMFIL' , A030CLIFIL(M->A1_CGC) )
		oModelGU3:LoadValue( 'GFEA015_GU3', 'GU3_CLIEN' , '1' )
		oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_ENDER' , M->A1_END )
		oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_COMPL' , M->A1_COMPLEM )
		oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_BAIRRO', M->A1_BAIRRO )
		oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_CEP'   , M->A1_CEP )
		oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_NRCID' , TMS120CDUF(M->A1_EST, '1') + M->A1_COD_MUN )
		oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_NMCID' , SubStr(M->A1_MUN,1,50) )
		oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_UF'    , M->A1_EST )
		oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_IDFED' , IIF(M->A1_TIPO <> 'X',M->A1_CGC, '') )
		oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_IE'    , M->A1_INSCR )
		oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_IM'    , M->A1_INSCRM )
		oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_CXPOS' , SubStr(M->A1_CXPOSTA,1,10) )
		oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_EMAIL' , M->A1_EMAIL )
		oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_FONE1' , M->A1_TEL )
		oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_FAX'   , M->A1_FAX )
		oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_WSITE' , M->A1_HPAGE )
		
		If nTpOpSetad == MODEL_OPERATION_UPDATE
			If nOperation == MODEL_OPERATION_INSERT
				If GU3->GU3_SIT <> "1" .And. M->A1_MSBLQL <> "1"
					oModelGU3:LoadValue( 'GFEA015_GU3', 'GU3_SIT', "1" )
				EndIf
			EndIf
		Else
			oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_FILIAL',  xFilial("SA1") )
			
			If lNumProp
				oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_CDERP' , M->A1_COD )
				oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_CDCERP', M->A1_LOJA )
				oModelGU3:LoadValue( 'GFEA015_GU3', 'GU3_CDEMIT', "ZZZZZZZZZ" )
			Else
				oModelGU3:SetValue( 'GFEA015_GU3', 'GU3_CDEMIT', cIdClien )
			EndIf
			
			oModelGU3:LoadValue( 'GFEA015_GU3', 'GU3_ORIGEM', "2" )
		EndIf
		
		If M->A1_MSBLQL == "1"
			oModelGU3:LoadValue( 'GFEA015_GU3', 'GU3_CLIEN' , '2' )
			If GU3->GU3_FORN == "2" .And. GU3->GU3_EMFIL == "2" .And. GU3->GU3_TRANSP == "2" .And. GU3->GU3_AUTON == "2"
				oModelGU3:LoadValue( 'GFEA015_GU3', 'GU3_SIT', "2" )
			EndIf
		Else
			oModelGU3:LoadValue( 'GFEA015_GU3', 'GU3_CLIEN' , '1' )
			oModelGU3:LoadValue( 'GFEA015_GU3', 'GU3_SIT'   , '1' )
		EndIf
		
	Else
		If nTpOpSetad <> MODEL_OPERATION_INSERT
			oModelGU3:LoadValue( 'GFEA015_GU3', 'GU3_CLIEN' , '2' )
			cRet := IIF(GU3->GU3_FORN == "2" .And. GU3->GU3_EMFIL == "2" .And. GU3->GU3_TRANSP == "2" .And. GU3->GU3_AUTON == "2","2","1")

			If cRet <> "1"
				oModelGU3:LoadValue( "GFEA015_GU3", "GU3_SIT", cRet )
			EndIf
		EndIf
	EndIf
		
	If oModelGU3:VldData()
		oModelGU3:CommitData()
	Else
		cMsg := "Inconsistência com o Frete Embarcador (SIGAGFE): "+CRLF+CRLF+oModelGU3:GetErrorMessage()[6]+oModelGU3:GetErrorMessage()[4]
		lRet := .F.
	EndIf

	oModelGU3:Deactivate()

EndIf

If !lRet
	Help( ,, STR0023,,cMsg, 1, 0 ) //"Atenção"
EndIf

RestArea( aAreaGU3 )
RestArea( aAreaAnt )

Return lRet

//-----------------------------------------------------
/*/	Verifica valores dos campos SA4 e retorna valor correspondente
@author Felipe Machado de Oliveira
@param nOperation = 3 - Incluir
                    4 - Alterar
                    5 - Excluir
       lRet = retorno por referencia .T. ou .F.
       cMsg = retorno por referencia mensagem de erro 
@version P11
@since 18/04/2013
/*/
//------------------------------------------------------
Static Function RegraIdGU3(nOperation,lRet,cMsg)
Local cRet := ""

If nOperation == 3
	If M->A1_TIPO == "X"
		cRet := AllTrim(M->A1_COD) + AllTrim(M->A1_LOJA)
	Else
		If Empty(M->A1_CGC)
			cMsg := STR0080 //"Informe o campo CNPJ/CPF (A1_CGC)."
			lRet := .F.
		Else
			cRet := M->A1_CGC
		EndIf
	EndIf

ElseIf nOperation == 4
	If SA1->A1_TIPO == "X"
		If SA1->A1_TIPO <> M->A1_TIPO
			cMsg := STR0081 //"Não é possível alterar o Tipo para diferente de 'Exportação'."
			lRet := .F.
		Else
			cRet := AllTrim(SA1->A1_COD) + AllTrim(SA1->A1_LOJA)
		EndIf
	Else
		If M->A1_TIPO == "X"
			cMsg := STR0082 //"Não é possível alterar o Tipo para 'Exportação'."
			lRet := .F.
		Else
			If !Empty(SA1->A1_CGC)
				If SA1->A1_CGC <> M->A1_CGC
					cMsg := STR0083 //"CNPJ/CPF não pode ser alterado por servir como chave de identificação no SIGAGFE."
					lRet := .F.
				Else
					cRet := SA1->A1_CGC
				Endif
			Else
				If Empty(M->A1_CGC)
					cMsg := STR0080 //"Informe o campo CNPJ/CPF (A1_CGC)."
					lRet := .F.
				Else
					cRet := M->A1_CGC
				EndIf
			EndIf
		EndIf
	EndIf

ElseIf nOperation == 5
	If SA1->A1_TIPO == "X"
		cRet := AllTrim(SA1->A1_COD) + AllTrim(SA1->A1_LOJA)
	Else
		cRet := SA1->A1_CGC
	EndIf

EndIf

Return cRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³AjustaSX7 ³ Autor ³ Fabio Sampaio	        ³ Data ³30/04/2015³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Acerta os gatilhos                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³AjustaSX7()                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ TMSA350                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Static Function AjustaSX7()
Local aArea	:= GetArea()

dbSelectArea("SX7")
dbSetOrder(1) 

If dbSeek("A1_CDRDES")
	If AllTrim(SX7->X7_CHAVE) <> 'xFilial("DUY")+M->A1_CDRDES'
		RecLock("SX7", .F. )      
		SX7->X7_CHAVE   	:= 'xFilial("DUY")+M->A1_CDRDES'
		MsUnLock()
	EndIf		
EndIf

RestArea( aArea )

Return Nil